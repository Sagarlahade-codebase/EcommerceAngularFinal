{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isTransactionMeta } from '../types/Transaction.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000;\nfunction pruneSharedStorage(storageManager) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\nfunction saveTransactionToSharedStorage(storageManager, state, meta) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\nfunction loadTransactionFromSharedStorage(storageManager, state) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\nfunction clearTransactionFromSharedStorage(storageManager, state) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\nexport { clearTransactionFromSharedStorage, loadTransactionFromSharedStorage, pruneSharedStorage, saveTransactionToSharedStorage };","map":{"version":3,"names":["isTransactionMeta","MAX_ENTRY_LIFETIME","pruneSharedStorage","storageManager","sharedStorage","getSharedTansactionStorage","entries","getStorage","Object","keys","forEach","state","entry","age","Date","now","dateCreated","setStorage","saveTransactionToSharedStorage","meta","transaction","loadTransactionFromSharedStorage","clearTransactionFromSharedStorage"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/util/sharedStorage.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isTransactionMeta } from '../types/Transaction.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000;\nfunction pruneSharedStorage(storageManager) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    Object.keys(entries).forEach(state => {\n        const entry = entries[state];\n        const age = Date.now() - entry.dateCreated;\n        if (age > MAX_ENTRY_LIFETIME) {\n            delete entries[state];\n        }\n    });\n    sharedStorage.setStorage(entries);\n}\nfunction saveTransactionToSharedStorage(storageManager, state, meta) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    entries[state] = {\n        dateCreated: Date.now(),\n        transaction: meta\n    };\n    sharedStorage.setStorage(entries);\n}\nfunction loadTransactionFromSharedStorage(storageManager, state) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    const entry = entries[state];\n    if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n        return entry.transaction;\n    }\n    return null;\n}\nfunction clearTransactionFromSharedStorage(storageManager, state) {\n    const sharedStorage = storageManager.getSharedTansactionStorage();\n    const entries = sharedStorage.getStorage();\n    delete entries[state];\n    sharedStorage.setStorage(entries);\n}\n\nexport { clearTransactionFromSharedStorage, loadTransactionFromSharedStorage, pruneSharedStorage, saveTransactionToSharedStorage };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,iBAAiB,QAAQ,yBAAyB;AAC3D,OAAO,qBAAqB;AAC5B,OAAO,uBAAuB;AAE9B,MAAMC,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI;AACzC,SAASC,kBAAkBA,CAACC,cAAc,EAAE;EACxC,MAAMC,aAAa,GAAGD,cAAc,CAACE,0BAA0B,CAAC,CAAC;EACjE,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAU,CAAC,CAAC;EAC1CC,MAAM,CAACC,IAAI,CAACH,OAAO,CAAC,CAACI,OAAO,CAACC,KAAK,IAAI;IAClC,MAAMC,KAAK,GAAGN,OAAO,CAACK,KAAK,CAAC;IAC5B,MAAME,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,KAAK,CAACI,WAAW;IAC1C,IAAIH,GAAG,GAAGZ,kBAAkB,EAAE;MAC1B,OAAOK,OAAO,CAACK,KAAK,CAAC;IACzB;EACJ,CAAC,CAAC;EACFP,aAAa,CAACa,UAAU,CAACX,OAAO,CAAC;AACrC;AACA,SAASY,8BAA8BA,CAACf,cAAc,EAAEQ,KAAK,EAAEQ,IAAI,EAAE;EACjE,MAAMf,aAAa,GAAGD,cAAc,CAACE,0BAA0B,CAAC,CAAC;EACjE,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAU,CAAC,CAAC;EAC1CD,OAAO,CAACK,KAAK,CAAC,GAAG;IACbK,WAAW,EAAEF,IAAI,CAACC,GAAG,CAAC,CAAC;IACvBK,WAAW,EAAED;EACjB,CAAC;EACDf,aAAa,CAACa,UAAU,CAACX,OAAO,CAAC;AACrC;AACA,SAASe,gCAAgCA,CAAClB,cAAc,EAAEQ,KAAK,EAAE;EAC7D,MAAMP,aAAa,GAAGD,cAAc,CAACE,0BAA0B,CAAC,CAAC;EACjE,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAU,CAAC,CAAC;EAC1C,MAAMK,KAAK,GAAGN,OAAO,CAACK,KAAK,CAAC;EAC5B,IAAIC,KAAK,IAAIA,KAAK,CAACQ,WAAW,IAAIpB,iBAAiB,CAACY,KAAK,CAACQ,WAAW,CAAC,EAAE;IACpE,OAAOR,KAAK,CAACQ,WAAW;EAC5B;EACA,OAAO,IAAI;AACf;AACA,SAASE,iCAAiCA,CAACnB,cAAc,EAAEQ,KAAK,EAAE;EAC9D,MAAMP,aAAa,GAAGD,cAAc,CAACE,0BAA0B,CAAC,CAAC;EACjE,MAAMC,OAAO,GAAGF,aAAa,CAACG,UAAU,CAAC,CAAC;EAC1C,OAAOD,OAAO,CAACK,KAAK,CAAC;EACrBP,aAAa,CAACa,UAAU,CAACX,OAAO,CAAC;AACrC;AAEA,SAASgB,iCAAiC,EAAED,gCAAgC,EAAEnB,kBAAkB,EAAEgB,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"module"}