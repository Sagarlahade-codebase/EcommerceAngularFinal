{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\nclass WebauthnVerification extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n    const obj = credentials || values;\n    const {\n      clientData,\n      authenticatorData,\n      signatureData\n    } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n  mapCredentials(values) {\n    const {\n      credentials,\n      authenticatorData,\n      clientData,\n      signatureData\n    } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || {\n      authenticatorData,\n      clientData,\n      signatureData\n    };\n  }\n  getInputs() {\n    return [{\n      name: 'authenticatorData',\n      type: 'string',\n      label: 'Authenticator Data',\n      required: true,\n      visible: false\n    }, {\n      name: 'clientData',\n      type: 'string',\n      label: 'Client Data',\n      required: true,\n      visible: false\n    }, {\n      name: 'signatureData',\n      type: 'string',\n      label: 'Signature Data',\n      required: true,\n      visible: false\n    }];\n  }\n}\nexport { WebauthnVerification };","map":{"version":3,"names":["Authenticator","WebauthnVerification","canVerify","values","credentials","obj","clientData","authenticatorData","signatureData","mapCredentials","getInputs","name","type","label","required","visible"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/WebauthnVerification.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\n\nclass WebauthnVerification extends Authenticator {\n    canVerify(values) {\n        const { credentials } = values;\n        const obj = credentials || values;\n        const { clientData, authenticatorData, signatureData } = obj;\n        return !!(clientData && authenticatorData && signatureData);\n    }\n    mapCredentials(values) {\n        const { credentials, authenticatorData, clientData, signatureData } = values;\n        if (!credentials && !authenticatorData && !clientData && !signatureData) {\n            return;\n        }\n        return credentials || ({\n            authenticatorData,\n            clientData,\n            signatureData\n        });\n    }\n    getInputs() {\n        return [\n            { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n            { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n            { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n        ];\n    }\n}\n\nexport { WebauthnVerification };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,oBAAoB;AAElD,MAAMC,oBAAoB,SAASD,aAAa,CAAC;EAC7CE,SAASA,CAACC,MAAM,EAAE;IACd,MAAM;MAAEC;IAAY,CAAC,GAAGD,MAAM;IAC9B,MAAME,GAAG,GAAGD,WAAW,IAAID,MAAM;IACjC,MAAM;MAAEG,UAAU;MAAEC,iBAAiB;MAAEC;IAAc,CAAC,GAAGH,GAAG;IAC5D,OAAO,CAAC,EAAEC,UAAU,IAAIC,iBAAiB,IAAIC,aAAa,CAAC;EAC/D;EACAC,cAAcA,CAACN,MAAM,EAAE;IACnB,MAAM;MAAEC,WAAW;MAAEG,iBAAiB;MAAED,UAAU;MAAEE;IAAc,CAAC,GAAGL,MAAM;IAC5E,IAAI,CAACC,WAAW,IAAI,CAACG,iBAAiB,IAAI,CAACD,UAAU,IAAI,CAACE,aAAa,EAAE;MACrE;IACJ;IACA,OAAOJ,WAAW,IAAK;MACnBG,iBAAiB;MACjBD,UAAU;MACVE;IACJ,CAAE;EACN;EACAE,SAASA,CAAA,EAAG;IACR,OAAO,CACH;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAM,CAAC,EAC1G;MAAEJ,IAAI,EAAE,YAAY;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,aAAa;MAAEC,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAM,CAAC,EAC5F;MAAEJ,IAAI,EAAE,eAAe;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,QAAQ,EAAE,IAAI;MAAEC,OAAO,EAAE;IAAM,CAAC,CACrG;EACL;AACJ;AAEA,SAASd,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module"}