{"ast":null,"code":"import '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { getMessage, getMessageKey } from './i18nTransformer.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst convertErrorMessageToErrorSummary = (formName, remediationValues = []) => {\n  return oktaUnderscore.chain(remediationValues).filter(field => {\n    var _field$messages;\n    return Array.isArray((_field$messages = field.messages) === null || _field$messages === void 0 ? void 0 : _field$messages.value) && field.messages.value.length;\n  }).map(field => {\n    return {\n      property: formName ? `${formName}.${field.name}` : field.name,\n      errorSummary: field.messages.value.map(getMessage),\n      errorKey: field.messages.value.map(getMessageKey)\n    };\n  }).value();\n};\n/**\n * Although time complexity is O(n^2),\n * the `array` is actually very small (size < 5),\n * hence performance doesn't matter.\n */\n\nconst uniqWith = (array, comparator) => {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n  if (!oktaUnderscore.isFunction(comparator) || array.length === 1) {\n    return array;\n  }\n  const result = [];\n  for (let i = 0; i < array.length; i++) {\n    let seen = false;\n    for (let j = i + 1; j < array.length; j++) {\n      /* eslint max-depth: [2, 3] */\n      if (comparator(array[i], array[j])) {\n        seen = true;\n        break;\n      }\n    }\n    if (!seen) {\n      result.push(array[i]);\n    }\n  }\n  return result;\n};\n/**\n * returns errors\n * @example\n * errors = [\n *   {property : fieldName1, errorSummary: [errorMessage1]},\n *   {property : fieldName2, errorSummary: [errorMessage2]}\n *   {property : fieldName3, errorSummary: [errorMessage31, errorMessage32]}\n * ]\n */\n\nconst getRemediationErrors = res => {\n  let errors = [];\n  if (!res.remediation || !Array.isArray(res.remediation.value) || res.remediation.value.length === 0) {\n    return errors;\n  }\n  let remediationFormFields = res.remediation.value[0].value;\n  if (!Array.isArray(remediationFormFields)) {\n    return errors;\n  } // error at field\n\n  errors.push(convertErrorMessageToErrorSummary(null, remediationFormFields));\n  oktaUnderscore.each(remediationFormFields, remediationForm => {\n    var _remediationForm$form;\n    const formName = remediationForm.name; // error at form.value\n\n    if (Array.isArray((_remediationForm$form = remediationForm.form) === null || _remediationForm$form === void 0 ? void 0 : _remediationForm$form.value)) {\n      errors.push(convertErrorMessageToErrorSummary(formName, remediationForm.form.value));\n    } // error at option.value.form.value\n\n    if (Array.isArray(remediationForm.options)) {\n      oktaUnderscore.each(remediationForm.options, option => {\n        var _option$value, _option$value$form;\n        if (Array.isArray((_option$value = option.value) === null || _option$value === void 0 ? void 0 : (_option$value$form = _option$value.form) === null || _option$value$form === void 0 ? void 0 : _option$value$form.value)) {\n          errors.push(convertErrorMessageToErrorSummary(formName, option.value.form.value));\n        }\n      });\n    }\n  }); // API may return identical error on same field\n  // thus run through `uniqWith`.\n  // Check unit test for details.\n\n  return uniqWith(oktaUnderscore.flatten(errors), oktaUnderscore.isEqual);\n};\n/**\n * return global error summary combined into one string\n * allErrors = 'error string1. error string2'\n */\n\nconst getGlobalErrors = res => {\n  var _res$messages;\n  let allErrors = [];\n  if (Array.isArray((_res$messages = res.messages) === null || _res$messages === void 0 ? void 0 : _res$messages.value)) {\n    allErrors = res.messages.value.map(getMessage);\n  }\n  return allErrors.join('. ');\n};\n/**\n * return array of error keys\n */\n\nconst getGlobalErrorKeys = res => {\n  var _res$messages2;\n  let allKeys = [];\n  if (Array.isArray((_res$messages2 = res.messages) === null || _res$messages2 === void 0 ? void 0 : _res$messages2.value)) {\n    allKeys = res.messages.value.map(getMessageKey);\n  }\n  return allKeys;\n};\nconst convertFormErrors = response => {\n  let errors = {\n    errorCauses: getRemediationErrors(response),\n    errorSummary: getGlobalErrors(response),\n    errorSummaryKeys: getGlobalErrorKeys(response),\n    errorIntent: response.intent\n  };\n  return {\n    responseJSON: errors\n  };\n};\nconst isIonErrorResponse = (response = {}) => {\n  // check if error format is an ION response by looking for version attribute.\n  // a little sloppy.\n  return response.version;\n};\nconst isIdxSessionExpiredError = response => {\n  var _response$context, _response$context$mes, _response$context$mes2, _response$context$mes3;\n  const errorI18NKey = response === null || response === void 0 ? void 0 : (_response$context = response.context) === null || _response$context === void 0 ? void 0 : (_response$context$mes = _response$context.messages) === null || _response$context$mes === void 0 ? void 0 : (_response$context$mes2 = _response$context$mes.value[0]) === null || _response$context$mes2 === void 0 ? void 0 : (_response$context$mes3 = _response$context$mes2.i18n) === null || _response$context$mes3 === void 0 ? void 0 : _response$context$mes3.key;\n  return errorI18NKey && errorI18NKey === 'idx.session.expired';\n};\nvar IonResponseHelper = {\n  convertFormErrors: convertFormErrors,\n  isIonErrorResponse: isIonErrorResponse,\n  isIdxSessionExpiredError: isIdxSessionExpiredError\n};\nexport { IonResponseHelper as default };","map":{"version":3,"names":["oktaUnderscore","getMessage","getMessageKey","convertErrorMessageToErrorSummary","formName","remediationValues","chain","filter","field","_field$messages","Array","isArray","messages","value","length","map","property","name","errorSummary","errorKey","uniqWith","array","comparator","isFunction","result","i","seen","j","push","getRemediationErrors","res","errors","remediation","remediationFormFields","each","remediationForm","_remediationForm$form","form","options","option","_option$value","_option$value$form","flatten","isEqual","getGlobalErrors","_res$messages","allErrors","join","getGlobalErrorKeys","_res$messages2","allKeys","convertFormErrors","response","errorCauses","errorSummaryKeys","errorIntent","intent","responseJSON","isIonErrorResponse","version","isIdxSessionExpiredError","_response$context","_response$context$mes","_response$context$mes2","_response$context$mes3","errorI18NKey","context","i18n","key","IonResponseHelper","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/ion/IonResponseHelper.js"],"sourcesContent":["import '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { getMessage, getMessageKey } from './i18nTransformer.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst convertErrorMessageToErrorSummary = (formName, remediationValues = []) => {\n  return oktaUnderscore.chain(remediationValues).filter(field => {\n    var _field$messages;\n\n    return Array.isArray((_field$messages = field.messages) === null || _field$messages === void 0 ? void 0 : _field$messages.value) && field.messages.value.length;\n  }).map(field => {\n    return {\n      property: formName ? `${formName}.${field.name}` : field.name,\n      errorSummary: field.messages.value.map(getMessage),\n      errorKey: field.messages.value.map(getMessageKey)\n    };\n  }).value();\n};\n/**\n * Although time complexity is O(n^2),\n * the `array` is actually very small (size < 5),\n * hence performance doesn't matter.\n */\n\n\nconst uniqWith = (array, comparator) => {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  if (!oktaUnderscore.isFunction(comparator) || array.length === 1) {\n    return array;\n  }\n\n  const result = [];\n\n  for (let i = 0; i < array.length; i++) {\n    let seen = false;\n\n    for (let j = i + 1; j < array.length; j++) {\n      /* eslint max-depth: [2, 3] */\n      if (comparator(array[i], array[j])) {\n        seen = true;\n        break;\n      }\n    }\n\n    if (!seen) {\n      result.push(array[i]);\n    }\n  }\n\n  return result;\n};\n/**\n * returns errors\n * @example\n * errors = [\n *   {property : fieldName1, errorSummary: [errorMessage1]},\n *   {property : fieldName2, errorSummary: [errorMessage2]}\n *   {property : fieldName3, errorSummary: [errorMessage31, errorMessage32]}\n * ]\n */\n\n\nconst getRemediationErrors = res => {\n  let errors = [];\n\n  if (!res.remediation || !Array.isArray(res.remediation.value) || res.remediation.value.length === 0) {\n    return errors;\n  }\n\n  let remediationFormFields = res.remediation.value[0].value;\n\n  if (!Array.isArray(remediationFormFields)) {\n    return errors;\n  } // error at field\n\n\n  errors.push(convertErrorMessageToErrorSummary(null, remediationFormFields));\n\n  oktaUnderscore.each(remediationFormFields, remediationForm => {\n    var _remediationForm$form;\n\n    const formName = remediationForm.name; // error at form.value\n\n    if (Array.isArray((_remediationForm$form = remediationForm.form) === null || _remediationForm$form === void 0 ? void 0 : _remediationForm$form.value)) {\n      errors.push(convertErrorMessageToErrorSummary(formName, remediationForm.form.value));\n    } // error at option.value.form.value\n\n\n    if (Array.isArray(remediationForm.options)) {\n      oktaUnderscore.each(remediationForm.options, option => {\n        var _option$value, _option$value$form;\n\n        if (Array.isArray((_option$value = option.value) === null || _option$value === void 0 ? void 0 : (_option$value$form = _option$value.form) === null || _option$value$form === void 0 ? void 0 : _option$value$form.value)) {\n          errors.push(convertErrorMessageToErrorSummary(formName, option.value.form.value));\n        }\n      });\n    }\n  }); // API may return identical error on same field\n  // thus run through `uniqWith`.\n  // Check unit test for details.\n\n\n  return uniqWith(oktaUnderscore.flatten(errors), oktaUnderscore.isEqual);\n};\n/**\n * return global error summary combined into one string\n * allErrors = 'error string1. error string2'\n */\n\n\nconst getGlobalErrors = res => {\n  var _res$messages;\n\n  let allErrors = [];\n\n  if (Array.isArray((_res$messages = res.messages) === null || _res$messages === void 0 ? void 0 : _res$messages.value)) {\n    allErrors = res.messages.value.map(getMessage);\n  }\n\n  return allErrors.join('. ');\n};\n/**\n * return array of error keys\n */\n\n\nconst getGlobalErrorKeys = res => {\n  var _res$messages2;\n\n  let allKeys = [];\n\n  if (Array.isArray((_res$messages2 = res.messages) === null || _res$messages2 === void 0 ? void 0 : _res$messages2.value)) {\n    allKeys = res.messages.value.map(getMessageKey);\n  }\n\n  return allKeys;\n};\n\nconst convertFormErrors = response => {\n  let errors = {\n    errorCauses: getRemediationErrors(response),\n    errorSummary: getGlobalErrors(response),\n    errorSummaryKeys: getGlobalErrorKeys(response),\n    errorIntent: response.intent\n  };\n  return {\n    responseJSON: errors\n  };\n};\n\nconst isIonErrorResponse = (response = {}) => {\n  // check if error format is an ION response by looking for version attribute.\n  // a little sloppy.\n  return response.version;\n};\n\nconst isIdxSessionExpiredError = response => {\n  var _response$context, _response$context$mes, _response$context$mes2, _response$context$mes3;\n\n  const errorI18NKey = response === null || response === void 0 ? void 0 : (_response$context = response.context) === null || _response$context === void 0 ? void 0 : (_response$context$mes = _response$context.messages) === null || _response$context$mes === void 0 ? void 0 : (_response$context$mes2 = _response$context$mes.value[0]) === null || _response$context$mes2 === void 0 ? void 0 : (_response$context$mes3 = _response$context$mes2.i18n) === null || _response$context$mes3 === void 0 ? void 0 : _response$context$mes3.key;\n  return errorI18NKey && errorI18NKey === 'idx.session.expired';\n};\n\nvar IonResponseHelper = {\n  convertFormErrors: convertFormErrors,\n  isIonErrorResponse: isIonErrorResponse,\n  isIdxSessionExpiredError: isIdxSessionExpiredError\n};\n\nexport { IonResponseHelper as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}