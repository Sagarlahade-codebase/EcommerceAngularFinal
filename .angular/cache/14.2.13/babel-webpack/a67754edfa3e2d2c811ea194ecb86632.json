{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nclass SdkClock {\n  constructor(localOffset) {\n    this.localOffset = parseInt(localOffset || 0);\n  }\n  static create() {\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\nexport { SdkClock as default };","map":{"version":3,"names":["SdkClock","constructor","localOffset","parseInt","create","now","Date","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/clock.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nclass SdkClock {\n    constructor(localOffset) {\n        this.localOffset = parseInt(localOffset || 0);\n    }\n    static create( ) {\n        var localOffset = 0;\n        return new SdkClock(localOffset);\n    }\n    now() {\n        var now = (Date.now() + this.localOffset) / 1000;\n        return now;\n    }\n}\n\nexport { SdkClock as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,CAAC;EACXC,WAAWA,CAACC,WAAW,EAAE;IACrB,IAAI,CAACA,WAAW,GAAGC,QAAQ,CAACD,WAAW,IAAI,CAAC,CAAC;EACjD;EACA,OAAOE,MAAMA,CAAA,EAAI;IACb,IAAIF,WAAW,GAAG,CAAC;IACnB,OAAO,IAAIF,QAAQ,CAACE,WAAW,CAAC;EACpC;EACAG,GAAGA,CAAA,EAAG;IACF,IAAIA,GAAG,GAAG,CAACC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI,CAACH,WAAW,IAAI,IAAI;IAChD,OAAOG,GAAG;EACd;AACJ;AAEA,SAASL,QAAQ,IAAIO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}