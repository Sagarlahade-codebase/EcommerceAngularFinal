{"ast":null,"code":"import { loc } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Duo from '../../../packages/vendor/duo_web_sdk/index.js';\nimport Q from 'q';\nimport fn from '../../util/FactorUtil.js';\nimport FormController from '../util/FormController.js';\nimport FooterMFA from '../views/shared/FooterMFA.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar VerifyDuoController = FormController.extend({\n  className: 'mfa-verify-duo duo-form',\n  Model: {\n    props: {\n      host: 'string',\n      signature: 'string',\n      postAction: 'string',\n      factorId: 'string',\n      stateToken: 'string',\n      rememberDevice: 'boolean'\n    },\n    initialize: function () {\n      const rememberDevice = fn.getRememberDeviceValue(this.appState); // set the initial value for remember device (Cannot do this while defining the\n      // local property because this.settings would not be initialized there yet).\n\n      this.set('rememberDevice', rememberDevice);\n    },\n    getInitOptions: function () {\n      const rememberDevice = !!this.get('rememberDevice');\n      return this.doTransaction(function (transaction) {\n        const data = {\n          rememberDevice: rememberDevice\n        };\n        const factor = oktaUnderscore.findWhere(transaction.factors, {\n          provider: 'DUO',\n          factorType: 'web'\n        });\n        return factor.verify(data).catch(function (err) {\n          // Clean up the cookie on failure.\n          throw err;\n        });\n      }, true\n      /* rethrow errors */);\n    },\n    verify: function (signedResponse) {\n      const url = this.get('postAction');\n      const factorId = this.get('factorId');\n      const self = this;\n      let data = {\n        id: factorId,\n        stateToken: this.get('stateToken'),\n        sig_response: signedResponse\n      }; // Note: We should be doing this in OktaAuth! Fix when it's updated.\n\n      const rememberDevice = this.get('rememberDevice'); // We don't actually use authClient.post() here (unlike all the other cases in the\n      // sign-in widget) since the endpoint is wired to accept serialized form post instead\n      // of a JSON post ($.post() is different from authClient.post() in that in $.post(),\n      // jquery decides the Content-Type instead of it being a JSON type). Enroll/Verify DUO\n      // are the only two places where we actually do this.\n      // NOTE - If we ever decide to change this, we should test this very carefully.\n\n      return Q(oktaJQueryStatic.post(url, data)).then(function () {\n        return self.doTransaction(function (transaction) {\n          let data;\n          if (rememberDevice) {\n            data = {\n              rememberDevice: rememberDevice\n            };\n          }\n          return transaction.poll(data);\n        });\n      }).catch(function (err) {\n        self.trigger('error', self, err.xhr);\n      });\n    }\n  },\n  Form: {\n    autoSave: true,\n    noButtonBar: true,\n    title: oktaUnderscore.partial(loc, 'factor.duo'),\n    attributes: {\n      'data-se': 'factor-duo'\n    },\n    postRender: function () {\n      this.add('<iframe frameborder=\"0\" title=\"' + this.title() + '\"></iframe>');\n      if (this.options.appState.get('allowRememberDevice')) {\n        this.addInput({\n          label: false,\n          'label-top': true,\n          placeholder: this.options.appState.get('rememberDeviceLabel'),\n          className: 'margin-btm-0',\n          name: 'rememberDevice',\n          type: 'checkbox'\n        });\n      }\n      Duo.init({\n        host: this.model.get('host'),\n        sig_request: this.model.get('signature'),\n        iframe: this.$('iframe').get(0),\n        post_action: oktaUnderscore.bind(this.model.verify, this.model)\n      });\n    }\n  },\n  fetchInitialData: function () {\n    const self = this;\n    return this.model.getInitOptions().then(function (trans) {\n      const res = trans.data;\n      if (!res._embedded || !res._embedded.factor || !res._embedded.factor._embedded || !res._embedded.factor._embedded.verification) {\n        throw new Error('Response does not have duo verification options');\n      }\n      const verification = res._embedded.factor._embedded.verification;\n      self.model.set({\n        host: verification.host,\n        signature: verification.signature,\n        postAction: verification._links.complete.href,\n        factorId: res._embedded.factor.id,\n        stateToken: res.stateToken\n      });\n    });\n  },\n  trapAuthResponse: function () {\n    if (this.options.appState.get('isMfaChallenge')) {\n      return true;\n    }\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n  Footer: FooterMFA\n});\nexport { VerifyDuoController as default };","map":{"version":3,"names":["loc","oktaJQueryStatic","oktaUnderscore","Duo","Q","fn","FormController","FooterMFA","VerifyDuoController","extend","className","Model","props","host","signature","postAction","factorId","stateToken","rememberDevice","initialize","getRememberDeviceValue","appState","set","getInitOptions","get","doTransaction","transaction","data","factor","findWhere","factors","provider","factorType","verify","catch","err","signedResponse","url","self","id","sig_response","post","then","poll","trigger","xhr","Form","autoSave","noButtonBar","title","partial","attributes","postRender","add","options","addInput","label","placeholder","name","type","init","model","sig_request","iframe","$","post_action","bind","fetchInitialData","trans","res","_embedded","verification","Error","_links","complete","href","trapAuthResponse","back","Footer","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/VerifyDuoController.js"],"sourcesContent":["import { loc } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Duo from '../../../packages/vendor/duo_web_sdk/index.js';\nimport Q from 'q';\nimport fn from '../../util/FactorUtil.js';\nimport FormController from '../util/FormController.js';\nimport FooterMFA from '../views/shared/FooterMFA.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar VerifyDuoController = FormController.extend({\n  className: 'mfa-verify-duo duo-form',\n  Model: {\n    props: {\n      host: 'string',\n      signature: 'string',\n      postAction: 'string',\n      factorId: 'string',\n      stateToken: 'string',\n      rememberDevice: 'boolean'\n    },\n    initialize: function () {\n      const rememberDevice = fn.getRememberDeviceValue(this.appState); // set the initial value for remember device (Cannot do this while defining the\n      // local property because this.settings would not be initialized there yet).\n\n      this.set('rememberDevice', rememberDevice);\n    },\n    getInitOptions: function () {\n      const rememberDevice = !!this.get('rememberDevice');\n      return this.doTransaction(function (transaction) {\n        const data = {\n          rememberDevice: rememberDevice\n        };\n\n        const factor = oktaUnderscore.findWhere(transaction.factors, {\n          provider: 'DUO',\n          factorType: 'web'\n        });\n\n        return factor.verify(data).catch(function (err) {\n          // Clean up the cookie on failure.\n          throw err;\n        });\n      }, true\n      /* rethrow errors */\n      );\n    },\n    verify: function (signedResponse) {\n      const url = this.get('postAction');\n      const factorId = this.get('factorId');\n      const self = this;\n      let data = {\n        id: factorId,\n        stateToken: this.get('stateToken'),\n        sig_response: signedResponse\n      }; // Note: We should be doing this in OktaAuth! Fix when it's updated.\n\n      const rememberDevice = this.get('rememberDevice'); // We don't actually use authClient.post() here (unlike all the other cases in the\n      // sign-in widget) since the endpoint is wired to accept serialized form post instead\n      // of a JSON post ($.post() is different from authClient.post() in that in $.post(),\n      // jquery decides the Content-Type instead of it being a JSON type). Enroll/Verify DUO\n      // are the only two places where we actually do this.\n      // NOTE - If we ever decide to change this, we should test this very carefully.\n\n      return Q(oktaJQueryStatic.post(url, data)).then(function () {\n        return self.doTransaction(function (transaction) {\n          let data;\n\n          if (rememberDevice) {\n            data = {\n              rememberDevice: rememberDevice\n            };\n          }\n\n          return transaction.poll(data);\n        });\n      }).catch(function (err) {\n        self.trigger('error', self, err.xhr);\n      });\n    }\n  },\n  Form: {\n    autoSave: true,\n    noButtonBar: true,\n    title: oktaUnderscore.partial(loc, 'factor.duo'),\n    attributes: {\n      'data-se': 'factor-duo'\n    },\n    postRender: function () {\n      this.add('<iframe frameborder=\"0\" title=\"' + this.title() + '\"></iframe>');\n\n      if (this.options.appState.get('allowRememberDevice')) {\n        this.addInput({\n          label: false,\n          'label-top': true,\n          placeholder: this.options.appState.get('rememberDeviceLabel'),\n          className: 'margin-btm-0',\n          name: 'rememberDevice',\n          type: 'checkbox'\n        });\n      }\n\n      Duo.init({\n        host: this.model.get('host'),\n        sig_request: this.model.get('signature'),\n        iframe: this.$('iframe').get(0),\n        post_action: oktaUnderscore.bind(this.model.verify, this.model)\n      });\n    }\n  },\n  fetchInitialData: function () {\n    const self = this;\n    return this.model.getInitOptions().then(function (trans) {\n      const res = trans.data;\n\n      if (!res._embedded || !res._embedded.factor || !res._embedded.factor._embedded || !res._embedded.factor._embedded.verification) {\n        throw new Error('Response does not have duo verification options');\n      }\n\n      const verification = res._embedded.factor._embedded.verification;\n      self.model.set({\n        host: verification.host,\n        signature: verification.signature,\n        postAction: verification._links.complete.href,\n        factorId: res._embedded.factor.id,\n        stateToken: res.stateToken\n      });\n    });\n  },\n  trapAuthResponse: function () {\n    if (this.options.appState.get('isMfaChallenge')) {\n      return true;\n    }\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n  Footer: FooterMFA\n});\n\nexport { VerifyDuoController as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}