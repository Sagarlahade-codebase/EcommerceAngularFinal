{"ast":null,"code":"import { loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Enums from './Enums.js';\nimport { getTypedOAuthError, NonRecoverableError } from './OAuthErrors.js';\nimport Util from './Util.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst util = {}; // https://github.com/okta/okta-auth-js#authorize-options\n\nconst AUTH_PARAMS = ['responseType', 'scopes', 'state', 'nonce', 'idp', 'idpScope', 'display', 'prompt', 'maxAge', 'loginHint'];\nutil.AUTH_PARAMS = AUTH_PARAMS;\n/**\n * Get the tokens in the OIDC/OAUTH flows\n *\n * @param settings - settings model object\n * @param params - {idp: 'xxx'} for social auth\n *                 {sessionToken: 'xxx'} for okta idp\n */\n\nutil.getTokens = function (settings, params, controller) {\n  function success(result) {\n    settings.callGlobalSuccess(Enums.SUCCESS, result);\n  }\n  function error(error) {\n    const typedError = getTypedOAuthError(error);\n    if (typedError.is('terminal')) {\n      controller.model.appState.set('flashError', typedError);\n      controller.model.appState.trigger('navigate', 'signin/error');\n    } else if (typedError.is('inline')) {\n      controller.model.trigger('error', controller.model, {\n        responseJSON: {\n          errorSummary: typedError.errorDetails.errorSummary\n        }\n      });\n      controller.model.appState.trigger('removeLoading');\n    }\n    if (!typedError.is('terminal')) {\n      Util.triggerAfterError(controller, typedError, settings);\n    }\n    if (typedError instanceof NonRecoverableError) {\n      settings.callGlobalError(typedError);\n    }\n  }\n  const authClient = settings.getAuthClient();\n  const isAuthorizationCodeFlow = authClient.isAuthorizationCodeFlow() && !authClient.isPKCE();\n  const options = settings.toJSON({\n    verbose: true\n  });\n  const getTokenOptions = {};\n  oktaUnderscore.extend(getTokenOptions, oktaUnderscore.pick(options, 'clientId', 'redirectUri'), oktaUnderscore.pick(options.authParams, AUTH_PARAMS), params); // Extra Options for Social Idp popup window title and id_token response timeout\n\n  getTokenOptions.popupTitle = loc('socialauth.popup.title', 'login');\n  getTokenOptions.timeout = options.oAuthTimeout; // Redirect flow - this can be used when logging into an external IDP, or\n  // converting the Okta sessionToken to an access_token, id_token, and/or\n  // authorization code. Note: The authorization code flow will always redirect.\n\n  if (options.redirect === 'always' || isAuthorizationCodeFlow) {\n    authClient.token.getWithRedirect(getTokenOptions).catch(error);\n  } else if (getTokenOptions.sessionToken) {\n    // Default flow if logging in with Okta as the IDP - convert sessionToken to\n    // tokens in a hidden iframe. Used in Single Page Apps where the app does\n    // not want to redirect away from the page to convert the token.\n    authClient.token.getWithoutPrompt(getTokenOptions).then(success).catch(error);\n  } else {\n    // Default flow if logging in with an external IDP - opens a popup and\n    // gets the token from a postMessage response.\n    authClient.token.getWithPopup(getTokenOptions).then(success).catch(error);\n  }\n};\nexport { util as default };","map":{"version":3,"names":["loc","oktaUnderscore","Enums","getTypedOAuthError","NonRecoverableError","Util","util","AUTH_PARAMS","getTokens","settings","params","controller","success","result","callGlobalSuccess","SUCCESS","error","typedError","is","model","appState","set","trigger","responseJSON","errorSummary","errorDetails","triggerAfterError","callGlobalError","authClient","getAuthClient","isAuthorizationCodeFlow","isPKCE","options","toJSON","verbose","getTokenOptions","extend","pick","authParams","popupTitle","timeout","oAuthTimeout","redirect","token","getWithRedirect","catch","sessionToken","getWithoutPrompt","then","getWithPopup","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/OAuth2Util.js"],"sourcesContent":["import { loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Enums from './Enums.js';\nimport { getTypedOAuthError, NonRecoverableError } from './OAuthErrors.js';\nimport Util from './Util.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst util = {}; // https://github.com/okta/okta-auth-js#authorize-options\n\nconst AUTH_PARAMS = ['responseType', 'scopes', 'state', 'nonce', 'idp', 'idpScope', 'display', 'prompt', 'maxAge', 'loginHint'];\nutil.AUTH_PARAMS = AUTH_PARAMS;\n/**\n * Get the tokens in the OIDC/OAUTH flows\n *\n * @param settings - settings model object\n * @param params - {idp: 'xxx'} for social auth\n *                 {sessionToken: 'xxx'} for okta idp\n */\n\nutil.getTokens = function (settings, params, controller) {\n  function success(result) {\n    settings.callGlobalSuccess(Enums.SUCCESS, result);\n  }\n\n  function error(error) {\n    const typedError = getTypedOAuthError(error);\n\n    if (typedError.is('terminal')) {\n      controller.model.appState.set('flashError', typedError);\n      controller.model.appState.trigger('navigate', 'signin/error');\n    } else if (typedError.is('inline')) {\n      controller.model.trigger('error', controller.model, {\n        responseJSON: {\n          errorSummary: typedError.errorDetails.errorSummary\n        }\n      });\n      controller.model.appState.trigger('removeLoading');\n    }\n\n    if (!typedError.is('terminal')) {\n      Util.triggerAfterError(controller, typedError, settings);\n    }\n\n    if (typedError instanceof NonRecoverableError) {\n      settings.callGlobalError(typedError);\n    }\n  }\n\n  const authClient = settings.getAuthClient();\n  const isAuthorizationCodeFlow = authClient.isAuthorizationCodeFlow() && !authClient.isPKCE();\n  const options = settings.toJSON({\n    verbose: true\n  });\n  const getTokenOptions = {};\n\n  oktaUnderscore.extend(getTokenOptions, oktaUnderscore.pick(options, 'clientId', 'redirectUri'), oktaUnderscore.pick(options.authParams, AUTH_PARAMS), params); // Extra Options for Social Idp popup window title and id_token response timeout\n\n\n  getTokenOptions.popupTitle = loc('socialauth.popup.title', 'login');\n  getTokenOptions.timeout = options.oAuthTimeout; // Redirect flow - this can be used when logging into an external IDP, or\n  // converting the Okta sessionToken to an access_token, id_token, and/or\n  // authorization code. Note: The authorization code flow will always redirect.\n\n  if (options.redirect === 'always' || isAuthorizationCodeFlow) {\n    authClient.token.getWithRedirect(getTokenOptions).catch(error);\n  } else if (getTokenOptions.sessionToken) {\n    // Default flow if logging in with Okta as the IDP - convert sessionToken to\n    // tokens in a hidden iframe. Used in Single Page Apps where the app does\n    // not want to redirect away from the page to convert the token.\n    authClient.token.getWithoutPrompt(getTokenOptions).then(success).catch(error);\n  } else {\n    // Default flow if logging in with an external IDP - opens a popup and\n    // gets the token from a postMessage response.\n    authClient.token.getWithPopup(getTokenOptions).then(success).catch(error);\n  }\n};\n\nexport { util as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}