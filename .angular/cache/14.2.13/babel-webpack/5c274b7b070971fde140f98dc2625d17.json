{"ast":null,"code":"import { loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { FORMS, ACTIONS } from '../../ion/RemediationConstants.js';\nconst {\n  ENROLLED_PASSWORD_RECOVERY_LINK: ENROLLED_PASSWORD_RECOVERY_LINK,\n  ORG_PASSWORD_RECOVERY_LINK: ORG_PASSWORD_RECOVERY_LINK\n} = ACTIONS;\nconst getSwitchAuthenticatorLink = appState => {\n  if (appState.getRemediationAuthenticationOptions(FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE).length > 1) {\n    return [{\n      'type': 'link',\n      'label': loc('oie.verification.switch.authenticator', 'login'),\n      'name': 'switchAuthenticator',\n      'formName': FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE\n    }];\n  }\n  if (appState.getRemediationAuthenticationOptions(FORMS.SELECT_AUTHENTICATOR_ENROLL).length >= 1) {\n    return [{\n      'type': 'link',\n      'label': loc('oie.enroll.switch.authenticator', 'login'),\n      'name': 'switchAuthenticator',\n      'formName': FORMS.SELECT_AUTHENTICATOR_ENROLL\n    }];\n  }\n  return [];\n};\nconst getForgotPasswordLink = (appState, settings) => {\n  const forgotPasswordLink = {\n    'type': 'link',\n    'label': loc('forgotpassword', 'login'),\n    'name': 'forgot-password'\n  };\n  const customForgotPasswordHref = settings.get('helpLinks.forgotPassword');\n  if (customForgotPasswordHref) {\n    return [Object.assign({}, {\n      'href': customForgotPasswordHref,\n      'label': loc('forgotpassword', 'login'),\n      'name': 'forgot-password'\n    })];\n  } // at identify page when only Org Authenticator Password may be available\n  else if (appState.getActionByPath(ORG_PASSWORD_RECOVERY_LINK)) {\n    return [Object.assign({}, forgotPasswordLink, {\n      actionPath: ORG_PASSWORD_RECOVERY_LINK\n    })];\n  } // at password verify page\n  else if (appState.getActionByPath(ENROLLED_PASSWORD_RECOVERY_LINK)) {\n    return [Object.assign({}, forgotPasswordLink, {\n      actionPath: ENROLLED_PASSWORD_RECOVERY_LINK\n    })];\n  }\n  return [];\n};\nconst getSkipSetupLink = (appState, linkName) => {\n  if (appState.hasRemediationObject(FORMS.SKIP)) {\n    return [{\n      'type': 'link',\n      'label': linkName !== null && linkName !== void 0 ? linkName : loc('oie.enroll.skip.setup', 'login'),\n      'name': 'skip-setup',\n      'actionPath': FORMS.SKIP\n    }];\n  }\n  return [];\n}; // When there is a 'cancel' object in remediation\n\nconst getSignOutLink = (settings, options = {}) => {\n  if (settings !== null && settings !== void 0 && settings.get('backToSignInUri')) {\n    return [{\n      'label': loc('goback', 'login'),\n      'name': 'cancel',\n      'href': settings.get('backToSignInUri')\n    }];\n  }\n  return [{\n    'actionPath': 'cancel',\n    'label': !options.label ? loc('goback', 'login') : options.label,\n    'name': 'cancel',\n    'type': 'link'\n  }];\n}; // Use it to create a widget configured link in the absence of `cancel` object in remediation\n\nconst getBackToSignInLink = ({\n  settings: settings,\n  appState: appState\n}) => {\n  const link = {}; // If backToSignInLink is set, use this value for all scenarios\n\n  if (settings !== null && settings !== void 0 && settings.get('backToSignInUri')) {\n    link.href = settings.get('backToSignInUri');\n  } // embedded scenarios\n  else if (settings !== null && settings !== void 0 && settings.get('useInteractionCodeFlow')) {\n    link.clickHandler = () => {\n      appState.trigger('restartLoginFlow');\n    };\n  } // fallback for okta-hosted scenarios (backend should set signOutLink or backToSignOutLink)\n  else {\n    link.href = settings === null || settings === void 0 ? void 0 : settings.get('baseUrl');\n  }\n  return [{\n    'type': 'link',\n    'label': loc('goback', 'login'),\n    'name': 'go-back',\n    ...link\n  }];\n};\nconst getReloadPageButtonLink = () => {\n  return [{\n    'type': 'link',\n    'label': loc('oie.try.again', 'login'),\n    'name': 'try-again',\n    'href': window.location,\n    'className': 'button button-primary text-align-c'\n  }];\n};\nconst getSignUpLink = (appState, settings) => {\n  const signupLink = [];\n  if (appState.hasRemediationObject(FORMS.SELECT_ENROLL_PROFILE)) {\n    const signupLinkData = {\n      'type': 'link',\n      'label': loc('oie.registration.form.title', 'login'),\n      'name': 'enroll'\n    };\n    if (oktaUnderscore.isFunction(settings.get('registration.click'))) {\n      signupLinkData.clickHandler = settings.get('registration.click');\n    } else {\n      signupLinkData.actionPath = FORMS.SELECT_ENROLL_PROFILE;\n    }\n    signupLink.push(signupLinkData);\n  }\n  return signupLink;\n};\nconst getFactorPageCustomLink = (appState, settings) => {\n  const factorPageCustomLink = [];\n  const formsNeedFactorPageCustomLink = [FORMS.CHALLENGE_AUTHENTICATOR, FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE, FORMS.CHALLENGE_POLL, FORMS.AUTHENTICATOR_VERIFICATION_DATA];\n  if (!appState.get('isPasswordRecovery') && formsNeedFactorPageCustomLink.includes(appState.get('currentFormName'))) {\n    const helpLinksFactorPageLabel = settings.get('helpLinks.factorPage.text');\n    const helpLinksFactorPageHref = settings.get('helpLinks.factorPage.href');\n    if (helpLinksFactorPageLabel && helpLinksFactorPageHref) {\n      factorPageCustomLink.push({\n        type: 'link',\n        label: helpLinksFactorPageLabel,\n        name: 'factorPageHelpLink',\n        href: helpLinksFactorPageHref,\n        target: '_blank'\n      });\n    }\n  }\n  return factorPageCustomLink;\n};\nexport { getBackToSignInLink, getFactorPageCustomLink, getForgotPasswordLink, getReloadPageButtonLink, getSignOutLink, getSignUpLink, getSkipSetupLink, getSwitchAuthenticatorLink };","map":{"version":3,"names":["loc","oktaUnderscore","FORMS","ACTIONS","ENROLLED_PASSWORD_RECOVERY_LINK","ORG_PASSWORD_RECOVERY_LINK","getSwitchAuthenticatorLink","appState","getRemediationAuthenticationOptions","SELECT_AUTHENTICATOR_AUTHENTICATE","length","SELECT_AUTHENTICATOR_ENROLL","getForgotPasswordLink","settings","forgotPasswordLink","customForgotPasswordHref","get","Object","assign","getActionByPath","actionPath","getSkipSetupLink","linkName","hasRemediationObject","SKIP","getSignOutLink","options","label","getBackToSignInLink","link","href","clickHandler","trigger","getReloadPageButtonLink","window","location","getSignUpLink","signupLink","SELECT_ENROLL_PROFILE","signupLinkData","isFunction","push","getFactorPageCustomLink","factorPageCustomLink","formsNeedFactorPageCustomLink","CHALLENGE_AUTHENTICATOR","CHALLENGE_POLL","AUTHENTICATOR_VERIFICATION_DATA","includes","helpLinksFactorPageLabel","helpLinksFactorPageHref","type","name","target"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/utils/LinksUtil.js"],"sourcesContent":["import { loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { FORMS, ACTIONS } from '../../ion/RemediationConstants.js';\n\nconst {\n  ENROLLED_PASSWORD_RECOVERY_LINK: ENROLLED_PASSWORD_RECOVERY_LINK,\n  ORG_PASSWORD_RECOVERY_LINK: ORG_PASSWORD_RECOVERY_LINK\n} = ACTIONS;\n\nconst getSwitchAuthenticatorLink = appState => {\n  if (appState.getRemediationAuthenticationOptions(FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE).length > 1) {\n    return [{\n      'type': 'link',\n      'label': loc('oie.verification.switch.authenticator', 'login'),\n      'name': 'switchAuthenticator',\n      'formName': FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE\n    }];\n  }\n\n  if (appState.getRemediationAuthenticationOptions(FORMS.SELECT_AUTHENTICATOR_ENROLL).length >= 1) {\n    return [{\n      'type': 'link',\n      'label': loc('oie.enroll.switch.authenticator', 'login'),\n      'name': 'switchAuthenticator',\n      'formName': FORMS.SELECT_AUTHENTICATOR_ENROLL\n    }];\n  }\n\n  return [];\n};\n\nconst getForgotPasswordLink = (appState, settings) => {\n  const forgotPasswordLink = {\n    'type': 'link',\n    'label': loc('forgotpassword', 'login'),\n    'name': 'forgot-password'\n  };\n  const customForgotPasswordHref = settings.get('helpLinks.forgotPassword');\n\n  if (customForgotPasswordHref) {\n    return [Object.assign({}, {\n      'href': customForgotPasswordHref,\n      'label': loc('forgotpassword', 'login'),\n      'name': 'forgot-password'\n    })];\n  } // at identify page when only Org Authenticator Password may be available\n  else if (appState.getActionByPath(ORG_PASSWORD_RECOVERY_LINK)) {\n    return [Object.assign({}, forgotPasswordLink, {\n      actionPath: ORG_PASSWORD_RECOVERY_LINK\n    })];\n  } // at password verify page\n  else if (appState.getActionByPath(ENROLLED_PASSWORD_RECOVERY_LINK)) {\n    return [Object.assign({}, forgotPasswordLink, {\n      actionPath: ENROLLED_PASSWORD_RECOVERY_LINK\n    })];\n  }\n\n  return [];\n};\n\nconst getSkipSetupLink = (appState, linkName) => {\n  if (appState.hasRemediationObject(FORMS.SKIP)) {\n    return [{\n      'type': 'link',\n      'label': linkName !== null && linkName !== void 0 ? linkName : loc('oie.enroll.skip.setup', 'login'),\n      'name': 'skip-setup',\n      'actionPath': FORMS.SKIP\n    }];\n  }\n\n  return [];\n}; // When there is a 'cancel' object in remediation\n\n\nconst getSignOutLink = (settings, options = {}) => {\n  if (settings !== null && settings !== void 0 && settings.get('backToSignInUri')) {\n    return [{\n      'label': loc('goback', 'login'),\n      'name': 'cancel',\n      'href': settings.get('backToSignInUri')\n    }];\n  }\n\n  return [{\n    'actionPath': 'cancel',\n    'label': !options.label ? loc('goback', 'login') : options.label,\n    'name': 'cancel',\n    'type': 'link'\n  }];\n}; // Use it to create a widget configured link in the absence of `cancel` object in remediation\n\n\nconst getBackToSignInLink = ({\n  settings: settings,\n  appState: appState\n}) => {\n  const link = {}; // If backToSignInLink is set, use this value for all scenarios\n\n  if (settings !== null && settings !== void 0 && settings.get('backToSignInUri')) {\n    link.href = settings.get('backToSignInUri');\n  } // embedded scenarios\n  else if (settings !== null && settings !== void 0 && settings.get('useInteractionCodeFlow')) {\n    link.clickHandler = () => {\n      appState.trigger('restartLoginFlow');\n    };\n  } // fallback for okta-hosted scenarios (backend should set signOutLink or backToSignOutLink)\n  else {\n    link.href = settings === null || settings === void 0 ? void 0 : settings.get('baseUrl');\n  }\n\n  return [{\n    'type': 'link',\n    'label': loc('goback', 'login'),\n    'name': 'go-back',\n    ...link\n  }];\n};\n\nconst getReloadPageButtonLink = () => {\n  return [{\n    'type': 'link',\n    'label': loc('oie.try.again', 'login'),\n    'name': 'try-again',\n    'href': window.location,\n    'className': 'button button-primary text-align-c'\n  }];\n};\n\nconst getSignUpLink = (appState, settings) => {\n  const signupLink = [];\n\n  if (appState.hasRemediationObject(FORMS.SELECT_ENROLL_PROFILE)) {\n    const signupLinkData = {\n      'type': 'link',\n      'label': loc('oie.registration.form.title', 'login'),\n      'name': 'enroll'\n    };\n\n    if (oktaUnderscore.isFunction(settings.get('registration.click'))) {\n      signupLinkData.clickHandler = settings.get('registration.click');\n    } else {\n      signupLinkData.actionPath = FORMS.SELECT_ENROLL_PROFILE;\n    }\n\n    signupLink.push(signupLinkData);\n  }\n\n  return signupLink;\n};\n\nconst getFactorPageCustomLink = (appState, settings) => {\n  const factorPageCustomLink = [];\n  const formsNeedFactorPageCustomLink = [FORMS.CHALLENGE_AUTHENTICATOR, FORMS.SELECT_AUTHENTICATOR_AUTHENTICATE, FORMS.CHALLENGE_POLL, FORMS.AUTHENTICATOR_VERIFICATION_DATA];\n\n  if (!appState.get('isPasswordRecovery') && formsNeedFactorPageCustomLink.includes(appState.get('currentFormName'))) {\n    const helpLinksFactorPageLabel = settings.get('helpLinks.factorPage.text');\n    const helpLinksFactorPageHref = settings.get('helpLinks.factorPage.href');\n\n    if (helpLinksFactorPageLabel && helpLinksFactorPageHref) {\n      factorPageCustomLink.push({\n        type: 'link',\n        label: helpLinksFactorPageLabel,\n        name: 'factorPageHelpLink',\n        href: helpLinksFactorPageHref,\n        target: '_blank'\n      });\n    }\n  }\n\n  return factorPageCustomLink;\n};\n\nexport { getBackToSignInLink, getFactorPageCustomLink, getForgotPasswordLink, getReloadPageButtonLink, getSignOutLink, getSignUpLink, getSkipSetupLink, getSwitchAuthenticatorLink };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}