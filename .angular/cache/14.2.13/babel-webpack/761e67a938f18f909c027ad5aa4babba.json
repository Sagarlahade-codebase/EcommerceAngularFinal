{"ast":null,"code":"import Q from 'q';\nimport Enums from './Enums.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst SWAP_PAGE_TIME = 200;\nconst fn = {};\nfunction zoom($el, start, finish) {\n  const deferred = Q.defer();\n  $el.animate({\n    'text-indent': 1\n  }, {\n    duration: 200,\n    easing: 'swing',\n    step: function (now, fx) {\n      fx.start = start;\n      fx.end = finish;\n      $el.css('transform', 'scale(' + now + ', ' + now + ')');\n    },\n    always: function () {\n      deferred.resolve($el);\n    }\n  });\n  return deferred.promise;\n}\nfunction rotate($el, start, finish) {\n  const deferred = Q.defer();\n  $el.animate({\n    'text-indent': 1\n  }, {\n    duration: 150,\n    easing: 'swing',\n    step: function (now, fx) {\n      fx.start = start;\n      fx.end = finish;\n      $el.css('transform', 'rotate(' + now + 'deg)');\n    },\n    always: function () {\n      deferred.resolve($el);\n    }\n  });\n  return deferred.promise;\n} // Note: It is necessary to pass in a success callback because we must\n// remove the old dom node (and controller) in the same tick of the event\n// loop. Waiting for \"then\" results in a glitchy animation.\n\nfn.swapPages = function (options) {\n  const deferred = Q.defer();\n  const $parent = options.$parent;\n  const $oldRoot = options.$oldRoot;\n  const $newRoot = options.$newRoot;\n  const success = options.success;\n  const ctx = options.ctx;\n  let directionClassName = 'transition-from-right';\n  if (options.dir && options.dir === Enums.DIRECTION_BACK) {\n    directionClassName = 'transition-from-left';\n  }\n  $newRoot.addClass(directionClassName);\n  $parent.append($newRoot);\n  $parent.addClass('animation-container-overflow');\n  $newRoot.animate({\n    left: '0px',\n    top: '0px',\n    opacity: 1\n  }, SWAP_PAGE_TIME, function () {\n    $parent.removeClass('animation-container-overflow');\n    $newRoot.removeClass(directionClassName);\n    $newRoot.removeAttr('style');\n    success.call(ctx);\n    deferred.resolve();\n  });\n  $oldRoot.animate({\n    height: $newRoot.height(),\n    opacity: 0\n  }, SWAP_PAGE_TIME * 0.8);\n  return deferred.promise;\n};\nfn.swapBeacons = function (options) {\n  const $el = options.$el;\n  const swap = options.swap;\n  const ctx = options.ctx;\n  return this.implode($el).then(function () {\n    swap.call(ctx);\n    return $el;\n  }).then(this.explode);\n};\nfn.explode = function ($el) {\n  return zoom($el, 0, 1); //zoom in\n};\nfn.implode = function ($el) {\n  return zoom($el, 1, 0); //zoom out\n};\nfn.radialProgressBar = function (options) {\n  const radialProgressBar = options.$el;\n  const swap = options.swap;\n  const circles = radialProgressBar.children();\n  return rotate(circles, 0, 180).then(function () {\n    radialProgressBar.css({\n      clip: 'auto'\n    });\n  }).then(function () {\n    const leftHalf = circles.eq(0);\n    swap();\n    return rotate(leftHalf, 180, 360);\n  }).then(function () {\n    //reset values to initial state\n    radialProgressBar.css({\n      clip: 'rect(0px, 96px, 96px, 48px)'\n    });\n    circles.css({\n      transform: 'rotate(0deg)',\n      'text-indent': '1px'\n    });\n  });\n};\nexport { fn as default };","map":{"version":3,"names":["Q","Enums","SWAP_PAGE_TIME","fn","zoom","$el","start","finish","deferred","defer","animate","duration","easing","step","now","fx","end","css","always","resolve","promise","rotate","swapPages","options","$parent","$oldRoot","$newRoot","success","ctx","directionClassName","dir","DIRECTION_BACK","addClass","append","left","top","opacity","removeClass","removeAttr","call","height","swapBeacons","swap","implode","then","explode","radialProgressBar","circles","children","clip","leftHalf","eq","transform","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/Animations.js"],"sourcesContent":["import Q from 'q';\nimport Enums from './Enums.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst SWAP_PAGE_TIME = 200;\nconst fn = {};\n\nfunction zoom($el, start, finish) {\n  const deferred = Q.defer();\n  $el.animate({\n    'text-indent': 1\n  }, {\n    duration: 200,\n    easing: 'swing',\n    step: function (now, fx) {\n      fx.start = start;\n      fx.end = finish;\n      $el.css('transform', 'scale(' + now + ', ' + now + ')');\n    },\n    always: function () {\n      deferred.resolve($el);\n    }\n  });\n  return deferred.promise;\n}\n\nfunction rotate($el, start, finish) {\n  const deferred = Q.defer();\n  $el.animate({\n    'text-indent': 1\n  }, {\n    duration: 150,\n    easing: 'swing',\n    step: function (now, fx) {\n      fx.start = start;\n      fx.end = finish;\n      $el.css('transform', 'rotate(' + now + 'deg)');\n    },\n    always: function () {\n      deferred.resolve($el);\n    }\n  });\n  return deferred.promise;\n} // Note: It is necessary to pass in a success callback because we must\n// remove the old dom node (and controller) in the same tick of the event\n// loop. Waiting for \"then\" results in a glitchy animation.\n\n\nfn.swapPages = function (options) {\n  const deferred = Q.defer();\n  const $parent = options.$parent;\n  const $oldRoot = options.$oldRoot;\n  const $newRoot = options.$newRoot;\n  const success = options.success;\n  const ctx = options.ctx;\n  let directionClassName = 'transition-from-right';\n\n  if (options.dir && options.dir === Enums.DIRECTION_BACK) {\n    directionClassName = 'transition-from-left';\n  }\n\n  $newRoot.addClass(directionClassName);\n  $parent.append($newRoot);\n  $parent.addClass('animation-container-overflow');\n  $newRoot.animate({\n    left: '0px',\n    top: '0px',\n    opacity: 1\n  }, SWAP_PAGE_TIME, function () {\n    $parent.removeClass('animation-container-overflow');\n    $newRoot.removeClass(directionClassName);\n    $newRoot.removeAttr('style');\n    success.call(ctx);\n    deferred.resolve();\n  });\n  $oldRoot.animate({\n    height: $newRoot.height(),\n    opacity: 0\n  }, SWAP_PAGE_TIME * 0.8);\n  return deferred.promise;\n};\n\nfn.swapBeacons = function (options) {\n  const $el = options.$el;\n  const swap = options.swap;\n  const ctx = options.ctx;\n  return this.implode($el).then(function () {\n    swap.call(ctx);\n    return $el;\n  }).then(this.explode);\n};\n\nfn.explode = function ($el) {\n  return zoom($el, 0, 1); //zoom in\n};\n\nfn.implode = function ($el) {\n  return zoom($el, 1, 0); //zoom out\n};\n\nfn.radialProgressBar = function (options) {\n  const radialProgressBar = options.$el;\n  const swap = options.swap;\n  const circles = radialProgressBar.children();\n  return rotate(circles, 0, 180).then(function () {\n    radialProgressBar.css({\n      clip: 'auto'\n    });\n  }).then(function () {\n    const leftHalf = circles.eq(0);\n    swap();\n    return rotate(leftHalf, 180, 360);\n  }).then(function () {\n    //reset values to initial state\n    radialProgressBar.css({\n      clip: 'rect(0px, 96px, 96px, 48px)'\n    });\n    circles.css({\n      transform: 'rotate(0deg)',\n      'text-indent': '1px'\n    });\n  });\n};\n\nexport { fn as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}