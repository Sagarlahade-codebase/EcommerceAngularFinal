{"ast":null,"code":"/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nconst hasFullCorsSupport = 'withCredentials' in new window.XMLHttpRequest();\nconst hasXDomainRequest = typeof window.XDomainRequest !== 'undefined';\nfn.corsIsNotSupported = function () {\n  return !(hasFullCorsSupport || hasXDomainRequest);\n};\nfn.corsIsNotEnabled = function (jqXhr) {\n  // Not a definitive check, but it's the best we've got.\n  // Note: This will change when OktaAuth is updated\n  return jqXhr.status === 0;\n}; // This is currently not being used, but we'll keep it around for when we\n// want a fallback mechanism - i.e. use localStorage if it exists, else fall\n// back to cookies.\n\nfn.localStorageIsNotSupported = function () {\n  const test = 'test';\n  try {\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return false;\n  } catch (e) {\n    return true;\n  }\n};\nfn.supportsPushState = function (win) {\n  win = win || window;\n  return !!(win.history && win.history.pushState);\n};\nfn.isIE = function () {\n  return /(msie|trident)/i.test(navigator.userAgent);\n};\nfn.isFirefox = function () {\n  return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n};\nfn.isEdge = function () {\n  // This is to just check for windows edge. Mac edge - chromium based's UA is 'edg'.\n  return navigator.userAgent.toLowerCase().indexOf('edge') > -1;\n};\nfn.isSafari = function () {\n  // Chrome has safari in its useragent string so adding this extra check.\n  return navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\n};\nfn.isMac = function () {\n  return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n};\nfn.isAndroid = function () {\n  // Windows Phone also contains \"Android\"\n  return /android/i.test(navigator.userAgent) && !/windows phone/i.test(navigator.userAgent);\n};\nfn.isIOS = function () {\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}; // Returns a list of languages the user has configured for their browser, in\n// order of preference.\n\nfn.getUserLanguages = function () {\n  // Chrome, Firefox\n  if (navigator.languages) {\n    return [...navigator.languages];\n  }\n  const languages = [];\n  const properties = ['language',\n  // Safari, IE11\n  'userLanguage',\n  // IE\n  'browserLanguage',\n  // IE\n  'systemLanguage' // IE\n  ];\n  properties.forEach(function (property) {\n    if (navigator[property]) {\n      languages.push(navigator[property]);\n    }\n  });\n  return languages;\n};\nexport { fn as default };","map":{"version":3,"names":["fn","hasFullCorsSupport","window","XMLHttpRequest","hasXDomainRequest","XDomainRequest","corsIsNotSupported","corsIsNotEnabled","jqXhr","status","localStorageIsNotSupported","test","localStorage","setItem","removeItem","e","supportsPushState","win","history","pushState","isIE","navigator","userAgent","isFirefox","toLowerCase","indexOf","isEdge","isSafari","isMac","platform","toUpperCase","isAndroid","isIOS","MSStream","getUserLanguages","languages","properties","forEach","property","push","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/BrowserFeatures.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nconst hasFullCorsSupport = ('withCredentials' in new window.XMLHttpRequest());\nconst hasXDomainRequest = typeof window.XDomainRequest !== 'undefined';\n\nfn.corsIsNotSupported = function () {\n  return !(hasFullCorsSupport || hasXDomainRequest);\n};\n\nfn.corsIsNotEnabled = function (jqXhr) {\n  // Not a definitive check, but it's the best we've got.\n  // Note: This will change when OktaAuth is updated\n  return jqXhr.status === 0;\n}; // This is currently not being used, but we'll keep it around for when we\n// want a fallback mechanism - i.e. use localStorage if it exists, else fall\n// back to cookies.\n\n\nfn.localStorageIsNotSupported = function () {\n  const test = 'test';\n\n  try {\n    localStorage.setItem(test, test);\n    localStorage.removeItem(test);\n    return false;\n  } catch (e) {\n    return true;\n  }\n};\n\nfn.supportsPushState = function (win) {\n  win = win || window;\n  return !!(win.history && win.history.pushState);\n};\n\nfn.isIE = function () {\n  return /(msie|trident)/i.test(navigator.userAgent);\n};\n\nfn.isFirefox = function () {\n  return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n};\n\nfn.isEdge = function () {\n  // This is to just check for windows edge. Mac edge - chromium based's UA is 'edg'.\n  return navigator.userAgent.toLowerCase().indexOf('edge') > -1;\n};\n\nfn.isSafari = function () {\n  // Chrome has safari in its useragent string so adding this extra check.\n  return navigator.userAgent.toLowerCase().indexOf('safari') > -1 && navigator.userAgent.toLowerCase().indexOf('chrome') === -1;\n};\n\nfn.isMac = function () {\n  return navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n};\n\nfn.isAndroid = function () {\n  // Windows Phone also contains \"Android\"\n  return /android/i.test(navigator.userAgent) && !/windows phone/i.test(navigator.userAgent);\n};\n\nfn.isIOS = function () {\n  // iOS detection from: http://stackoverflow.com/a/9039885/177710\n  return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}; // Returns a list of languages the user has configured for their browser, in\n// order of preference.\n\n\nfn.getUserLanguages = function () {\n  // Chrome, Firefox\n  if (navigator.languages) {\n    return [...navigator.languages];\n  }\n\n  const languages = [];\n  const properties = ['language', // Safari, IE11\n  'userLanguage', // IE\n  'browserLanguage', // IE\n  'systemLanguage' // IE\n  ];\n  properties.forEach(function (property) {\n    if (navigator[property]) {\n      languages.push(navigator[property]);\n    }\n  });\n  return languages;\n};\n\nexport { fn as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}