{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport ProfileTransaction from './transactions/ProfileTransaction.js';\nimport ProfileSchemaTransaction from './transactions/ProfileSchemaTransaction.js';\nimport EmailTransaction from './transactions/EmailTransaction.js';\nimport EmailStatusTransaction from './transactions/EmailStatusTransaction.js';\nimport EmailChallengeTransaction from './transactions/EmailChallengeTransaction.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport BaseTransaction from './transactions/Base.js';\nimport { httpRequest } from '../http/request.js';\nimport AuthApiError from '../errors/AuthApiError.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nconst parseInsufficientAuthenticationError = header => {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n  return header.split(',').map(part => part.trim()).map(part => part.split('=')).reduce((acc, curr) => {\n    acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n    return acc;\n  }, {});\n};\nfunction sendRequest(_x, _x2) {\n  return _sendRequest.apply(this, arguments);\n}\nfunction _sendRequest() {\n  _sendRequest = _asyncToGenerator(function* (oktaAuth, options) {\n    var _a, _b;\n    const {\n      accessToken: accessTokenObj,\n      idToken: idTokenObj\n    } = oktaAuth.tokenManager.getTokensSync();\n    const idToken = idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.idToken;\n    const accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n    const {\n      issuer\n    } = oktaAuth.options;\n    const {\n      url,\n      method,\n      payload\n    } = options;\n    const requestUrl = url.startsWith(issuer) ? url : `${issuer}${url}`;\n    if (!accessToken) {\n      throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n    }\n    let res;\n    try {\n      res = yield httpRequest(oktaAuth, Object.assign({\n        headers: {\n          'Accept': '*/*;okta-version=1.0.0'\n        },\n        accessToken,\n        url: requestUrl,\n        method\n      }, payload && {\n        args: payload\n      }));\n    } catch (err) {\n      const errorResp = err.xhr;\n      if (idToken && (errorResp === null || errorResp === void 0 ? void 0 : errorResp.status) === 403 && !!((_a = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _a === void 0 ? void 0 : _a['www-authenticate'])) {\n        const {\n          error,\n          error_description,\n          max_age\n        } = parseInsufficientAuthenticationError((_b = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _b === void 0 ? void 0 : _b['www-authenticate']);\n        if (error === 'insufficient_authentication_context') {\n          const insufficientAuthenticationError = new AuthApiError({\n            errorSummary: error,\n            errorCauses: [{\n              errorSummary: error_description\n            }]\n          }, errorResp, {\n            max_age: +max_age\n          });\n          throw insufficientAuthenticationError;\n        } else {\n          throw err;\n        }\n      } else {\n        throw err;\n      }\n    }\n    const map = {\n      EmailTransaction,\n      EmailStatusTransaction,\n      EmailChallengeTransaction,\n      ProfileTransaction,\n      ProfileSchemaTransaction,\n      PhoneTransaction\n    };\n    const TransactionClass = map[options.transactionClassName] || BaseTransaction;\n    if (Array.isArray(res)) {\n      return res.map(item => new TransactionClass(oktaAuth, {\n        res: item,\n        accessToken\n      }));\n    }\n    return new TransactionClass(oktaAuth, {\n      res,\n      accessToken\n    });\n  });\n  return _sendRequest.apply(this, arguments);\n}\nfunction generateRequestFnFromLinks({\n  oktaAuth,\n  accessToken,\n  methodName,\n  links,\n  transactionClassName\n}) {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (payload) {\n          return sendRequest(oktaAuth, {\n            accessToken,\n            url: link.href,\n            method,\n            payload,\n            transactionClassName\n          });\n        });\n        return function (_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }\n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (payload) {\n      return sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method: link.hints.allow[0],\n        payload,\n        transactionClassName\n      });\n    });\n    return function (_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}\nexport { generateRequestFnFromLinks, sendRequest };","map":{"version":3,"names":["ProfileTransaction","ProfileSchemaTransaction","EmailTransaction","EmailStatusTransaction","EmailChallengeTransaction","PhoneTransaction","BaseTransaction","httpRequest","AuthApiError","AuthSdkError","parseInsufficientAuthenticationError","header","split","map","part","trim","reduce","acc","curr","replace","sendRequest","_x","_x2","_sendRequest","apply","arguments","_asyncToGenerator","oktaAuth","options","_a","_b","accessToken","accessTokenObj","idToken","idTokenObj","tokenManager","getTokensSync","issuer","url","method","payload","requestUrl","startsWith","res","Object","assign","headers","args","err","errorResp","xhr","status","error","error_description","max_age","insufficientAuthenticationError","errorSummary","errorCauses","TransactionClass","transactionClassName","Array","isArray","item","generateRequestFnFromLinks","methodName","links","toLowerCase","link","self","_ref","href","_x3","_ref2","hints","allow","_x4"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/myaccount/request.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport ProfileTransaction from './transactions/ProfileTransaction.js';\nimport ProfileSchemaTransaction from './transactions/ProfileSchemaTransaction.js';\nimport EmailTransaction from './transactions/EmailTransaction.js';\nimport EmailStatusTransaction from './transactions/EmailStatusTransaction.js';\nimport EmailChallengeTransaction from './transactions/EmailChallengeTransaction.js';\nimport PhoneTransaction from './transactions/PhoneTransaction.js';\nimport BaseTransaction from './transactions/Base.js';\nimport { httpRequest } from '../http/request.js';\nimport AuthApiError from '../errors/AuthApiError.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\n\nconst parseInsufficientAuthenticationError = (header) => {\n    if (!header) {\n        throw new AuthSdkError('Missing header string');\n    }\n    return header\n        .split(',')\n        .map(part => part.trim())\n        .map(part => part.split('='))\n        .reduce((acc, curr) => {\n        acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n        return acc;\n    }, {});\n};\nasync function sendRequest(oktaAuth, options) {\n    var _a, _b;\n    const { accessToken: accessTokenObj, idToken: idTokenObj } = oktaAuth.tokenManager.getTokensSync();\n    const idToken = idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.idToken;\n    const accessToken = options.accessToken || (accessTokenObj === null || accessTokenObj === void 0 ? void 0 : accessTokenObj.accessToken);\n    const { issuer } = oktaAuth.options;\n    const { url, method, payload } = options;\n    const requestUrl = url.startsWith(issuer) ? url : `${issuer}${url}`;\n    if (!accessToken) {\n        throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n    }\n    let res;\n    try {\n        res = await httpRequest(oktaAuth, Object.assign({ headers: { 'Accept': '*/*;okta-version=1.0.0' }, accessToken, url: requestUrl, method }, (payload && { args: payload })));\n    }\n    catch (err) {\n        const errorResp = err.xhr;\n        if (idToken && (errorResp === null || errorResp === void 0 ? void 0 : errorResp.status) === 403 && !!((_a = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _a === void 0 ? void 0 : _a['www-authenticate'])) {\n            const { error,\n            error_description,\n            max_age } = parseInsufficientAuthenticationError((_b = errorResp === null || errorResp === void 0 ? void 0 : errorResp.headers) === null || _b === void 0 ? void 0 : _b['www-authenticate']);\n            if (error === 'insufficient_authentication_context') {\n                const insufficientAuthenticationError = new AuthApiError({\n                    errorSummary: error,\n                    errorCauses: [{ errorSummary: error_description }]\n                }, errorResp,\n                { max_age: +max_age });\n                throw insufficientAuthenticationError;\n            }\n            else {\n                throw err;\n            }\n        }\n        else {\n            throw err;\n        }\n    }\n    const map = {\n        EmailTransaction,\n        EmailStatusTransaction,\n        EmailChallengeTransaction,\n        ProfileTransaction,\n        ProfileSchemaTransaction,\n        PhoneTransaction\n    };\n    const TransactionClass = map[options.transactionClassName] || BaseTransaction;\n    if (Array.isArray(res)) {\n        return res.map(item => new TransactionClass(oktaAuth, {\n            res: item,\n            accessToken\n        }));\n    }\n    return new TransactionClass(oktaAuth, {\n        res,\n        accessToken\n    });\n}\nfunction generateRequestFnFromLinks({ oktaAuth, accessToken, methodName, links, transactionClassName }) {\n    for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n        if (method.toLowerCase() === methodName) {\n            const link = links.self;\n            return (async (payload) => sendRequest(oktaAuth, {\n                accessToken,\n                url: link.href,\n                method,\n                payload,\n                transactionClassName\n            }));\n        }\n    }\n    const link = links[methodName];\n    if (!link) {\n        throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n    }\n    return (async (payload) => sendRequest(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method: link.hints.allow[0],\n        payload,\n        transactionClassName\n    }));\n}\n\nexport { generateRequestFnFromLinks, sendRequest };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}