{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpEvent, HttpHandler, HttpRequest } from \"@angular/common/http\";\nimport { OKTA_AUTH } from \"@okta/okta-angular\";\nimport { from, lastValueFrom } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@okta/okta-auth-js\";\nexport class AuthInterceptorService {\n  constructor(oktaAuth) {\n    this.oktaAuth = oktaAuth;\n  }\n  intercept(request, next) {\n    return from(this.handleAccess(request, next));\n  }\n  handleAccess(request, next) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Only add an access token for secured endpoints\n      const securedEndpoints = [`${environment.apiUrl}/api/orders`];\n      if (securedEndpoints.some(url => request.urlWithParams.includes(url))) {\n        // get access token\n        const accessToken = _this.oktaAuth.getAccessToken();\n        // clone the request and add new header with access token\n        request = request.clone({\n          setHeaders: {\n            Authorization: \"Bearer \" + accessToken\n          }\n        });\n      }\n      return yield lastValueFrom(next.handle(request));\n    })();\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(OKTA_AUTH));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["HttpEvent","HttpHandler","HttpRequest","OKTA_AUTH","from","lastValueFrom","environment","AuthInterceptorService","constructor","oktaAuth","intercept","request","next","handleAccess","_this","_asyncToGenerator","securedEndpoints","apiUrl","some","url","urlWithParams","includes","accessToken","getAccessToken","clone","setHeaders","Authorization","handle","i0","ɵɵinject","factory","ɵfac","providedIn"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/src/app/services/auth-interceptor.service.ts"],"sourcesContent":["import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { OKTA_AUTH } from \"@okta/okta-angular\";\nimport { OktaAuth } from \"@okta/okta-auth-js\";\nimport { from, lastValueFrom, Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n  constructor(@Inject(OKTA_AUTH) private oktaAuth: OktaAuth) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return from(this.handleAccess(request, next));\n  }\n\n  private async handleAccess(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Promise<HttpEvent<any>> {\n    // Only add an access token for secured endpoints\n    const securedEndpoints = [`${environment.apiUrl}/api/orders`];\n\n    if (securedEndpoints.some((url) => request.urlWithParams.includes(url))) {\n      // get access token\n      const accessToken = this.oktaAuth.getAccessToken();\n\n      // clone the request and add new header with access token\n      request = request.clone({\n        setHeaders: {\n          Authorization: \"Bearer \" + accessToken,\n        },\n      });\n    }\n\n    return await lastValueFrom(next.handle(request));\n  }\n}\n"],"mappings":";AAAA,SACEA,SAAS,EACTC,WAAW,EAEXC,WAAW,QACN,sBAAsB;AAE7B,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,IAAI,EAAEC,aAAa,QAAoB,MAAM;AACtD,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,sBAAsB;EACjCC,YAAuCC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;EAAa;EAE5DC,SAASA,CACPC,OAAyB,EACzBC,IAAiB;IAEjB,OAAOR,IAAI,CAAC,IAAI,CAACS,YAAY,CAACF,OAAO,EAAEC,IAAI,CAAC,CAAC;EAC/C;EAEcC,YAAYA,CACxBF,OAAyB,EACzBC,IAAiB;IAAA,IAAAE,KAAA;IAAA,OAAAC,iBAAA;MAEjB;MACA,MAAMC,gBAAgB,GAAG,CAAC,GAAGV,WAAW,CAACW,MAAM,aAAa,CAAC;MAE7D,IAAID,gBAAgB,CAACE,IAAI,CAAEC,GAAG,IAAKR,OAAO,CAACS,aAAa,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAC,EAAE;QACvE;QACA,MAAMG,WAAW,GAAGR,KAAI,CAACL,QAAQ,CAACc,cAAc,EAAE;QAElD;QACAZ,OAAO,GAAGA,OAAO,CAACa,KAAK,CAAC;UACtBC,UAAU,EAAE;YACVC,aAAa,EAAE,SAAS,GAAGJ;;SAE9B,CAAC;;MAGJ,aAAajB,aAAa,CAACO,IAAI,CAACe,MAAM,CAAChB,OAAO,CAAC,CAAC;IAAC;EACnD;;;mBA9BWJ,sBAAsB,EAAAqB,EAAA,CAAAC,QAAA,CACb1B,SAAS;AAAA;;SADlBI,sBAAsB;EAAAuB,OAAA,EAAtBvB,sBAAsB,CAAAwB,IAAA;EAAAC,UAAA,EAFrB;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}