{"ast":null,"code":"import '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\n\n/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction getUserAgent() {\n  return navigator.userAgent;\n}\nfunction isWindowsPhone(userAgent) {\n  return userAgent.match(/windows phone|iemobile|wpdesktop/i);\n}\nvar DeviceFingerprinting = {\n  isMessageFromCorrectSource: function ($iframe, event) {\n    return event.source === $iframe[0].contentWindow;\n  },\n  // NOTE: This utility is similar to the DeviceFingerprint.js file used for V1 authentication flows.\n  generateDeviceFingerprint: function (fingerprintData) {\n    return new Promise((resolve, reject) => {\n      const userAgent = getUserAgent();\n      if (!userAgent) {\n        return reject('user agent is not defined');\n      } else if (isWindowsPhone(userAgent)) {\n        return reject('device fingerprint is not supported on Windows phones');\n      }\n      let $iframe;\n      let iFrameTimeout;\n      const self = this; // Needed for mocking\n\n      function removeIframe() {\n        $iframe.off();\n        $iframe.remove();\n        window.removeEventListener('message', onMessageReceivedFromOkta, false);\n      }\n      function handleError(reason) {\n        removeIframe();\n        reject(reason);\n      }\n      function onMessageReceivedFromOkta(event) {\n        if (!self.isMessageFromCorrectSource($iframe, event)) {\n          return;\n        } // deviceFingerprint service is available, clear timeout\n\n        clearTimeout(iFrameTimeout);\n        if (!event || !event.data || event.origin !== fingerprintData.oktaDomainUrl) {\n          handleError('no data');\n          return;\n        }\n        try {\n          const message = JSON.parse(event.data);\n          if (message && message.type === 'FingerprintServiceReady') {\n            sendMessageToOkta({\n              type: 'GetFingerprint'\n            });\n          } else if (message && message.type === 'FingerprintAvailable') {\n            removeIframe();\n            resolve(message.fingerprint);\n          } else {\n            handleError('no data');\n          }\n        } catch (error) {//Ignore any errors since we could get other messages too\n        }\n      }\n      function sendMessageToOkta(message) {\n        const win = $iframe[0].contentWindow;\n        if (win) {\n          win.postMessage(JSON.stringify(message), fingerprintData.oktaDomainUrl);\n        }\n      } // Attach listener\n\n      window.addEventListener('message', onMessageReceivedFromOkta, false); // Create and Load devicefingerprint page inside the iframe\n\n      $iframe = oktaJQueryStatic('<iframe>', {\n        style: 'display: none;',\n        src: fingerprintData.oktaDomainUrl + '/auth/services/devicefingerprint'\n      });\n      fingerprintData.element.append($iframe);\n      iFrameTimeout = setTimeout(() => {\n        // If the iFrame does not load or there is a slow connection, throw an error\n        handleError('service not available');\n      }, 2000);\n    });\n  }\n};\nexport { DeviceFingerprinting as default };","map":{"version":3,"names":["oktaJQueryStatic","getUserAgent","navigator","userAgent","isWindowsPhone","match","DeviceFingerprinting","isMessageFromCorrectSource","$iframe","event","source","contentWindow","generateDeviceFingerprint","fingerprintData","Promise","resolve","reject","iFrameTimeout","self","removeIframe","off","remove","window","removeEventListener","onMessageReceivedFromOkta","handleError","reason","clearTimeout","data","origin","oktaDomainUrl","message","JSON","parse","type","sendMessageToOkta","fingerprint","error","win","postMessage","stringify","addEventListener","style","src","element","append","setTimeout","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/utils/DeviceFingerprinting.js"],"sourcesContent":["import '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\n\n/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction getUserAgent() {\n  return navigator.userAgent;\n}\n\nfunction isWindowsPhone(userAgent) {\n  return userAgent.match(/windows phone|iemobile|wpdesktop/i);\n}\n\nvar DeviceFingerprinting = {\n  isMessageFromCorrectSource: function ($iframe, event) {\n    return event.source === $iframe[0].contentWindow;\n  },\n  // NOTE: This utility is similar to the DeviceFingerprint.js file used for V1 authentication flows.\n  generateDeviceFingerprint: function (fingerprintData) {\n    return new Promise((resolve, reject) => {\n      const userAgent = getUserAgent();\n\n      if (!userAgent) {\n        return reject('user agent is not defined');\n      } else if (isWindowsPhone(userAgent)) {\n        return reject('device fingerprint is not supported on Windows phones');\n      }\n\n      let $iframe;\n      let iFrameTimeout;\n      const self = this; // Needed for mocking\n\n      function removeIframe() {\n        $iframe.off();\n        $iframe.remove();\n        window.removeEventListener('message', onMessageReceivedFromOkta, false);\n      }\n\n      function handleError(reason) {\n        removeIframe();\n        reject(reason);\n      }\n\n      function onMessageReceivedFromOkta(event) {\n        if (!self.isMessageFromCorrectSource($iframe, event)) {\n          return;\n        } // deviceFingerprint service is available, clear timeout\n\n\n        clearTimeout(iFrameTimeout);\n\n        if (!event || !event.data || event.origin !== fingerprintData.oktaDomainUrl) {\n          handleError('no data');\n          return;\n        }\n\n        try {\n          const message = JSON.parse(event.data);\n\n          if (message && message.type === 'FingerprintServiceReady') {\n            sendMessageToOkta({\n              type: 'GetFingerprint'\n            });\n          } else if (message && message.type === 'FingerprintAvailable') {\n            removeIframe();\n            resolve(message.fingerprint);\n          } else {\n            handleError('no data');\n          }\n        } catch (error) {//Ignore any errors since we could get other messages too\n        }\n      }\n\n      function sendMessageToOkta(message) {\n        const win = $iframe[0].contentWindow;\n\n        if (win) {\n          win.postMessage(JSON.stringify(message), fingerprintData.oktaDomainUrl);\n        }\n      } // Attach listener\n\n\n      window.addEventListener('message', onMessageReceivedFromOkta, false); // Create and Load devicefingerprint page inside the iframe\n\n      $iframe = oktaJQueryStatic('<iframe>', {\n        style: 'display: none;',\n        src: fingerprintData.oktaDomainUrl + '/auth/services/devicefingerprint'\n      });\n      fingerprintData.element.append($iframe);\n      iFrameTimeout = setTimeout(() => {\n        // If the iFrame does not load or there is a slow connection, throw an error\n        handleError('service not available');\n      }, 2000);\n    });\n  }\n};\n\nexport { DeviceFingerprinting as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}