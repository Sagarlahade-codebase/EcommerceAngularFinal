{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getDefaultTokenParams } from './util/defaultTokenParams.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport { clone } from '../util/object.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nimport { postToTokenEndpoint } from './endpoints/token.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\nfunction exchangeCodeForTokens(sdk, tokenParams, urls) {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state\n  } = tokenParams;\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier\n  };\n  return postToTokenEndpoint(sdk, getTokenOptions, urls).then(response => {\n    const responseType = ['token'];\n    if (scopes.indexOf('openid') !== -1) {\n      responseType.push('id_token');\n    }\n    const handleResponseOptions = {\n      clientId,\n      redirectUri,\n      scopes,\n      responseType,\n      ignoreSignature\n    };\n    return handleOAuthResponse(sdk, handleResponseOptions, response, urls).then(response => {\n      response.code = authorizationCode;\n      response.state = state;\n      return response;\n    });\n  }).finally(() => {\n    sdk.transactionManager.clear();\n  });\n}\nexport { exchangeCodeForTokens };","map":{"version":3,"names":["getDefaultTokenParams","getOAuthUrls","clone","postToTokenEndpoint","handleOAuthResponse","exchangeCodeForTokens","sdk","tokenParams","urls","Object","assign","authorizationCode","interactionCode","codeVerifier","clientId","redirectUri","scopes","ignoreSignature","state","getTokenOptions","then","response","responseType","indexOf","push","handleResponseOptions","code","finally","transactionManager","clear"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/exchangeCodeForTokens.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getDefaultTokenParams } from './util/defaultTokenParams.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport { clone } from '../util/object.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nimport { postToTokenEndpoint } from './endpoints/token.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction exchangeCodeForTokens(sdk, tokenParams, urls) {\n    urls = urls || getOAuthUrls(sdk, tokenParams);\n    tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n    const { authorizationCode, interactionCode, codeVerifier, clientId, redirectUri, scopes, ignoreSignature, state } = tokenParams;\n    var getTokenOptions = {\n        clientId,\n        redirectUri,\n        authorizationCode,\n        interactionCode,\n        codeVerifier,\n    };\n    return postToTokenEndpoint(sdk, getTokenOptions, urls)\n        .then((response) => {\n        const responseType = ['token'];\n        if (scopes.indexOf('openid') !== -1) {\n            responseType.push('id_token');\n        }\n        const handleResponseOptions = {\n            clientId,\n            redirectUri,\n            scopes,\n            responseType,\n            ignoreSignature,\n        };\n        return handleOAuthResponse(sdk, handleResponseOptions, response, urls)\n            .then((response) => {\n            response.code = authorizationCode;\n            response.state = state;\n            return response;\n        });\n    })\n        .finally(() => {\n        sdk.transactionManager.clear();\n    });\n}\n\nexport { exchangeCodeForTokens };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,qBAAqB,QAAQ,8BAA8B;AACpE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,KAAK,QAAQ,mBAAmB;AACzC,OAAO,qBAAqB;AAC5B,OAAO,uBAAuB;AAC9B,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,qBAAqBA,CAACC,GAAG,EAAEC,WAAW,EAAEC,IAAI,EAAE;EACnDA,IAAI,GAAGA,IAAI,IAAIP,YAAY,CAACK,GAAG,EAAEC,WAAW,CAAC;EAC7CA,WAAW,GAAGE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,qBAAqB,CAACM,GAAG,CAAC,EAAEJ,KAAK,CAACK,WAAW,CAAC,CAAC;EAC/E,MAAM;IAAEI,iBAAiB;IAAEC,eAAe;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,MAAM;IAAEC,eAAe;IAAEC;EAAM,CAAC,GAAGX,WAAW;EAC/H,IAAIY,eAAe,GAAG;IAClBL,QAAQ;IACRC,WAAW;IACXJ,iBAAiB;IACjBC,eAAe;IACfC;EACJ,CAAC;EACD,OAAOV,mBAAmB,CAACG,GAAG,EAAEa,eAAe,EAAEX,IAAI,CAAC,CACjDY,IAAI,CAAEC,QAAQ,IAAK;IACpB,MAAMC,YAAY,GAAG,CAAC,OAAO,CAAC;IAC9B,IAAIN,MAAM,CAACO,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MACjCD,YAAY,CAACE,IAAI,CAAC,UAAU,CAAC;IACjC;IACA,MAAMC,qBAAqB,GAAG;MAC1BX,QAAQ;MACRC,WAAW;MACXC,MAAM;MACNM,YAAY;MACZL;IACJ,CAAC;IACD,OAAOb,mBAAmB,CAACE,GAAG,EAAEmB,qBAAqB,EAAEJ,QAAQ,EAAEb,IAAI,CAAC,CACjEY,IAAI,CAAEC,QAAQ,IAAK;MACpBA,QAAQ,CAACK,IAAI,GAAGf,iBAAiB;MACjCU,QAAQ,CAACH,KAAK,GAAGA,KAAK;MACtB,OAAOG,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC,CAAC,CACGM,OAAO,CAAC,MAAM;IACfrB,GAAG,CAACsB,kBAAkB,CAACC,KAAK,CAAC,CAAC;EAClC,CAAC,CAAC;AACN;AAEA,SAASxB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}