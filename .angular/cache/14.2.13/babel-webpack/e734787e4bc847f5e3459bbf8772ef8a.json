{"ast":null,"code":"import { loc } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport FormController from '../util/FormController.js';\nimport FormType from '../util/FormType.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar PollController = FormController.extend({\n  className: 'poll',\n  Model: {\n    save: function () {\n      this.trigger('cancelRequest');\n      return this.appState.get('transaction').cancel().then(() => {\n        this.options.appState.trigger('navigate', '');\n      }).catch(() => {\n        this._stopCountDown();\n      });\n    }\n  },\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: function () {\n      return this.title;\n    },\n    className: 'poll-controller',\n    noCancelButton: true,\n    save: loc('oform.cancel', 'login'),\n    modelEvents: {\n      cancelRequest: '_stopCountDown'\n    },\n    formChildren: [FormType.View({\n      View: '<div >\\\n               <div data-se=\"poll-waiting\" class=\"hide okta-waiting-spinner\"></div>\\\n             </div>'\n    })],\n    _checkStatus: function () {\n      // start polling request\n      this.transactionObject.poll().then(resp => {\n        if (resp.data && resp.status !== 'POLL') {\n          this.options.appState.set('transaction', resp);\n          return;\n        }\n        this.$('.okta-waiting-spinner').hide();\n        let factorPollingIntervalSeconds = Math.ceil(resp.transaction.profile.refresh / 1000);\n        this._startCountDown(factorPollingIntervalSeconds);\n      }).catch(() => {\n        this._stopCountDown();\n      });\n    },\n    _startCountDown: function (factorPollingIntervalSeconds) {\n      // start one second countdown for next poll request\n      this.countDown = setInterval(() => {\n        // update title after every second and check if countdown == 1 to poll again\n        this._updateTitle(factorPollingIntervalSeconds);\n        if (factorPollingIntervalSeconds === 0) {\n          /* when countdown hits 0\n                       - stop current poll\n                       - show spinner\n                       - check status\n                      */\n          this._stopCountDown();\n          this.$('.okta-waiting-spinner').show(); // start after a small delay so that the spinner does not get hidden too soon\n\n          this.checkStatusTimeout = setTimeout(() => {\n            this._checkStatus();\n          }, 200);\n        } else {\n          // reduce countdown after every second\n          factorPollingIntervalSeconds = factorPollingIntervalSeconds - 1;\n        }\n      }, 1000);\n    },\n    _updateTitle: function (factorPollingIntervalSeconds) {\n      this.title = loc('polling.title', 'login', [factorPollingIntervalSeconds]);\n      this.$el.find('.okta-form-title').text(this.title);\n    },\n    _stopCountDown: function () {\n      // clear countdown setInterval\n      if (this.countDown) {\n        clearInterval(this.countDown);\n      } // clear checkstatus setTimeout\n\n      if (this.checkStatusTimeout) {\n        clearInterval(this.checkStatusTimeout);\n      }\n    },\n    initialize: function (options) {\n      this.transactionObject = options.appState.get('transaction');\n      this.factorPollingIntervalSeconds = Math.ceil(this.transactionObject.transaction.profile.refresh / 1000);\n      this._updateTitle(this.factorPollingIntervalSeconds);\n      this._startCountDown(this.factorPollingIntervalSeconds);\n    }\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n  remove: function () {\n    this.form._stopCountDown();\n  }\n});\nexport { PollController as default };","map":{"version":3,"names":["loc","FormController","FormType","PollController","extend","className","Model","save","trigger","appState","get","cancel","then","options","catch","_stopCountDown","Form","autoSave","hasSavingState","title","noCancelButton","modelEvents","cancelRequest","formChildren","View","_checkStatus","transactionObject","poll","resp","data","status","set","$","hide","factorPollingIntervalSeconds","Math","ceil","transaction","profile","refresh","_startCountDown","countDown","setInterval","_updateTitle","show","checkStatusTimeout","setTimeout","$el","find","text","clearInterval","initialize","back","remove","form","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/PollController.js"],"sourcesContent":["import { loc } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport FormController from '../util/FormController.js';\nimport FormType from '../util/FormType.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar PollController = FormController.extend({\n  className: 'poll',\n  Model: {\n    save: function () {\n      this.trigger('cancelRequest');\n      return this.appState.get('transaction').cancel().then(() => {\n        this.options.appState.trigger('navigate', '');\n      }).catch(() => {\n        this._stopCountDown();\n      });\n    }\n  },\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: function () {\n      return this.title;\n    },\n    className: 'poll-controller',\n    noCancelButton: true,\n    save: loc('oform.cancel', 'login'),\n    modelEvents: {\n      cancelRequest: '_stopCountDown'\n    },\n    formChildren: [FormType.View({\n      View: '<div >\\\n               <div data-se=\"poll-waiting\" class=\"hide okta-waiting-spinner\"></div>\\\n             </div>'\n    })],\n    _checkStatus: function () {\n      // start polling request\n      this.transactionObject.poll().then(resp => {\n        if (resp.data && resp.status !== 'POLL') {\n          this.options.appState.set('transaction', resp);\n          return;\n        }\n\n        this.$('.okta-waiting-spinner').hide();\n        let factorPollingIntervalSeconds = Math.ceil(resp.transaction.profile.refresh / 1000);\n\n        this._startCountDown(factorPollingIntervalSeconds);\n      }).catch(() => {\n        this._stopCountDown();\n      });\n    },\n    _startCountDown: function (factorPollingIntervalSeconds) {\n      // start one second countdown for next poll request\n      this.countDown = setInterval(() => {\n        // update title after every second and check if countdown == 1 to poll again\n        this._updateTitle(factorPollingIntervalSeconds);\n\n        if (factorPollingIntervalSeconds === 0) {\n          /* when countdown hits 0\n                       - stop current poll\n                       - show spinner\n                       - check status\n                      */\n          this._stopCountDown();\n\n          this.$('.okta-waiting-spinner').show(); // start after a small delay so that the spinner does not get hidden too soon\n\n          this.checkStatusTimeout = setTimeout(() => {\n            this._checkStatus();\n          }, 200);\n        } else {\n          // reduce countdown after every second\n          factorPollingIntervalSeconds = factorPollingIntervalSeconds - 1;\n        }\n      }, 1000);\n    },\n    _updateTitle: function (factorPollingIntervalSeconds) {\n      this.title = loc('polling.title', 'login', [factorPollingIntervalSeconds]);\n      this.$el.find('.okta-form-title').text(this.title);\n    },\n    _stopCountDown: function () {\n      // clear countdown setInterval\n      if (this.countDown) {\n        clearInterval(this.countDown);\n      } // clear checkstatus setTimeout\n\n\n      if (this.checkStatusTimeout) {\n        clearInterval(this.checkStatusTimeout);\n      }\n    },\n    initialize: function (options) {\n      this.transactionObject = options.appState.get('transaction');\n      this.factorPollingIntervalSeconds = Math.ceil(this.transactionObject.transaction.profile.refresh / 1000);\n\n      this._updateTitle(this.factorPollingIntervalSeconds);\n\n      this._startCountDown(this.factorPollingIntervalSeconds);\n    }\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n  remove: function () {\n    this.form._stopCountDown();\n  }\n});\n\nexport { PollController as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}