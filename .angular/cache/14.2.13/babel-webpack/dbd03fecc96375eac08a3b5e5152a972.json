{"ast":null,"code":"import '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Q from 'q';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar DeviceFingerprint = {\n  getUserAgent: function () {\n    return navigator.userAgent;\n  },\n  isMessageFromCorrectSource: function ($iframe, event) {\n    return event.source === $iframe[0].contentWindow;\n  },\n  generateDeviceFingerprint: function (oktaDomainUrl, element) {\n    const userAgent = this.getUserAgent();\n    if (!userAgent) {\n      return Q.reject('user agent is not defined');\n    } else if (isWindowsPhone(userAgent)) {\n      return Q.reject('device fingerprint is not supported on Windows phones');\n    }\n    const deferred = Q.defer();\n    const self = this;\n    let $iframe;\n    let iFrameTimeout;\n    function isWindowsPhone(userAgent) {\n      return userAgent.match(/windows phone|iemobile|wpdesktop/i);\n    }\n    function removeIframe() {\n      $iframe.off();\n      $iframe.remove();\n      window.removeEventListener('message', onMessageReceivedFromOkta, false);\n    }\n    function handleError(reason) {\n      removeIframe();\n      deferred.reject(reason);\n    }\n    function onMessageReceivedFromOkta(event) {\n      if (!self.isMessageFromCorrectSource($iframe, event)) {\n        return;\n      } // deviceFingerprint service is available, clear timeout\n\n      clearTimeout(iFrameTimeout);\n      if (!event || !event.data || event.origin !== oktaDomainUrl) {\n        handleError('no data');\n        return;\n      }\n      try {\n        const message = JSON.parse(event.data);\n        if (message && message.type === 'FingerprintServiceReady') {\n          sendMessageToOkta({\n            type: 'GetFingerprint'\n          });\n        } else if (message && message.type === 'FingerprintAvailable') {\n          removeIframe();\n          deferred.resolve(message.fingerprint);\n        } else {\n          handleError('no data');\n        }\n      } catch (error) {//Ignore any errors since we could get other messages too\n      }\n    }\n    function sendMessageToOkta(message) {\n      const win = $iframe[0].contentWindow;\n      if (win) {\n        win.postMessage(JSON.stringify(message), oktaDomainUrl);\n      }\n    } // Attach listener\n\n    window.addEventListener('message', onMessageReceivedFromOkta, false); // Create and Load devicefingerprint page inside the iframe\n\n    $iframe = oktaJQueryStatic('<iframe>', {\n      style: 'display: none;',\n      src: oktaDomainUrl + '/auth/services/devicefingerprint'\n    });\n    element.append($iframe);\n    iFrameTimeout = setTimeout(() => {\n      // If the iFrame does not load, throw an error\n      handleError('service not available');\n    }, 2000);\n    return deferred.promise;\n  }\n};\nexport { DeviceFingerprint as default };","map":{"version":3,"names":["oktaJQueryStatic","Q","DeviceFingerprint","getUserAgent","navigator","userAgent","isMessageFromCorrectSource","$iframe","event","source","contentWindow","generateDeviceFingerprint","oktaDomainUrl","element","reject","isWindowsPhone","deferred","defer","self","iFrameTimeout","match","removeIframe","off","remove","window","removeEventListener","onMessageReceivedFromOkta","handleError","reason","clearTimeout","data","origin","message","JSON","parse","type","sendMessageToOkta","resolve","fingerprint","error","win","postMessage","stringify","addEventListener","style","src","append","setTimeout","promise","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/util/DeviceFingerprint.js"],"sourcesContent":["import '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Q from 'q';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar DeviceFingerprint = {\n  getUserAgent: function () {\n    return navigator.userAgent;\n  },\n  isMessageFromCorrectSource: function ($iframe, event) {\n    return event.source === $iframe[0].contentWindow;\n  },\n  generateDeviceFingerprint: function (oktaDomainUrl, element) {\n    const userAgent = this.getUserAgent();\n\n    if (!userAgent) {\n      return Q.reject('user agent is not defined');\n    } else if (isWindowsPhone(userAgent)) {\n      return Q.reject('device fingerprint is not supported on Windows phones');\n    }\n\n    const deferred = Q.defer();\n    const self = this;\n    let $iframe;\n    let iFrameTimeout;\n\n    function isWindowsPhone(userAgent) {\n      return userAgent.match(/windows phone|iemobile|wpdesktop/i);\n    }\n\n    function removeIframe() {\n      $iframe.off();\n      $iframe.remove();\n      window.removeEventListener('message', onMessageReceivedFromOkta, false);\n    }\n\n    function handleError(reason) {\n      removeIframe();\n      deferred.reject(reason);\n    }\n\n    function onMessageReceivedFromOkta(event) {\n      if (!self.isMessageFromCorrectSource($iframe, event)) {\n        return;\n      } // deviceFingerprint service is available, clear timeout\n\n\n      clearTimeout(iFrameTimeout);\n\n      if (!event || !event.data || event.origin !== oktaDomainUrl) {\n        handleError('no data');\n        return;\n      }\n\n      try {\n        const message = JSON.parse(event.data);\n\n        if (message && message.type === 'FingerprintServiceReady') {\n          sendMessageToOkta({\n            type: 'GetFingerprint'\n          });\n        } else if (message && message.type === 'FingerprintAvailable') {\n          removeIframe();\n          deferred.resolve(message.fingerprint);\n        } else {\n          handleError('no data');\n        }\n      } catch (error) {//Ignore any errors since we could get other messages too\n      }\n    }\n\n    function sendMessageToOkta(message) {\n      const win = $iframe[0].contentWindow;\n\n      if (win) {\n        win.postMessage(JSON.stringify(message), oktaDomainUrl);\n      }\n    } // Attach listener\n\n\n    window.addEventListener('message', onMessageReceivedFromOkta, false); // Create and Load devicefingerprint page inside the iframe\n\n    $iframe = oktaJQueryStatic('<iframe>', {\n      style: 'display: none;',\n      src: oktaDomainUrl + '/auth/services/devicefingerprint'\n    });\n    element.append($iframe);\n    iFrameTimeout = setTimeout(() => {\n      // If the iFrame does not load, throw an error\n      handleError('service not available');\n    }, 2000);\n    return deferred.promise;\n  }\n};\n\nexport { DeviceFingerprint as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}