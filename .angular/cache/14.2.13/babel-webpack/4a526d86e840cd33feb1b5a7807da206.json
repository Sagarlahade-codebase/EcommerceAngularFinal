{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { isString } from '../util/types.js';\nimport { isInteractionRequiredError } from './util/errors.js';\nimport { urlParamsToObject } from './util/urlParams.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\nfunction getResponseMode(sdk) {\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\nfunction parseOAuthResponseFromUrl(sdk, options) {\n  options = options || {};\n  if (isString(options)) {\n    options = {\n      url: options\n    };\n  } else {\n    options = options;\n  }\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n  return urlParamsToObject(paramStr);\n}\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\nfunction parseFromUrl(_x, _x2) {\n  return _parseFromUrl.apply(this, arguments);\n}\nfunction _parseFromUrl() {\n  _parseFromUrl = _asyncToGenerator(function* (sdk, options) {\n    options = options || {};\n    if (isString(options)) {\n      options = {\n        url: options\n      };\n    } else {\n      options = options;\n    }\n    const res = parseOAuthResponseFromUrl(sdk, options);\n    const state = res.state;\n    const oauthParams = sdk.transactionManager.load({\n      oauth: true,\n      pkce: sdk.options.pkce,\n      state\n    });\n    if (!oauthParams) {\n      return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n    }\n    const urls = oauthParams.urls;\n    delete oauthParams.urls;\n    if (!options.url) {\n      cleanOAuthResponseFromUrl(sdk, options);\n    }\n    return handleOAuthResponse(sdk, oauthParams, res, urls).catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    }).then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n  });\n  return _parseFromUrl.apply(this, arguments);\n}\nexport { cleanOAuthResponseFromUrl, getResponseMode, parseFromUrl, parseOAuthResponseFromUrl };","map":{"version":3,"names":["AuthSdkError","isString","isInteractionRequiredError","urlParamsToObject","handleOAuthResponse","removeHash","sdk","nativeHistory","token","parseFromUrl","_getHistory","nativeDoc","_getDocument","nativeLoc","_getLocation","replaceState","title","pathname","search","hash","removeSearch","getResponseMode","defaultResponseMode","options","pkce","responseMode","parseOAuthResponseFromUrl","url","paramStr","substring","indexOf","cleanOAuthResponseFromUrl","_x","_x2","_parseFromUrl","apply","arguments","_asyncToGenerator","res","state","oauthParams","transactionManager","load","oauth","Promise","reject","urls","catch","err","clear","then"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/parseFromUrl.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { isString } from '../util/types.js';\nimport { isInteractionRequiredError } from './util/errors.js';\nimport { urlParamsToObject } from './util/urlParams.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\n\nfunction removeHash(sdk) {\n    var nativeHistory = sdk.token.parseFromUrl._getHistory();\n    var nativeDoc = sdk.token.parseFromUrl._getDocument();\n    var nativeLoc = sdk.token.parseFromUrl._getLocation();\n    if (nativeHistory && nativeHistory.replaceState) {\n        nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n    }\n    else {\n        nativeLoc.hash = '';\n    }\n}\nfunction removeSearch(sdk) {\n    var nativeHistory = sdk.token.parseFromUrl._getHistory();\n    var nativeDoc = sdk.token.parseFromUrl._getDocument();\n    var nativeLoc = sdk.token.parseFromUrl._getLocation();\n    if (nativeHistory && nativeHistory.replaceState) {\n        nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n    }\n    else {\n        nativeLoc.search = '';\n    }\n}\nfunction getResponseMode(sdk) {\n    var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n    var responseMode = sdk.options.responseMode || defaultResponseMode;\n    return responseMode;\n}\nfunction parseOAuthResponseFromUrl(sdk, options) {\n    options = options || {};\n    if (isString(options)) {\n        options = { url: options };\n    }\n    else {\n        options = options;\n    }\n    var url = options.url;\n    var responseMode = options.responseMode || getResponseMode(sdk);\n    var nativeLoc = sdk.token.parseFromUrl._getLocation();\n    var paramStr;\n    if (responseMode === 'query') {\n        paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n    }\n    else {\n        paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n    }\n    if (!paramStr) {\n        throw new AuthSdkError('Unable to parse a token from the url');\n    }\n    return urlParamsToObject(paramStr);\n}\nfunction cleanOAuthResponseFromUrl(sdk, options) {\n    const responseMode = options.responseMode || getResponseMode(sdk);\n    responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\nasync function parseFromUrl(sdk, options) {\n    options = options || {};\n    if (isString(options)) {\n        options = { url: options };\n    }\n    else {\n        options = options;\n    }\n    const res = parseOAuthResponseFromUrl(sdk, options);\n    const state = res.state;\n    const oauthParams = sdk.transactionManager.load({\n        oauth: true,\n        pkce: sdk.options.pkce,\n        state\n    });\n    if (!oauthParams) {\n        return Promise.reject(new AuthSdkError('Unable to retrieve OAuth redirect params from storage'));\n    }\n    const urls = oauthParams.urls;\n    delete oauthParams.urls;\n    if (!options.url) {\n        cleanOAuthResponseFromUrl(sdk, options);\n    }\n    return handleOAuthResponse(sdk, oauthParams, res, urls)\n        .catch(err => {\n        if (!isInteractionRequiredError(err)) {\n            sdk.transactionManager.clear({\n                state\n            });\n        }\n        throw err;\n    })\n        .then(res => {\n        sdk.transactionManager.clear({\n            state\n        });\n        return res;\n    });\n}\n\nexport { cleanOAuthResponseFromUrl, getResponseMode, parseFromUrl, parseOAuthResponseFromUrl };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}