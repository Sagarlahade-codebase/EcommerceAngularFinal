{"ast":null,"code":"import { loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../internals/BaseHeader.js';\nimport BaseFooter from '../internals/BaseFooter.js';\nimport BaseForm from '../internals/BaseForm.js';\nimport '../internals/BaseFormWithPolling.js';\nimport '../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../internals/BaseView.js';\nimport { createIdpButtons } from '../internals/FormInputFactory.js';\nimport { FORMS } from '../../ion/RemediationConstants.js';\nimport { getPasswordComplexityDescriptionForHtmlList } from '../utils/AuthenticatorUtil.js';\nimport { generatePasswordPolicyHtml } from './password/PasswordPolicyUtil.js';\nimport signInWithIdps from './signin/SignInWithIdps.js';\nconst Body = BaseForm.extend({\n  title: function () {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      var _attributes$uiDisplay;\n      const attributes = this.options.appState.attributes;\n      if (attributes !== null && attributes !== void 0 && (_attributes$uiDisplay = attributes.uiDisplay) !== null && _attributes$uiDisplay !== void 0 && _attributes$uiDisplay.label) {\n        return loc('oie.registration.form.customize.label', 'login', [attributes.uiDisplay.label]);\n      } else {\n        return loc('oie.primaryauth.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.title', 'login');\n  },\n  save: function () {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      var _attributes$uiDisplay2;\n      const attributes = this.options.appState.attributes;\n      if (attributes !== null && attributes !== void 0 && (_attributes$uiDisplay2 = attributes.uiDisplay) !== null && _attributes$uiDisplay2 !== void 0 && _attributes$uiDisplay2.buttonLabel) {\n        return loc('oie.registration.form.customize.buttonLabel', 'login', [attributes.uiDisplay.buttonLabel]);\n      } else {\n        return loc('oie.registration.form.update.submit', 'login');\n      }\n    }\n    return loc('oie.registration.form.submit', 'login');\n  },\n  saveForm: function () {\n    // SIW customization hook for registration\n    this.settings.preRegistrationSubmit(this.model.toJSON(), postData => {\n      this.model.attributes = {\n        ...this.model.attributes,\n        ...this.model.parse(postData)\n      };\n      BaseForm.prototype.saveForm.call(this, this.model);\n    }, error => this.model.trigger('error', this.model, {\n      responseJSON: error\n    }));\n  },\n  triggerAfterError: function (model, error) {\n    var _error$responseJSON;\n\n    // render errors to view\n    const hasErrors = (error === null || error === void 0 ? void 0 : (_error$responseJSON = error.responseJSON) === null || _error$responseJSON === void 0 ? void 0 : _error$responseJSON.errorCauses) && Array.isArray(error.responseJSON.errorCauses);\n    if (hasErrors) {\n      error.responseJSON.errorCauses.forEach(err => {\n        var _err$errorKey;\n\n        // only do this for invalid password for password with SSR\n        if ((_err$errorKey = err.errorKey) !== null && _err$errorKey !== void 0 && _err$errorKey.includes('password.passwordRequirementsNotMet')) {\n          err.errorSummary = loc('registration.error.password.passwordRequirementsNotMet', 'login');\n        }\n      });\n    }\n    this.options.appState.trigger('afterError', error);\n  }\n});\nconst Footer = BaseFooter.extend({\n  links: function () {\n    const links = [];\n    if (this.options.appState.hasRemediationObject(FORMS.SELECT_IDENTIFY)) {\n      links.push({\n        'type': 'link',\n        'label': loc('haveaccount', 'login'),\n        'name': 'back',\n        'actionPath': FORMS.SELECT_IDENTIFY\n      });\n    }\n    return links;\n  }\n});\nvar EnrollProfileView = BaseView.extend({\n  Body: Body,\n  Footer: Footer,\n  createModelClass: function (currentViewState, optionUiSchemaConfig, settings) {\n    const currentSchema = JSON.parse(JSON.stringify(currentViewState.uiSchema));\n    let ModelClass = BaseView.prototype.createModelClass.apply(this, arguments, currentViewState);\n    ModelClass = ModelClass.extend({\n      toJSON: function () {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments, currentViewState); // delete optional attributes if they are empty and not required\n\n        if (modelJSON.userProfile) {\n          const uiSchema = currentViewState.uiSchema;\n          const userProfile = modelJSON.userProfile;\n          oktaUnderscore.each(userProfile, (value, name) => {\n            if (oktaUnderscore.isEmpty(value)) {\n              const uiSchemaProperty = uiSchema.find(schema => schema.name === `userProfile.${name}`);\n              if (!oktaUnderscore.isUndefined(uiSchemaProperty) && !uiSchemaProperty.required) {\n                delete userProfile[name];\n              }\n            }\n          });\n        }\n        return modelJSON;\n      }\n    });\n    settings.parseRegistrationSchema(currentSchema, schema => {\n      if (!oktaUnderscore.isEqual(schema, currentViewState.uiSchema)) {\n        currentViewState.uiSchema = schema;\n        ModelClass = BaseView.prototype.createModelClass.call(this, currentViewState, optionUiSchemaConfig);\n      }\n    }, error => {\n      ModelClass = ModelClass.extend({\n        local: {\n          parseSchemaError: {\n            value: error,\n            type: 'object'\n          },\n          ...ModelClass.prototype.local\n        }\n      });\n    });\n    return ModelClass;\n  },\n  postRender: function () {\n    BaseView.prototype.postRender.apply(this, arguments);\n    const modelError = this.model.get('parseSchemaError');\n    if (modelError) {\n      this.model.trigger('error', this.model, {\n        responseJSON: modelError\n      });\n    } // Prompt for password w/ SSR if enabled (credentials object in remediation)\n\n    this.renderPasswordPolicySettings();\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      this._addIdpView(idpButtons);\n    }\n  },\n  renderPasswordPolicySettings: function () {\n    var _credentials$form;\n\n    // retrieve password policy from \"credentials\" object in remediation\n    const currentViewState = this.options.currentViewState.value;\n    const credentials = currentViewState.filter(obj => {\n      return obj.name === 'credentials';\n    })[0]; // if \"passcode\" is present in \"credentials\", render password rules\n\n    const form = credentials === null || credentials === void 0 ? void 0 : (_credentials$form = credentials.form) === null || _credentials$form === void 0 ? void 0 : _credentials$form.value;\n    if (form && form.filter(obj => {\n      return obj.name === 'passcode';\n    })) {\n      var _credentials$relatesT, _credentials$relatesT2;\n      generatePasswordPolicyHtml(this, getPasswordComplexityDescriptionForHtmlList(credentials === null || credentials === void 0 ? void 0 : (_credentials$relatesT = credentials.relatesTo) === null || _credentials$relatesT === void 0 ? void 0 : (_credentials$relatesT2 = _credentials$relatesT.value) === null || _credentials$relatesT2 === void 0 ? void 0 : _credentials$relatesT2.settings), false);\n    }\n  },\n  _addIdpView: function (idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons: idpButtons,\n        isPrimaryIdpDisplay: isPrimaryIdpDisplay\n      }\n    });\n  }\n});\nexport { EnrollProfileView as default };","map":{"version":3,"names":["loc","oktaUnderscore","Model","BaseFooter","BaseForm","BaseView","createIdpButtons","FORMS","getPasswordComplexityDescriptionForHtmlList","generatePasswordPolicyHtml","signInWithIdps","Body","extend","title","options","appState","getCurrentViewState","href","endsWith","_attributes$uiDisplay","attributes","uiDisplay","label","save","_attributes$uiDisplay2","buttonLabel","saveForm","settings","preRegistrationSubmit","model","toJSON","postData","parse","prototype","call","error","trigger","responseJSON","triggerAfterError","_error$responseJSON","hasErrors","errorCauses","Array","isArray","forEach","err","_err$errorKey","errorKey","includes","errorSummary","Footer","links","hasRemediationObject","SELECT_IDENTIFY","push","EnrollProfileView","createModelClass","currentViewState","optionUiSchemaConfig","currentSchema","JSON","stringify","uiSchema","ModelClass","apply","arguments","modelJSON","userProfile","each","value","name","isEmpty","uiSchemaProperty","find","schema","isUndefined","required","parseRegistrationSchema","isEqual","local","parseSchemaError","type","postRender","modelError","get","renderPasswordPolicySettings","idpButtons","length","_addIdpView","_credentials$form","credentials","filter","obj","form","_credentials$relatesT","_credentials$relatesT2","relatesTo","idpDisplay","isPrimaryIdpDisplay","toUpperCase","add","prepend","selector","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/EnrollProfileView.js"],"sourcesContent":["import { loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../internals/BaseHeader.js';\nimport BaseFooter from '../internals/BaseFooter.js';\nimport BaseForm from '../internals/BaseForm.js';\nimport '../internals/BaseFormWithPolling.js';\nimport '../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../internals/BaseView.js';\nimport { createIdpButtons } from '../internals/FormInputFactory.js';\nimport { FORMS } from '../../ion/RemediationConstants.js';\nimport { getPasswordComplexityDescriptionForHtmlList } from '../utils/AuthenticatorUtil.js';\nimport { generatePasswordPolicyHtml } from './password/PasswordPolicyUtil.js';\nimport signInWithIdps from './signin/SignInWithIdps.js';\n\nconst Body = BaseForm.extend({\n  title: function () {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      var _attributes$uiDisplay;\n\n      const attributes = this.options.appState.attributes;\n\n      if (attributes !== null && attributes !== void 0 && (_attributes$uiDisplay = attributes.uiDisplay) !== null && _attributes$uiDisplay !== void 0 && _attributes$uiDisplay.label) {\n        return loc('oie.registration.form.customize.label', 'login', [attributes.uiDisplay.label]);\n      } else {\n        return loc('oie.primaryauth.submit', 'login');\n      }\n    }\n\n    return loc('oie.registration.form.title', 'login');\n  },\n  save: function () {\n    if (this.options.appState.getCurrentViewState().href.endsWith('idp/idx/enroll/update')) {\n      var _attributes$uiDisplay2;\n\n      const attributes = this.options.appState.attributes;\n\n      if (attributes !== null && attributes !== void 0 && (_attributes$uiDisplay2 = attributes.uiDisplay) !== null && _attributes$uiDisplay2 !== void 0 && _attributes$uiDisplay2.buttonLabel) {\n        return loc('oie.registration.form.customize.buttonLabel', 'login', [attributes.uiDisplay.buttonLabel]);\n      } else {\n        return loc('oie.registration.form.update.submit', 'login');\n      }\n    }\n\n    return loc('oie.registration.form.submit', 'login');\n  },\n  saveForm: function () {\n    // SIW customization hook for registration\n    this.settings.preRegistrationSubmit(this.model.toJSON(), postData => {\n      this.model.attributes = { ...this.model.attributes,\n        ...this.model.parse(postData)\n      };\n      BaseForm.prototype.saveForm.call(this, this.model);\n    }, error => this.model.trigger('error', this.model, {\n      responseJSON: error\n    }));\n  },\n  triggerAfterError: function (model, error) {\n    var _error$responseJSON;\n\n    // render errors to view\n    const hasErrors = (error === null || error === void 0 ? void 0 : (_error$responseJSON = error.responseJSON) === null || _error$responseJSON === void 0 ? void 0 : _error$responseJSON.errorCauses) && Array.isArray(error.responseJSON.errorCauses);\n\n    if (hasErrors) {\n      error.responseJSON.errorCauses.forEach(err => {\n        var _err$errorKey;\n\n        // only do this for invalid password for password with SSR\n        if ((_err$errorKey = err.errorKey) !== null && _err$errorKey !== void 0 && _err$errorKey.includes('password.passwordRequirementsNotMet')) {\n          err.errorSummary = loc('registration.error.password.passwordRequirementsNotMet', 'login');\n        }\n      });\n    }\n\n    this.options.appState.trigger('afterError', error);\n  }\n});\nconst Footer = BaseFooter.extend({\n  links: function () {\n    const links = [];\n\n    if (this.options.appState.hasRemediationObject(FORMS.SELECT_IDENTIFY)) {\n      links.push({\n        'type': 'link',\n        'label': loc('haveaccount', 'login'),\n        'name': 'back',\n        'actionPath': FORMS.SELECT_IDENTIFY\n      });\n    }\n\n    return links;\n  }\n});\nvar EnrollProfileView = BaseView.extend({\n  Body: Body,\n  Footer: Footer,\n  createModelClass: function (currentViewState, optionUiSchemaConfig, settings) {\n    const currentSchema = JSON.parse(JSON.stringify(currentViewState.uiSchema));\n    let ModelClass = BaseView.prototype.createModelClass.apply(this, arguments, currentViewState);\n    ModelClass = ModelClass.extend({\n      toJSON: function () {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments, currentViewState); // delete optional attributes if they are empty and not required\n\n        if (modelJSON.userProfile) {\n          const uiSchema = currentViewState.uiSchema;\n          const userProfile = modelJSON.userProfile;\n\n          oktaUnderscore.each(userProfile, (value, name) => {\n            if (oktaUnderscore.isEmpty(value)) {\n              const uiSchemaProperty = uiSchema.find(schema => schema.name === `userProfile.${name}`);\n\n              if (!oktaUnderscore.isUndefined(uiSchemaProperty) && !uiSchemaProperty.required) {\n                delete userProfile[name];\n              }\n            }\n          });\n        }\n\n        return modelJSON;\n      }\n    });\n    settings.parseRegistrationSchema(currentSchema, schema => {\n      if (!oktaUnderscore.isEqual(schema, currentViewState.uiSchema)) {\n        currentViewState.uiSchema = schema;\n        ModelClass = BaseView.prototype.createModelClass.call(this, currentViewState, optionUiSchemaConfig);\n      }\n    }, error => {\n      ModelClass = ModelClass.extend({\n        local: {\n          parseSchemaError: {\n            value: error,\n            type: 'object'\n          },\n          ...ModelClass.prototype.local\n        }\n      });\n    });\n    return ModelClass;\n  },\n  postRender: function () {\n    BaseView.prototype.postRender.apply(this, arguments);\n    const modelError = this.model.get('parseSchemaError');\n\n    if (modelError) {\n      this.model.trigger('error', this.model, {\n        responseJSON: modelError\n      });\n    } // Prompt for password w/ SSR if enabled (credentials object in remediation)\n\n\n    this.renderPasswordPolicySettings();\n    const idpButtons = createIdpButtons(this.options);\n\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      this._addIdpView(idpButtons);\n    }\n  },\n  renderPasswordPolicySettings: function () {\n    var _credentials$form;\n\n    // retrieve password policy from \"credentials\" object in remediation\n    const currentViewState = this.options.currentViewState.value;\n    const credentials = currentViewState.filter(obj => {\n      return obj.name === 'credentials';\n    })[0]; // if \"passcode\" is present in \"credentials\", render password rules\n\n    const form = credentials === null || credentials === void 0 ? void 0 : (_credentials$form = credentials.form) === null || _credentials$form === void 0 ? void 0 : _credentials$form.value;\n\n    if (form && form.filter(obj => {\n      return obj.name === 'passcode';\n    })) {\n      var _credentials$relatesT, _credentials$relatesT2;\n\n      generatePasswordPolicyHtml(this, getPasswordComplexityDescriptionForHtmlList(credentials === null || credentials === void 0 ? void 0 : (_credentials$relatesT = credentials.relatesTo) === null || _credentials$relatesT === void 0 ? void 0 : (_credentials$relatesT2 = _credentials$relatesT.value) === null || _credentials$relatesT2 === void 0 ? void 0 : _credentials$relatesT2.settings), false);\n    }\n  },\n  _addIdpView: function (idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons: idpButtons,\n        isPrimaryIdpDisplay: isPrimaryIdpDisplay\n      }\n    });\n  }\n});\n\nexport { EnrollProfileView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}