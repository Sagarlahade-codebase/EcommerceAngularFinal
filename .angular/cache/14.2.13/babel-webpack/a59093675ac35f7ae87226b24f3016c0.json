{"ast":null,"code":"import '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { AUTHENTICATOR_KEY } from '../RemediationConstants.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/**\n * Example of the option like\n * @param {AuthenticatorOption[]} options\n * @param {( AuthenticatorEnrollment[] || Authenticator[] )} authenticators\n */\n\nfunction createOVOptions(options = []) {\n  var _ovItem$value, _ovItem$value$form, _ovItem$value$form$va;\n\n  // Split OV into individual entries for verification (one for each method).\n  const ovItem = options.find(option => option.relatesTo.key === AUTHENTICATOR_KEY.OV);\n  const methodTypeObj = ovItem === null || ovItem === void 0 ? void 0 : (_ovItem$value = ovItem.value) === null || _ovItem$value === void 0 ? void 0 : (_ovItem$value$form = _ovItem$value.form) === null || _ovItem$value$form === void 0 ? void 0 : (_ovItem$value$form$va = _ovItem$value$form.value) === null || _ovItem$value$form$va === void 0 ? void 0 : _ovItem$value$form$va.find(v => v.name === 'methodType');\n  const methodOptions = methodTypeObj === null || methodTypeObj === void 0 ? void 0 : methodTypeObj.options;\n  let signedNonceOption;\n  if (methodOptions) {\n    const ovOptions = [];\n    methodOptions.forEach(method => {\n      // get value object from the ov item\n      const value = [...ovItem.value.form.value]; // get index of the methodType object within the value object\n\n      const methodTypeIndex = ovItem.value.form.value.findIndex(v => v.name === 'methodType'); // create a new methodType object that removes the options array and\n      // has a value of the current method\n\n      const newMethodTypeObj = Object.assign(oktaUnderscore.omit(methodTypeObj, 'options'), method); // set the methodType field to be required and immutable in our UI,\n      // so it is always sent to the backend.\n\n      newMethodTypeObj.required = true;\n      newMethodTypeObj.mutable = false; // replace old methodType object with the new one\n\n      value.splice(methodTypeIndex, 1, newMethodTypeObj); // return a new ov item for a specific method\n\n      const newItem = Object.assign({}, ovItem, {\n        label: method.label,\n        value: {\n          form: {\n            value: value\n          }\n        }\n      });\n      if (method.value === 'signed_nonce') {\n        signedNonceOption = newItem;\n      } else {\n        ovOptions.push(newItem);\n      }\n    });\n    const ovIndex = options.findIndex(option => option.relatesTo.key === AUTHENTICATOR_KEY.OV);\n    options.splice(ovIndex, 1, ...ovOptions); // ReArrange fastpass in options based on deviceKnown\n\n    if (signedNonceOption) {\n      ovItem.relatesTo.deviceKnown ? options.unshift(signedNonceOption) : options.push(signedNonceOption);\n    }\n  }\n}\nfunction createAuthenticatorOptions(options = []) {\n  createOVOptions(options);\n  return options.map(option => {\n    var _option$value, _option$value$form, _option$relatesTo;\n    const value = ((_option$value = option.value) === null || _option$value === void 0 ? void 0 : (_option$value$form = _option$value.form) === null || _option$value$form === void 0 ? void 0 : _option$value$form.value) || []; // Each authenticator option has list of ION field.\n    // Currently we only support merely selecting one of options\n    // rather than pop up another page to collect extra data\n    // (in order to fill value for `mutable: true; value: null` fields).\n    // The only reason of such design is to simplify widget implementation\n    // but could subject to change in later releases.\n    // Thus only surface up fields that are `required: true; mutable: false`\n    // which implies it already has `value`.\n\n    const valueObject = value.filter(v => v.required === true && v.mutable === false).reduce((init, v) => {\n      return Object.assign(init, {\n        [v.name]: v.value\n      });\n    }, {});\n    return {\n      label: option.label,\n      value: valueObject,\n      relatesTo: option.relatesTo,\n      authenticatorKey: (_option$relatesTo = option.relatesTo) === null || _option$relatesTo === void 0 ? void 0 : _option$relatesTo.key\n    };\n  });\n}\nfunction getAuthenticatorsEnrollUiSchema({\n  options: options\n}) {\n  return {\n    type: 'authenticatorEnrollSelect',\n    options: createAuthenticatorOptions(options)\n  };\n}\nfunction getAuthenticatorsVerifyUiSchema({\n  options: options\n}) {\n  return {\n    type: 'authenticatorVerifySelect',\n    options: createAuthenticatorOptions(options)\n  };\n}\n/**\n  * Create ui schema for ION field that has type 'object'.\n  */\n\nfunction createUiSchemaForObject(ionFormField, remediationForm, transformedResp, createUISchema, settings) {\n  const uiSchema = {};\n  if (ionFormField.name === 'authenticator' && (remediationForm.name === 'select-authenticator-authenticate' || remediationForm.name === 'select-authenticator-unlock-account')) {\n    // 1. when `select-authenticator-authenticator`,\n    // create customize type so that display authenticator list as selectable list\n    Object.assign(uiSchema, getAuthenticatorsVerifyUiSchema(ionFormField));\n  } else if (ionFormField.name === 'authenticator' && remediationForm.name === 'select-authenticator-enroll') {\n    // 2. when `select-authenticator-enroll`,\n    // create customize type so that display authenticator list as selectable list\n    Object.assign(uiSchema, getAuthenticatorsEnrollUiSchema(ionFormField));\n  } else if (Array.isArray(ionFormField.options)) {\n    // 3. For other cases, create ui schema for each `option` in order to render\n    // different view for each option.\n    //\n    // e.g. { \"name\": \"credentials\", \"type\": \"object\", options: [ {value: {form: value:[]} ]\n    uiSchema.optionsUiSchemas = ionFormField.options.map(opt => {\n      return createUISchema(transformedResp, {\n        value: [{\n          name: ionFormField.name,\n          value: opt.value\n        }]\n      }, settings);\n    });\n    uiSchema.options = ionFormField.options.map((opt, index) => {\n      return {\n        label: opt.label,\n        value: index\n      };\n    }); // assume (default to) use radio buttons to switch sub-schema.\n\n    uiSchema.type = 'radio';\n    uiSchema.value = '0';\n    uiSchema.name = `sub_schema_local_${ionFormField.name}`;\n  }\n  return uiSchema;\n}\nexport { createOVOptions, createUiSchemaForObject as default };","map":{"version":3,"names":["oktaUnderscore","AUTHENTICATOR_KEY","createOVOptions","options","_ovItem$value","_ovItem$value$form","_ovItem$value$form$va","ovItem","find","option","relatesTo","key","OV","methodTypeObj","value","form","v","name","methodOptions","signedNonceOption","ovOptions","forEach","method","methodTypeIndex","findIndex","newMethodTypeObj","Object","assign","omit","required","mutable","splice","newItem","label","push","ovIndex","deviceKnown","unshift","createAuthenticatorOptions","map","_option$value","_option$value$form","_option$relatesTo","valueObject","filter","reduce","init","authenticatorKey","getAuthenticatorsEnrollUiSchema","type","getAuthenticatorsVerifyUiSchema","createUiSchemaForObject","ionFormField","remediationForm","transformedResp","createUISchema","settings","uiSchema","Array","isArray","optionsUiSchemas","opt","index","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/ion/ui-schema/ion-object-handler.js"],"sourcesContent":["import '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { AUTHENTICATOR_KEY } from '../RemediationConstants.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/**\n * Example of the option like\n * @param {AuthenticatorOption[]} options\n * @param {( AuthenticatorEnrollment[] || Authenticator[] )} authenticators\n */\n\nfunction createOVOptions(options = []) {\n  var _ovItem$value, _ovItem$value$form, _ovItem$value$form$va;\n\n  // Split OV into individual entries for verification (one for each method).\n  const ovItem = options.find(option => option.relatesTo.key === AUTHENTICATOR_KEY.OV);\n  const methodTypeObj = ovItem === null || ovItem === void 0 ? void 0 : (_ovItem$value = ovItem.value) === null || _ovItem$value === void 0 ? void 0 : (_ovItem$value$form = _ovItem$value.form) === null || _ovItem$value$form === void 0 ? void 0 : (_ovItem$value$form$va = _ovItem$value$form.value) === null || _ovItem$value$form$va === void 0 ? void 0 : _ovItem$value$form$va.find(v => v.name === 'methodType');\n  const methodOptions = methodTypeObj === null || methodTypeObj === void 0 ? void 0 : methodTypeObj.options;\n  let signedNonceOption;\n\n  if (methodOptions) {\n    const ovOptions = [];\n    methodOptions.forEach(method => {\n      // get value object from the ov item\n      const value = [...ovItem.value.form.value]; // get index of the methodType object within the value object\n\n      const methodTypeIndex = ovItem.value.form.value.findIndex(v => v.name === 'methodType'); // create a new methodType object that removes the options array and\n      // has a value of the current method\n\n      const newMethodTypeObj = Object.assign(oktaUnderscore.omit(methodTypeObj, 'options'), method); // set the methodType field to be required and immutable in our UI,\n      // so it is always sent to the backend.\n\n      newMethodTypeObj.required = true;\n      newMethodTypeObj.mutable = false; // replace old methodType object with the new one\n\n      value.splice(methodTypeIndex, 1, newMethodTypeObj); // return a new ov item for a specific method\n\n      const newItem = Object.assign({}, ovItem, {\n        label: method.label,\n        value: {\n          form: {\n            value: value\n          }\n        }\n      });\n\n      if (method.value === 'signed_nonce') {\n        signedNonceOption = newItem;\n      } else {\n        ovOptions.push(newItem);\n      }\n    });\n    const ovIndex = options.findIndex(option => option.relatesTo.key === AUTHENTICATOR_KEY.OV);\n    options.splice(ovIndex, 1, ...ovOptions); // ReArrange fastpass in options based on deviceKnown\n\n    if (signedNonceOption) {\n      ovItem.relatesTo.deviceKnown ? options.unshift(signedNonceOption) : options.push(signedNonceOption);\n    }\n  }\n}\n\nfunction createAuthenticatorOptions(options = []) {\n  createOVOptions(options);\n  return options.map(option => {\n    var _option$value, _option$value$form, _option$relatesTo;\n\n    const value = ((_option$value = option.value) === null || _option$value === void 0 ? void 0 : (_option$value$form = _option$value.form) === null || _option$value$form === void 0 ? void 0 : _option$value$form.value) || []; // Each authenticator option has list of ION field.\n    // Currently we only support merely selecting one of options\n    // rather than pop up another page to collect extra data\n    // (in order to fill value for `mutable: true; value: null` fields).\n    // The only reason of such design is to simplify widget implementation\n    // but could subject to change in later releases.\n    // Thus only surface up fields that are `required: true; mutable: false`\n    // which implies it already has `value`.\n\n    const valueObject = value.filter(v => v.required === true && v.mutable === false).reduce((init, v) => {\n      return Object.assign(init, {\n        [v.name]: v.value\n      });\n    }, {});\n    return {\n      label: option.label,\n      value: valueObject,\n      relatesTo: option.relatesTo,\n      authenticatorKey: (_option$relatesTo = option.relatesTo) === null || _option$relatesTo === void 0 ? void 0 : _option$relatesTo.key\n    };\n  });\n}\n\nfunction getAuthenticatorsEnrollUiSchema({\n  options: options\n}) {\n  return {\n    type: 'authenticatorEnrollSelect',\n    options: createAuthenticatorOptions(options)\n  };\n}\n\nfunction getAuthenticatorsVerifyUiSchema({\n  options: options\n}) {\n  return {\n    type: 'authenticatorVerifySelect',\n    options: createAuthenticatorOptions(options)\n  };\n}\n/**\n  * Create ui schema for ION field that has type 'object'.\n  */\n\n\nfunction createUiSchemaForObject(ionFormField, remediationForm, transformedResp, createUISchema, settings) {\n  const uiSchema = {};\n\n  if (ionFormField.name === 'authenticator' && (remediationForm.name === 'select-authenticator-authenticate' || remediationForm.name === 'select-authenticator-unlock-account')) {\n    // 1. when `select-authenticator-authenticator`,\n    // create customize type so that display authenticator list as selectable list\n    Object.assign(uiSchema, getAuthenticatorsVerifyUiSchema(ionFormField));\n  } else if (ionFormField.name === 'authenticator' && remediationForm.name === 'select-authenticator-enroll') {\n    // 2. when `select-authenticator-enroll`,\n    // create customize type so that display authenticator list as selectable list\n    Object.assign(uiSchema, getAuthenticatorsEnrollUiSchema(ionFormField));\n  } else if (Array.isArray(ionFormField.options)) {\n    // 3. For other cases, create ui schema for each `option` in order to render\n    // different view for each option.\n    //\n    // e.g. { \"name\": \"credentials\", \"type\": \"object\", options: [ {value: {form: value:[]} ]\n    uiSchema.optionsUiSchemas = ionFormField.options.map(opt => {\n      return createUISchema(transformedResp, {\n        value: [{\n          name: ionFormField.name,\n          value: opt.value\n        }]\n      }, settings);\n    });\n    uiSchema.options = ionFormField.options.map((opt, index) => {\n      return {\n        label: opt.label,\n        value: index\n      };\n    }); // assume (default to) use radio buttons to switch sub-schema.\n\n    uiSchema.type = 'radio';\n    uiSchema.value = '0';\n    uiSchema.name = `sub_schema_local_${ionFormField.name}`;\n  }\n\n  return uiSchema;\n}\n\nexport { createOVOptions, createUiSchemaForObject as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}