{"ast":null,"code":"/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction log(level, args) {\n  // Only log statements in development mode or if\n  // throwing an error through console.error\n  if (level === 'error') {\n    window.console[level].apply(window.console, args);\n  }\n}\n/**\n * Utility library of logging functions.\n */\n\nvar Logger = {\n  trace: function () {\n    return log('trace', arguments);\n  },\n  dir: function () {\n    return log('dir', arguments);\n  },\n  time: function () {\n    return log('time', arguments);\n  },\n  timeEnd: function () {\n    return log('timeEnd', arguments);\n  },\n  group: function () {\n    return log('group', arguments);\n  },\n  groupEnd: function () {\n    return log('groupEnd', arguments);\n  },\n  assert: function () {\n    return log('assert', arguments);\n  },\n  log: function () {\n    return log('log', arguments);\n  },\n  info: function () {\n    return log('info', arguments);\n  },\n  warn: function () {\n    return log('warn', arguments);\n  },\n  error: function () {\n    return log('error', arguments);\n  },\n  deprecate: function (msg) {\n    return log('warn', ['[okta-signin-widget] DEPRECATED:', msg]);\n  }\n};\nexport { Logger as default };","map":{"version":3,"names":["log","level","args","window","console","apply","Logger","trace","arguments","dir","time","timeEnd","group","groupEnd","assert","info","warn","error","deprecate","msg","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/Logger.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nfunction log(level, args) {\n  // Only log statements in development mode or if\n  // throwing an error through console.error\n  if (level === 'error') {\n    window.console[level].apply(window.console, args);\n  }\n}\n/**\n * Utility library of logging functions.\n */\n\n\nvar Logger = {\n  trace: function () {\n    return log('trace', arguments);\n  },\n  dir: function () {\n    return log('dir', arguments);\n  },\n  time: function () {\n    return log('time', arguments);\n  },\n  timeEnd: function () {\n    return log('timeEnd', arguments);\n  },\n  group: function () {\n    return log('group', arguments);\n  },\n  groupEnd: function () {\n    return log('groupEnd', arguments);\n  },\n  assert: function () {\n    return log('assert', arguments);\n  },\n  log: function () {\n    return log('log', arguments);\n  },\n  info: function () {\n    return log('info', arguments);\n  },\n  warn: function () {\n    return log('warn', arguments);\n  },\n  error: function () {\n    return log('error', arguments);\n  },\n  deprecate: function (msg) {\n    return log('warn', ['[okta-signin-widget] DEPRECATED:', msg]);\n  }\n};\n\nexport { Logger as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAE;EACxB;EACA;EACA,IAAID,KAAK,KAAK,OAAO,EAAE;IACrBE,MAAM,CAACC,OAAO,CAACH,KAAK,CAAC,CAACI,KAAK,CAACF,MAAM,CAACC,OAAO,EAAEF,IAAI,CAAC;EACnD;AACF;AACA;AACA;AACA;;AAGA,IAAII,MAAM,GAAG;EACXC,KAAK,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAOP,GAAG,CAAC,OAAO,EAAEQ,SAAS,CAAC;EAChC,CAAC;EACDC,GAAG,EAAE,SAAAA,CAAA,EAAY;IACf,OAAOT,GAAG,CAAC,KAAK,EAAEQ,SAAS,CAAC;EAC9B,CAAC;EACDE,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAOV,GAAG,CAAC,MAAM,EAAEQ,SAAS,CAAC;EAC/B,CAAC;EACDG,OAAO,EAAE,SAAAA,CAAA,EAAY;IACnB,OAAOX,GAAG,CAAC,SAAS,EAAEQ,SAAS,CAAC;EAClC,CAAC;EACDI,KAAK,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAOZ,GAAG,CAAC,OAAO,EAAEQ,SAAS,CAAC;EAChC,CAAC;EACDK,QAAQ,EAAE,SAAAA,CAAA,EAAY;IACpB,OAAOb,GAAG,CAAC,UAAU,EAAEQ,SAAS,CAAC;EACnC,CAAC;EACDM,MAAM,EAAE,SAAAA,CAAA,EAAY;IAClB,OAAOd,GAAG,CAAC,QAAQ,EAAEQ,SAAS,CAAC;EACjC,CAAC;EACDR,GAAG,EAAE,SAAAA,CAAA,EAAY;IACf,OAAOA,GAAG,CAAC,KAAK,EAAEQ,SAAS,CAAC;EAC9B,CAAC;EACDO,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAOf,GAAG,CAAC,MAAM,EAAEQ,SAAS,CAAC;EAC/B,CAAC;EACDQ,IAAI,EAAE,SAAAA,CAAA,EAAY;IAChB,OAAOhB,GAAG,CAAC,MAAM,EAAEQ,SAAS,CAAC;EAC/B,CAAC;EACDS,KAAK,EAAE,SAAAA,CAAA,EAAY;IACjB,OAAOjB,GAAG,CAAC,OAAO,EAAEQ,SAAS,CAAC;EAChC,CAAC;EACDU,SAAS,EAAE,SAAAA,CAAUC,GAAG,EAAE;IACxB,OAAOnB,GAAG,CAAC,MAAM,EAAE,CAAC,kCAAkC,EAAEmB,GAAG,CAAC,CAAC;EAC/D;AACF,CAAC;AAED,SAASb,MAAM,IAAIc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}