{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { getSavedTransactionMeta } from './transactionMeta.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nfunction canProceed(authClient, options = {}) {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\nfunction proceed(_x) {\n  return _proceed.apply(this, arguments);\n}\nfunction _proceed() {\n  _proceed = _asyncToGenerator(function* (authClient, options = {}) {\n    if (!canProceed(authClient, options)) {\n      throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n    }\n    let {\n      flow,\n      state\n    } = options;\n    if (!flow) {\n      const meta = getSavedTransactionMeta(authClient, {\n        state\n      });\n      flow = meta === null || meta === void 0 ? void 0 : meta.flow;\n    }\n    return run(authClient, Object.assign(Object.assign({}, options), {\n      flow\n    }));\n  });\n  return _proceed.apply(this, arguments);\n}\nexport { canProceed, proceed };","map":{"version":3,"names":["run","getSavedTransactionMeta","AuthSdkError","canProceed","authClient","options","meta","stateHandle","proceed","_x","_proceed","apply","arguments","_asyncToGenerator","flow","state","Object","assign"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/proceed.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { getSavedTransactionMeta } from './transactionMeta.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\n\nfunction canProceed(authClient, options = {}) {\n    const meta = getSavedTransactionMeta(authClient, options);\n    return !!(meta || options.stateHandle);\n}\nasync function proceed(authClient, options = {}) {\n    if (!canProceed(authClient, options)) {\n        throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n    }\n    let { flow, state } = options;\n    if (!flow) {\n        const meta = getSavedTransactionMeta(authClient, { state });\n        flow = meta === null || meta === void 0 ? void 0 : meta.flow;\n    }\n    return run(authClient, Object.assign(Object.assign({}, options), { flow }));\n}\n\nexport { canProceed, proceed };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,uBAAuB,QAAQ,sBAAsB;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AAEpD,SAASC,UAAUA,CAACC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC1C,MAAMC,IAAI,GAAGL,uBAAuB,CAACG,UAAU,EAAEC,OAAO,CAAC;EACzD,OAAO,CAAC,EAAEC,IAAI,IAAID,OAAO,CAACE,WAAW,CAAC;AAC1C;AAAC,SACcC,OAAOA,CAAAC,EAAA;EAAA,OAAAC,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,SAAA;EAAAA,QAAA,GAAAG,iBAAA,CAAtB,WAAuBT,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC7C,IAAI,CAACF,UAAU,CAACC,UAAU,EAAEC,OAAO,CAAC,EAAE;MAClC,MAAM,IAAIH,YAAY,CAAC,0DAA0D,CAAC;IACtF;IACA,IAAI;MAAEY,IAAI;MAAEC;IAAM,CAAC,GAAGV,OAAO;IAC7B,IAAI,CAACS,IAAI,EAAE;MACP,MAAMR,IAAI,GAAGL,uBAAuB,CAACG,UAAU,EAAE;QAAEW;MAAM,CAAC,CAAC;MAC3DD,IAAI,GAAGR,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACQ,IAAI;IAChE;IACA,OAAOd,GAAG,CAACI,UAAU,EAAEY,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEZ,OAAO,CAAC,EAAE;MAAES;IAAK,CAAC,CAAC,CAAC;EAC/E,CAAC;EAAA,OAAAJ,QAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAAST,UAAU,EAAEK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}