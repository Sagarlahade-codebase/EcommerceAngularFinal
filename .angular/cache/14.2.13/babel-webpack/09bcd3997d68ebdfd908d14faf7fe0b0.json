{"ast":null,"code":"import '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport './BaseHeader.js';\nimport './BaseFooter.js';\nimport './BaseForm.js';\nimport BaseFormWithPolling from './BaseFormWithPolling.js';\nimport './BaseView.js';\nimport '../components/AuthenticatorEnrollOptions.js';\nimport '../components/AuthenticatorVerifyOptions.js';\nimport '../../../util/FactorUtil.js';\nimport '../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../v1/views/consent/ScopeList.js';\nimport '../views/captcha/CaptchaView.js';\nimport Logger from '../../../util/Logger.js';\nimport { AUTHENTICATOR_CANCEL_ACTION, CHALLENGE_TIMEOUT, AUTHENTICATION_CANCEL_REASONS } from '../utils/Constants.js';\nimport fn from '../../../util/BrowserFeatures.js';\nimport { doChallenge, cancelPollingWithParams } from '../utils/ChallengeViewUtil.js';\nconst request = opts => {\n  const ajaxOptions = Object.assign({\n    method: 'GET',\n    contentType: 'application/json'\n  }, opts);\n  return oktaJQueryStatic.ajax(ajaxOptions);\n};\nconst Body = BaseFormWithPolling.extend({\n  noButtonBar: true,\n  className: 'ion-form device-challenge-poll',\n  events: {\n    'click #launch-ov': function (e) {\n      e.preventDefault();\n      this.doCustomURI();\n    }\n  },\n  pollingCancelAction: AUTHENTICATOR_CANCEL_ACTION,\n  initialize: function () {\n    BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', this.onPollingFail);\n    this.doChallenge();\n    this.startPolling();\n  },\n  doChallenge: function () {\n    doChallenge(this);\n  },\n  onPollingFail: function () {\n    this.$('.spinner').hide();\n    this.stopPolling();\n  },\n  remove: function () {\n    BaseFormWithPolling.prototype.remove.apply(this, arguments);\n    this.stopProbing();\n    this.stopPolling();\n  },\n  getDeviceChallengePayload: function () {\n    throw new Error('getDeviceChallengePayload needs to be implemented');\n  },\n  doLoopback: function (deviceChallenge) {\n    let authenticatorDomainUrl = deviceChallenge.domain !== undefined ? deviceChallenge.domain : '';\n    let ports = deviceChallenge.ports !== undefined ? deviceChallenge.ports : [];\n    let challengeRequest = deviceChallenge.challengeRequest !== undefined ? deviceChallenge.challengeRequest : '';\n    let probeTimeoutMillis = deviceChallenge.probeTimeoutMillis !== undefined ? deviceChallenge.probeTimeoutMillis : 100;\n    let currentPort;\n    let foundPort = false;\n    let ovFailed = false;\n    let countFailedPorts = 0;\n    const getAuthenticatorUrl = path => {\n      return `${authenticatorDomainUrl}:${currentPort}/${path}`;\n    };\n    const checkPort = () => {\n      return request({\n        url: getAuthenticatorUrl('probe'),\n        /*\n        OKTA-278573 in loopback server, SSL handshake sometimes takes more than 100ms and thus needs additional\n        timeout however, increasing timeout is a temporary solution since user will need to wait much longer in\n        worst case.\n        TODO: Android timeout is temporarily set to 3000ms and needs optimization post-Beta.\n        OKTA-365427 introduces probeTimeoutMillis; but we should also consider probeTimeoutMillisHTTPS for\n        customizing timeouts in the more costly Android and other (keyless) HTTPS scenarios.\n        */\n        timeout: fn.isAndroid() ? 3000 : probeTimeoutMillis\n      });\n    };\n    const onPortFound = () => {\n      return request({\n        url: getAuthenticatorUrl('challenge'),\n        method: 'POST',\n        data: JSON.stringify({\n          challengeRequest: challengeRequest\n        }),\n        timeout: CHALLENGE_TIMEOUT // authenticator should respond within 5 min (300000ms) for challenge request\n      });\n    };\n    const onFailure = () => {\n      Logger.error(`Something unexpected happened while we were checking port ${currentPort}.`);\n    };\n    const doProbing = () => {\n      return checkPort().done(() => {\n        return onPortFound().done(() => {\n          foundPort = true; // once the OV challenge succeeds,\n          // triggers another polling right away without waiting for the next ongoing polling to be triggered\n          // to make the authentication flow goes faster \n\n          return this.trigger('save', this.model);\n        }).fail(xhr => {\n          countFailedPorts++; // Windows and MacOS return status code 503 when \n          // there are multiple profiles on the device and\n          // the wrong OS profile responds to the challenge request\n\n          if (xhr.status !== 503) {\n            // when challenge responds with other errors,\n            // - stop the remaining probing\n            ovFailed = true; // - cancel polling right away\n\n            cancelPollingWithParams(this.options.appState, this.pollingCancelAction, AUTHENTICATION_CANCEL_REASONS.OV_ERROR, xhr.status);\n          } else if (countFailedPorts === ports.length) {\n            // when challenge is responded by the wrong OS profile and\n            // all the ports are exhausted,\n            // cancel the polling like the probing has failed\n            cancelPollingWithParams(this.options.appState, this.pollingCancelAction, AUTHENTICATION_CANCEL_REASONS.LOOPBACK_FAILURE, null);\n          }\n        });\n      }).fail(onFailure);\n    };\n    let probeChain = Promise.resolve();\n    ports.forEach(port => {\n      probeChain = probeChain.then(() => {\n        if (!(foundPort || ovFailed)) {\n          currentPort = port;\n          return doProbing();\n        }\n      }).catch(() => {\n        countFailedPorts++;\n        Logger.error(`Authenticator is not listening on port ${currentPort}.`);\n        if (countFailedPorts === ports.length) {\n          Logger.error('No available ports. Loopback server failed and polling is cancelled.');\n          cancelPollingWithParams(this.options.appState, this.pollingCancelAction, AUTHENTICATION_CANCEL_REASONS.LOOPBACK_FAILURE, null);\n        }\n      });\n    });\n  },\n  doCustomURI: function () {\n    this.ulDom && this.ulDom.remove();\n    this.ulDom = this.add(`\n      <iframe src=\"${this.customURI}\" id=\"custom-uri-container\" style=\"display:none;\"></iframe>\n    `).last();\n  },\n  stopProbing: function () {\n    this.checkPortXhr && this.checkPortXhr.abort();\n    this.probingXhr && this.probingXhr.abort();\n  }\n});\nexport { Body as default };","map":{"version":3,"names":["oktaJQueryStatic","BaseFormWithPolling","Logger","AUTHENTICATOR_CANCEL_ACTION","CHALLENGE_TIMEOUT","AUTHENTICATION_CANCEL_REASONS","fn","doChallenge","cancelPollingWithParams","request","opts","ajaxOptions","Object","assign","method","contentType","ajax","Body","extend","noButtonBar","className","events","click #launch-ov","e","preventDefault","doCustomURI","pollingCancelAction","initialize","prototype","apply","arguments","listenTo","model","onPollingFail","startPolling","$","hide","stopPolling","remove","stopProbing","getDeviceChallengePayload","Error","doLoopback","deviceChallenge","authenticatorDomainUrl","domain","undefined","ports","challengeRequest","probeTimeoutMillis","currentPort","foundPort","ovFailed","countFailedPorts","getAuthenticatorUrl","path","checkPort","url","timeout","isAndroid","onPortFound","data","JSON","stringify","onFailure","error","doProbing","done","trigger","fail","xhr","status","options","appState","OV_ERROR","length","LOOPBACK_FAILURE","probeChain","Promise","resolve","forEach","port","then","catch","ulDom","add","customURI","last","checkPortXhr","abort","probingXhr","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/internals/BaseOktaVerifyChallengeView.js"],"sourcesContent":["import '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport './BaseHeader.js';\nimport './BaseFooter.js';\nimport './BaseForm.js';\nimport BaseFormWithPolling from './BaseFormWithPolling.js';\nimport './BaseView.js';\nimport '../components/AuthenticatorEnrollOptions.js';\nimport '../components/AuthenticatorVerifyOptions.js';\nimport '../../../util/FactorUtil.js';\nimport '../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../v1/views/consent/ScopeList.js';\nimport '../views/captcha/CaptchaView.js';\nimport Logger from '../../../util/Logger.js';\nimport { AUTHENTICATOR_CANCEL_ACTION, CHALLENGE_TIMEOUT, AUTHENTICATION_CANCEL_REASONS } from '../utils/Constants.js';\nimport fn from '../../../util/BrowserFeatures.js';\nimport { doChallenge, cancelPollingWithParams } from '../utils/ChallengeViewUtil.js';\n\nconst request = opts => {\n  const ajaxOptions = Object.assign({\n    method: 'GET',\n    contentType: 'application/json'\n  }, opts);\n  return oktaJQueryStatic.ajax(ajaxOptions);\n};\n\nconst Body = BaseFormWithPolling.extend({\n  noButtonBar: true,\n  className: 'ion-form device-challenge-poll',\n  events: {\n    'click #launch-ov': function (e) {\n      e.preventDefault();\n      this.doCustomURI();\n    }\n  },\n  pollingCancelAction: AUTHENTICATOR_CANCEL_ACTION,\n  initialize: function () {\n    BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', this.onPollingFail);\n    this.doChallenge();\n    this.startPolling();\n  },\n  doChallenge: function () {\n    doChallenge(this);\n  },\n  onPollingFail: function () {\n    this.$('.spinner').hide();\n    this.stopPolling();\n  },\n  remove: function () {\n    BaseFormWithPolling.prototype.remove.apply(this, arguments);\n    this.stopProbing();\n    this.stopPolling();\n  },\n  getDeviceChallengePayload: function () {\n    throw new Error('getDeviceChallengePayload needs to be implemented');\n  },\n  doLoopback: function (deviceChallenge) {\n    let authenticatorDomainUrl = deviceChallenge.domain !== undefined ? deviceChallenge.domain : '';\n    let ports = deviceChallenge.ports !== undefined ? deviceChallenge.ports : [];\n    let challengeRequest = deviceChallenge.challengeRequest !== undefined ? deviceChallenge.challengeRequest : '';\n    let probeTimeoutMillis = deviceChallenge.probeTimeoutMillis !== undefined ? deviceChallenge.probeTimeoutMillis : 100;\n    let currentPort;\n    let foundPort = false;\n    let ovFailed = false;\n    let countFailedPorts = 0;\n\n    const getAuthenticatorUrl = path => {\n      return `${authenticatorDomainUrl}:${currentPort}/${path}`;\n    };\n\n    const checkPort = () => {\n      return request({\n        url: getAuthenticatorUrl('probe'),\n\n        /*\n        OKTA-278573 in loopback server, SSL handshake sometimes takes more than 100ms and thus needs additional\n        timeout however, increasing timeout is a temporary solution since user will need to wait much longer in\n        worst case.\n        TODO: Android timeout is temporarily set to 3000ms and needs optimization post-Beta.\n        OKTA-365427 introduces probeTimeoutMillis; but we should also consider probeTimeoutMillisHTTPS for\n        customizing timeouts in the more costly Android and other (keyless) HTTPS scenarios.\n        */\n        timeout: fn.isAndroid() ? 3000 : probeTimeoutMillis\n      });\n    };\n\n    const onPortFound = () => {\n      return request({\n        url: getAuthenticatorUrl('challenge'),\n        method: 'POST',\n        data: JSON.stringify({\n          challengeRequest: challengeRequest\n        }),\n        timeout: CHALLENGE_TIMEOUT // authenticator should respond within 5 min (300000ms) for challenge request\n\n      });\n    };\n\n    const onFailure = () => {\n      Logger.error(`Something unexpected happened while we were checking port ${currentPort}.`);\n    };\n\n    const doProbing = () => {\n      return checkPort().done(() => {\n        return onPortFound().done(() => {\n          foundPort = true; // once the OV challenge succeeds,\n          // triggers another polling right away without waiting for the next ongoing polling to be triggered\n          // to make the authentication flow goes faster \n\n          return this.trigger('save', this.model);\n        }).fail(xhr => {\n          countFailedPorts++; // Windows and MacOS return status code 503 when \n          // there are multiple profiles on the device and\n          // the wrong OS profile responds to the challenge request\n\n          if (xhr.status !== 503) {\n            // when challenge responds with other errors,\n            // - stop the remaining probing\n            ovFailed = true; // - cancel polling right away\n\n            cancelPollingWithParams(this.options.appState, this.pollingCancelAction, AUTHENTICATION_CANCEL_REASONS.OV_ERROR, xhr.status);\n          } else if (countFailedPorts === ports.length) {\n            // when challenge is responded by the wrong OS profile and\n            // all the ports are exhausted,\n            // cancel the polling like the probing has failed\n            cancelPollingWithParams(this.options.appState, this.pollingCancelAction, AUTHENTICATION_CANCEL_REASONS.LOOPBACK_FAILURE, null);\n          }\n        });\n      }).fail(onFailure);\n    };\n\n    let probeChain = Promise.resolve();\n    ports.forEach(port => {\n      probeChain = probeChain.then(() => {\n        if (!(foundPort || ovFailed)) {\n          currentPort = port;\n          return doProbing();\n        }\n      }).catch(() => {\n        countFailedPorts++;\n        Logger.error(`Authenticator is not listening on port ${currentPort}.`);\n\n        if (countFailedPorts === ports.length) {\n          Logger.error('No available ports. Loopback server failed and polling is cancelled.');\n          cancelPollingWithParams(this.options.appState, this.pollingCancelAction, AUTHENTICATION_CANCEL_REASONS.LOOPBACK_FAILURE, null);\n        }\n      });\n    });\n  },\n  doCustomURI: function () {\n    this.ulDom && this.ulDom.remove();\n    this.ulDom = this.add(`\n      <iframe src=\"${this.customURI}\" id=\"custom-uri-container\" style=\"display:none;\"></iframe>\n    `).last();\n  },\n  stopProbing: function () {\n    this.checkPortXhr && this.checkPortXhr.abort();\n    this.probingXhr && this.probingXhr.abort();\n  }\n});\n\nexport { Body as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}