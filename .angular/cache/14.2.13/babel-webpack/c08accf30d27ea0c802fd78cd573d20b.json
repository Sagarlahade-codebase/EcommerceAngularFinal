{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getSavedTransactionMeta, createTransactionMeta, saveTransactionMeta } from './transactionMeta.js';\nimport { removeNils } from '../util/object.js';\nimport { httpRequest } from '../http/request.js';\nimport { getOAuthBaseUrl } from '../oidc/util/oauth.js';\nimport './types/api.js';\nimport '../myaccount/types.js';\nfunction getResponse(meta) {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle,\n    state: meta.state\n  };\n}\nfunction interact(_x) {\n  return _interact.apply(this, arguments);\n}\nfunction _interact() {\n  _interact = _asyncToGenerator(function* (authClient, options = {}) {\n    options = removeNils(options);\n    let meta = getSavedTransactionMeta(authClient, options);\n    if (meta === null || meta === void 0 ? void 0 : meta.interactionHandle) {\n      return getResponse(meta);\n    }\n    meta = yield createTransactionMeta(authClient, Object.assign(Object.assign({}, meta), options));\n    const baseUrl = getOAuthBaseUrl(authClient);\n    let {\n      clientId,\n      redirectUri,\n      state,\n      scopes,\n      withCredentials,\n      codeChallenge,\n      codeChallengeMethod,\n      activationToken,\n      recoveryToken,\n      maxAge,\n      nonce\n    } = meta;\n    const clientSecret = options.clientSecret || authClient.options.clientSecret;\n    withCredentials = withCredentials !== null && withCredentials !== void 0 ? withCredentials : true;\n    const url = `${baseUrl}/v1/interact`;\n    const params = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({\n      client_id: clientId,\n      scope: scopes.join(' '),\n      redirect_uri: redirectUri,\n      code_challenge: codeChallenge,\n      code_challenge_method: codeChallengeMethod,\n      state\n    }, activationToken && {\n      activation_token: activationToken\n    }), recoveryToken && {\n      recovery_token: recoveryToken\n    }), clientSecret && {\n      client_secret: clientSecret\n    }), maxAge && {\n      max_age: maxAge\n    }), nonce && {\n      nonce\n    });\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    };\n    const resp = yield httpRequest(authClient, {\n      method: 'POST',\n      url,\n      headers,\n      withCredentials,\n      args: params\n    });\n    const interactionHandle = resp.interaction_handle;\n    const newMeta = Object.assign(Object.assign({}, meta), {\n      interactionHandle,\n      withCredentials,\n      state,\n      scopes,\n      recoveryToken,\n      activationToken\n    });\n    saveTransactionMeta(authClient, newMeta);\n    return getResponse(newMeta);\n  });\n  return _interact.apply(this, arguments);\n}\nexport { interact };","map":{"version":3,"names":["getSavedTransactionMeta","createTransactionMeta","saveTransactionMeta","removeNils","httpRequest","getOAuthBaseUrl","getResponse","meta","interactionHandle","state","interact","_x","_interact","apply","arguments","_asyncToGenerator","authClient","options","Object","assign","baseUrl","clientId","redirectUri","scopes","withCredentials","codeChallenge","codeChallengeMethod","activationToken","recoveryToken","maxAge","nonce","clientSecret","url","params","client_id","scope","join","redirect_uri","code_challenge","code_challenge_method","activation_token","recovery_token","client_secret","max_age","headers","resp","method","args","interaction_handle","newMeta"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/interact.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getSavedTransactionMeta, createTransactionMeta, saveTransactionMeta } from './transactionMeta.js';\nimport { removeNils } from '../util/object.js';\nimport { httpRequest } from '../http/request.js';\nimport { getOAuthBaseUrl } from '../oidc/util/oauth.js';\nimport './types/api.js';\nimport '../myaccount/types.js';\n\nfunction getResponse(meta) {\n    return {\n        meta,\n        interactionHandle: meta.interactionHandle,\n        state: meta.state\n    };\n}\nasync function interact(authClient, options = {}) {\n    options = removeNils(options);\n    let meta = getSavedTransactionMeta(authClient, options);\n    if (meta === null || meta === void 0 ? void 0 : meta.interactionHandle) {\n        return getResponse(meta);\n    }\n    meta = await createTransactionMeta(authClient, Object.assign(Object.assign({}, meta), options));\n    const baseUrl = getOAuthBaseUrl(authClient);\n    let { clientId, redirectUri, state, scopes, withCredentials, codeChallenge, codeChallengeMethod, activationToken, recoveryToken, maxAge, nonce } = meta;\n    const clientSecret = options.clientSecret || authClient.options.clientSecret;\n    withCredentials = withCredentials !== null && withCredentials !== void 0 ? withCredentials : true;\n    const url = `${baseUrl}/v1/interact`;\n    const params = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ client_id: clientId, scope: scopes.join(' '), redirect_uri: redirectUri, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod, state }, (activationToken && { activation_token: activationToken })), (recoveryToken && { recovery_token: recoveryToken })), (clientSecret && { client_secret: clientSecret })), (maxAge && { max_age: maxAge })), (nonce && { nonce }));\n    const headers = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n    };\n    const resp = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: params\n    });\n    const interactionHandle = resp.interaction_handle;\n    const newMeta = Object.assign(Object.assign({}, meta), { interactionHandle,\n        withCredentials,\n        state,\n        scopes,\n        recoveryToken,\n        activationToken });\n    saveTransactionMeta(authClient, newMeta);\n    return getResponse(newMeta);\n}\n\nexport { interact };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}