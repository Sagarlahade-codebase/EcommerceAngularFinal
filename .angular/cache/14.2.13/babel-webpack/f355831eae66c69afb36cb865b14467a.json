{"ast":null,"code":"import _Handlebars2 from '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, View } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Q from 'q';\nimport 'u2f-api-polyfill';\nimport { U2FError } from '../../util/Errors.js';\nimport fn from '../../util/FactorUtil.js';\nimport fn$1 from '../../util/FidoUtil.js';\nimport FormController from '../util/FormController.js';\nimport FormType from '../util/FormType.js';\nimport HtmlErrorMessageView from '../views/mfa-verify/HtmlErrorMessageView.js';\nimport FooterMFA from '../views/shared/FooterMFA.js';\nfunction getRegisteredKeysSequence(factors) {\n  const keys = [];\n  oktaUnderscore.each(factors, function (factor) {\n    keys.push({\n      version: factor.profile.version,\n      keyHandle: factor.profile.credentialId\n    });\n  });\n  return keys;\n}\nvar VerifyU2FController = FormController.extend({\n  className: 'mfa-verify verify-u2f',\n  Model: {\n    props: {\n      rememberDevice: 'boolean'\n    },\n    initialize: function () {\n      const rememberDevice = fn.getRememberDeviceValue(this.appState); // set the initial value for remember device (Cannot do this while defining the\n      // local property because this.settings would not be initialized there yet).\n\n      this.set('rememberDevice', rememberDevice);\n    },\n    save: function () {\n      this.trigger('request');\n      return this.doTransaction(function (transaction) {\n        let factor;\n        if (transaction.factorTypes) {\n          factor = oktaUnderscore.findWhere(transaction.factorTypes, {\n            factorType: 'u2f'\n          });\n        } else {\n          factor = oktaUnderscore.findWhere(transaction.factors, {\n            factorType: 'u2f',\n            provider: 'FIDO'\n          });\n        }\n        const self = this;\n        return factor.verify().then(function (transaction) {\n          let registeredKeys;\n          let appId;\n          let nonce;\n          if (transaction.factors) {\n            const factors = transaction.factors;\n            appId = factors[0]['profile']['appId'];\n            nonce = transaction.challenge.nonce;\n            registeredKeys = getRegisteredKeysSequence(factors);\n          } else {\n            const factorData = transaction.factor;\n            appId = factorData.profile.appId;\n            nonce = factorData.challenge.nonce;\n            registeredKeys = [{\n              version: fn$1.getU2fVersion(),\n              keyHandle: factorData.profile.credentialId\n            }];\n          }\n          self.trigger('request');\n          const deferred = Q.defer();\n          u2f.sign(appId, nonce, registeredKeys, function (data) {\n            self.trigger('errors:clear');\n            if (data.errorCode && data.errorCode !== 0) {\n              const isOneFactor = self.options.appState.get('factors').length === 1;\n              deferred.reject(new U2FError({\n                xhr: {\n                  responseJSON: {\n                    errorSummary: fn$1.getU2fVerifyErrorMessageByCode(data.errorCode, isOneFactor)\n                  }\n                }\n              }));\n            } else {\n              const rememberDevice = !!self.get('rememberDevice');\n              return factor.verify({\n                clientData: data.clientData,\n                signatureData: data.signatureData,\n                rememberDevice: rememberDevice\n              }).then(deferred.resolve);\n            }\n          });\n          return deferred.promise;\n        });\n      });\n    }\n  },\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: oktaUnderscore.partial(loc, 'factor.u2f', 'login'),\n    className: 'verify-u2f-form',\n    noCancelButton: true,\n    save: oktaUnderscore.partial(loc, 'verify.u2f.retry', 'login'),\n    noButtonBar: function () {\n      return !fn$1.isU2fAvailable();\n    },\n    modelEvents: {\n      request: '_startEnrollment',\n      error: '_stopEnrollment'\n    },\n    formChildren: function () {\n      const result = [];\n      if (!fn$1.isU2fAvailable()) {\n        let errorMessageKey = 'u2f.error.factorNotSupported';\n        if (this.options.appState.get('factors').length === 1) {\n          errorMessageKey = 'u2f.error.factorNotSupported.oneFactor';\n        }\n        result.push(FormType.View({\n          View: new HtmlErrorMessageView({\n            message: loc(errorMessageKey, 'login')\n          })\n        }, {\n          selector: '.o-form-error-container'\n        }));\n      } else {\n        result.push(FormType.View({\n          View: View.extend({\n            template: _Handlebars2.template({\n              \"compiler\": [8, \">= 4.3.0\"],\n              \"main\": function (container, depth0, helpers, partials, data) {\n                var alias1 = depth0 != null ? depth0 : container.nullContext || {},\n                  alias2 = container.hooks.helperMissing,\n                  alias3 = container.escapeExpression,\n                  lookupProperty = container.lookupProperty || function (parent, propertyName) {\n                    if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n                      return parent[propertyName];\n                    }\n                    return undefined;\n                  };\n                return \"<div class=\\\"u2f-verify-text\\\"><p>\" + alias3((lookupProperty(helpers, \"i18n\") || depth0 && lookupProperty(depth0, \"i18n\") || alias2).call(alias1, {\n                  \"name\": \"i18n\",\n                  \"hash\": {\n                    \"bundle\": \"login\",\n                    \"code\": \"verify.u2f.instructions\"\n                  },\n                  \"data\": data,\n                  \"loc\": {\n                    \"start\": {\n                      \"line\": 1,\n                      \"column\": 32\n                    },\n                    \"end\": {\n                      \"line\": 1,\n                      \"column\": 86\n                    }\n                  }\n                })) + \"</p><p>\" + alias3((lookupProperty(helpers, \"i18n\") || depth0 && lookupProperty(depth0, \"i18n\") || alias2).call(alias1, {\n                  \"name\": \"i18n\",\n                  \"hash\": {\n                    \"bundle\": \"login\",\n                    \"code\": \"verify.u2f.instructionsBluetooth\"\n                  },\n                  \"data\": data,\n                  \"loc\": {\n                    \"start\": {\n                      \"line\": 1,\n                      \"column\": 93\n                    },\n                    \"end\": {\n                      \"line\": 1,\n                      \"column\": 156\n                    }\n                  }\n                })) + \"</p><div data-se=\\\"u2f-waiting\\\" class=\\\"okta-waiting-spinner\\\"></div></div>\";\n              },\n              \"useData\": true\n            })\n          })\n        }));\n      }\n      if (this.options.appState.get('allowRememberDevice')) {\n        result.push(FormType.Input({\n          label: false,\n          'label-top': true,\n          placeholder: this.options.appState.get('rememberDeviceLabel'),\n          className: 'margin-btm-0',\n          name: 'rememberDevice',\n          type: 'checkbox'\n        }));\n      }\n      return result;\n    },\n    postRender: function () {\n      oktaUnderscore.defer(() => {\n        if (fn$1.isU2fAvailable()) {\n          this.model.save();\n        } else {\n          this.$('[data-se=\"u2f-waiting\"]').addClass('hide');\n        }\n      });\n    },\n    _startEnrollment: function () {\n      this.$('.okta-waiting-spinner').removeClass('hide');\n      this.$('.o-form-button-bar').hide();\n    },\n    _stopEnrollment: function () {\n      this.$('.okta-waiting-spinner').addClass('hide');\n      this.$('.o-form-button-bar').show();\n    }\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n  Footer: FooterMFA\n});\nexport { VerifyU2FController as default };","map":{"version":3,"names":["_Handlebars2","loc","View","oktaUnderscore","Q","U2FError","fn","fn$1","FormController","FormType","HtmlErrorMessageView","FooterMFA","getRegisteredKeysSequence","factors","keys","each","factor","push","version","profile","keyHandle","credentialId","VerifyU2FController","extend","className","Model","props","rememberDevice","initialize","getRememberDeviceValue","appState","set","save","trigger","doTransaction","transaction","factorTypes","findWhere","factorType","provider","self","verify","then","registeredKeys","appId","nonce","challenge","factorData","getU2fVersion","deferred","defer","u2f","sign","data","errorCode","isOneFactor","options","get","length","reject","xhr","responseJSON","errorSummary","getU2fVerifyErrorMessageByCode","clientData","signatureData","resolve","promise","Form","autoSave","hasSavingState","title","partial","noCancelButton","noButtonBar","isU2fAvailable","modelEvents","request","error","formChildren","result","errorMessageKey","message","selector","template","main","container","depth0","helpers","partials","alias1","nullContext","alias2","hooks","helperMissing","alias3","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","undefined","Input","label","placeholder","name","type","postRender","model","$","addClass","_startEnrollment","removeClass","hide","_stopEnrollment","show","back","Footer","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/VerifyU2FController.js"],"sourcesContent":["import _Handlebars2 from '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, View } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Q from 'q';\nimport 'u2f-api-polyfill';\nimport { U2FError } from '../../util/Errors.js';\nimport fn from '../../util/FactorUtil.js';\nimport fn$1 from '../../util/FidoUtil.js';\nimport FormController from '../util/FormController.js';\nimport FormType from '../util/FormType.js';\nimport HtmlErrorMessageView from '../views/mfa-verify/HtmlErrorMessageView.js';\nimport FooterMFA from '../views/shared/FooterMFA.js';\n\nfunction getRegisteredKeysSequence(factors) {\n  const keys = [];\n\n  oktaUnderscore.each(factors, function (factor) {\n    keys.push({\n      version: factor.profile.version,\n      keyHandle: factor.profile.credentialId\n    });\n  });\n\n  return keys;\n}\n\nvar VerifyU2FController = FormController.extend({\n  className: 'mfa-verify verify-u2f',\n  Model: {\n    props: {\n      rememberDevice: 'boolean'\n    },\n    initialize: function () {\n      const rememberDevice = fn.getRememberDeviceValue(this.appState); // set the initial value for remember device (Cannot do this while defining the\n      // local property because this.settings would not be initialized there yet).\n\n      this.set('rememberDevice', rememberDevice);\n    },\n    save: function () {\n      this.trigger('request');\n      return this.doTransaction(function (transaction) {\n        let factor;\n\n        if (transaction.factorTypes) {\n          factor = oktaUnderscore.findWhere(transaction.factorTypes, {\n            factorType: 'u2f'\n          });\n        } else {\n          factor = oktaUnderscore.findWhere(transaction.factors, {\n            factorType: 'u2f',\n            provider: 'FIDO'\n          });\n        }\n\n        const self = this;\n        return factor.verify().then(function (transaction) {\n          let registeredKeys;\n          let appId;\n          let nonce;\n\n          if (transaction.factors) {\n            const factors = transaction.factors;\n            appId = factors[0]['profile']['appId'];\n            nonce = transaction.challenge.nonce;\n            registeredKeys = getRegisteredKeysSequence(factors);\n          } else {\n            const factorData = transaction.factor;\n            appId = factorData.profile.appId;\n            nonce = factorData.challenge.nonce;\n            registeredKeys = [{\n              version: fn$1.getU2fVersion(),\n              keyHandle: factorData.profile.credentialId\n            }];\n          }\n\n          self.trigger('request');\n          const deferred = Q.defer();\n          u2f.sign(appId, nonce, registeredKeys, function (data) {\n            self.trigger('errors:clear');\n\n            if (data.errorCode && data.errorCode !== 0) {\n              const isOneFactor = self.options.appState.get('factors').length === 1;\n              deferred.reject(new U2FError({\n                xhr: {\n                  responseJSON: {\n                    errorSummary: fn$1.getU2fVerifyErrorMessageByCode(data.errorCode, isOneFactor)\n                  }\n                }\n              }));\n            } else {\n              const rememberDevice = !!self.get('rememberDevice');\n              return factor.verify({\n                clientData: data.clientData,\n                signatureData: data.signatureData,\n                rememberDevice: rememberDevice\n              }).then(deferred.resolve);\n            }\n          });\n          return deferred.promise;\n        });\n      });\n    }\n  },\n  Form: {\n    autoSave: true,\n    hasSavingState: false,\n    title: oktaUnderscore.partial(loc, 'factor.u2f', 'login'),\n    className: 'verify-u2f-form',\n    noCancelButton: true,\n    save: oktaUnderscore.partial(loc, 'verify.u2f.retry', 'login'),\n    noButtonBar: function () {\n      return !fn$1.isU2fAvailable();\n    },\n    modelEvents: {\n      request: '_startEnrollment',\n      error: '_stopEnrollment'\n    },\n    formChildren: function () {\n      const result = [];\n\n      if (!fn$1.isU2fAvailable()) {\n        let errorMessageKey = 'u2f.error.factorNotSupported';\n\n        if (this.options.appState.get('factors').length === 1) {\n          errorMessageKey = 'u2f.error.factorNotSupported.oneFactor';\n        }\n\n        result.push(FormType.View({\n          View: new HtmlErrorMessageView({\n            message: loc(errorMessageKey, 'login')\n          })\n        }, {\n          selector: '.o-form-error-container'\n        }));\n      } else {\n        result.push(FormType.View({\n          View: View.extend({\n            template: _Handlebars2.template({\n              \"compiler\": [8, \">= 4.3.0\"],\n              \"main\": function (container, depth0, helpers, partials, data) {\n                var alias1 = depth0 != null ? depth0 : container.nullContext || {},\n                    alias2 = container.hooks.helperMissing,\n                    alias3 = container.escapeExpression,\n                    lookupProperty = container.lookupProperty || function (parent, propertyName) {\n                  if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n                    return parent[propertyName];\n                  }\n\n                  return undefined;\n                };\n\n                return \"<div class=\\\"u2f-verify-text\\\"><p>\" + alias3((lookupProperty(helpers, \"i18n\") || depth0 && lookupProperty(depth0, \"i18n\") || alias2).call(alias1, {\n                  \"name\": \"i18n\",\n                  \"hash\": {\n                    \"bundle\": \"login\",\n                    \"code\": \"verify.u2f.instructions\"\n                  },\n                  \"data\": data,\n                  \"loc\": {\n                    \"start\": {\n                      \"line\": 1,\n                      \"column\": 32\n                    },\n                    \"end\": {\n                      \"line\": 1,\n                      \"column\": 86\n                    }\n                  }\n                })) + \"</p><p>\" + alias3((lookupProperty(helpers, \"i18n\") || depth0 && lookupProperty(depth0, \"i18n\") || alias2).call(alias1, {\n                  \"name\": \"i18n\",\n                  \"hash\": {\n                    \"bundle\": \"login\",\n                    \"code\": \"verify.u2f.instructionsBluetooth\"\n                  },\n                  \"data\": data,\n                  \"loc\": {\n                    \"start\": {\n                      \"line\": 1,\n                      \"column\": 93\n                    },\n                    \"end\": {\n                      \"line\": 1,\n                      \"column\": 156\n                    }\n                  }\n                })) + \"</p><div data-se=\\\"u2f-waiting\\\" class=\\\"okta-waiting-spinner\\\"></div></div>\";\n              },\n              \"useData\": true\n            })\n          })\n        }));\n      }\n\n      if (this.options.appState.get('allowRememberDevice')) {\n        result.push(FormType.Input({\n          label: false,\n          'label-top': true,\n          placeholder: this.options.appState.get('rememberDeviceLabel'),\n          className: 'margin-btm-0',\n          name: 'rememberDevice',\n          type: 'checkbox'\n        }));\n      }\n\n      return result;\n    },\n    postRender: function () {\n      oktaUnderscore.defer(() => {\n        if (fn$1.isU2fAvailable()) {\n          this.model.save();\n        } else {\n          this.$('[data-se=\"u2f-waiting\"]').addClass('hide');\n        }\n      });\n    },\n    _startEnrollment: function () {\n      this.$('.okta-waiting-spinner').removeClass('hide');\n      this.$('.o-form-button-bar').hide();\n    },\n    _stopEnrollment: function () {\n      this.$('.okta-waiting-spinner').addClass('hide');\n      this.$('.o-form-button-bar').show();\n    }\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  },\n  Footer: FooterMFA\n});\n\nexport { VerifyU2FController as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}