{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Router, loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport Backbone from '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Settings from '../models/Settings.js';\nimport Bundles from '../util/Bundles.js';\nimport fn$2 from '../util/BrowserFeatures.js';\nimport fn from '../util/ColorsUtil.js';\nimport Enums from '../util/Enums.js';\nimport { ConfigError } from '../util/Errors.js';\nimport Logger from '../util/Logger.js';\nimport LanguageUtil from '../util/LanguageUtil.js';\nimport AuthContainer from '../v1/views/shared/AuthContainer.js';\nimport Header from '../v1/views/shared/Header.js';\nimport AppState from './models/AppState.js';\nimport sessionStorageHelper from './client/sessionStorageHelper.js';\nimport '@okta/okta-auth-js';\nimport { startLoginFlow } from './client/startLoginFlow.js';\nimport { handleConfiguredFlow } from './client/handleConfiguredFlow.js';\nimport { updateAppState } from './client/updateAppState.js';\nimport fn$1 from '../util/CookieUtil.js';\nimport { formatError } from './client/formatError.js';\nimport IonResponseHelper from './ion/IonResponseHelper.js';\n\n/* eslint max-depth: [1,4] */\n\nclass BaseLoginRouter extends Router {\n  // also set on prototype\n  constructor(options) {\n    super(options); // Create a default success and/or error handler if\n    // one is not provided.\n\n    this.Events = Backbone.Events;\n    this.hasControllerRendered = false;\n    this.settings = void 0;\n    this.appState = void 0;\n    this.hooks = void 0;\n    this.header = void 0;\n    if (!options.globalSuccessFn) {\n      options.globalSuccessFn = function () {\n        /* dummy function */\n      };\n    }\n    if (!options.globalErrorFn) {\n      options.globalErrorFn = function (err) {\n        Logger.error(err);\n      };\n    }\n    this.settings = new Settings(oktaUnderscore.omit(options, 'el', 'authClient', 'hooks'), {\n      parse: true\n    });\n    this.settings.setAuthClient(options.authClient);\n    if (!options.el) {\n      this.settings.callGlobalError(new ConfigError(loc('error.required.el')));\n    }\n    oktaJQueryStatic('body > div').on('click', function () {// OKTA-69769 Tooltip wont close on iPhone/iPad\n      // Registering a click handler on the first div\n      // allows a tap that falls outside the tooltip\n      // to be registered as a tap by iOS\n      // and then the open tooltip will lose focus and close.\n    });\n    this.hooks = options.hooks;\n    this.appState = new AppState({}, {\n      settings: this.settings,\n      hooks: this.hooks\n    });\n    const wrapper = new AuthContainer({\n      appState: this.appState\n    });\n    oktaJQueryStatic(options.el).append(wrapper.render().$el);\n    this.el = `#${Enums.WIDGET_CONTAINER_ID}`;\n    this.header = new Header({\n      el: this.el,\n      appState: this.appState,\n      settings: this.settings\n    }); // Hide until unitial render\n\n    this.hide();\n    this.listenTo(this.appState, 'change:deviceFingerprint', this.updateDeviceFingerprint);\n    this.listenTo(this.appState, 'restartLoginFlow', this.restartLoginFlow);\n  }\n  updateDeviceFingerprint() {\n    const authClient = this.settings.getAuthClient();\n    const fingerprint = this.appState.get('deviceFingerprint');\n    if (fingerprint) {\n      authClient.http.setRequestHeader('X-Device-Fingerprint', fingerprint);\n    }\n  }\n  handleIdxResponseFailure(error = {\n    error: 'unknown',\n    details: undefined\n  }) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // IDX errors will not call the global error handler\n      error = formatError(error);\n      yield updateAppState(_this.appState, error.details);\n    })();\n  } // Generic error handler for all exceptions\n\n  handleError(error = {\n    error: 'unknown',\n    details: undefined\n  }) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const formattedError = formatError({\n        ...error\n      }); // format the error to resemble an IDX response\n\n      yield updateAppState(_this2.appState, formattedError.details);\n    })();\n  }\n  /* eslint max-statements: [2, 36], complexity: [2, 16] */\n\n  render(Controller, options = {}) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // If url changes then widget assumes that user's intention was to initiate a new login flow,\n      // so clear stored token to use the latest token.\n      if (sessionStorageHelper.getLastInitiatedLoginUrl() !== window.location.href) {\n        sessionStorageHelper.removeStateHandle();\n      } // Since we have a wrapper view, render our wrapper and use its content\n      // element as our new el.\n      // Note: Render it here because we know dom is ready at this point\n\n      if (!_this3.header.rendered()) {\n        _this3.el = _this3.header.render().getContentEl();\n      } // If we need to load a language (or apply custom i18n overrides), do\n      // this now and re-run render after it's finished.\n\n      if (!Bundles.isLoaded(_this3.settings.get('languageCode'))) {\n        yield LanguageUtil.loadLanguage(_this3.appState, _this3.settings);\n      } // introspect stateToken when widget is bootstrap with state token\n      // and remove it from `settings` afterwards as IDX response always has\n      // state token (which will be set into AppState)\n\n      let error;\n      if (_this3.settings.get('oieEnabled')) {\n        try {\n          let idxResp = yield startLoginFlow(_this3.settings);\n          if (idxResp.error) {\n            yield _this3.handleIdxResponseFailure(idxResp.error);\n          } else {\n            if (_this3.settings.get('flow') && !_this3.hasControllerRendered) {\n              idxResp = yield handleConfiguredFlow(idxResp, _this3.settings);\n            } // TODO: OKTA-494979 - temporary fix, remove when auth-js is upgraded to 6.6+\n\n            if (!idxResp.requestDidSucceed && IonResponseHelper.isIdxSessionExpiredError(idxResp)) {\n              // clear transaction subsequent page loads do not use stale interactionHandle\n              const authClient = _this3.settings.getAuthClient();\n              authClient.transactionManager.clear();\n            }\n            yield updateAppState(_this3.appState, idxResp);\n          }\n        } catch (exception) {\n          var _exception$is;\n          if ((_exception$is = exception.is) !== null && _exception$is !== void 0 && _exception$is.call(exception, 'terminal')) {\n            _this3.appState.setNonIdxError(exception);\n          } else {\n            error = exception;\n            yield _this3.handleError(exception);\n          }\n        } finally {\n          // These settings should only be used one time, for initial render\n          _this3.settings.unset('stateToken');\n          _this3.settings.unset('proxyIdxResponse');\n        }\n      } // Load the custom colors only on the first render\n\n      if (_this3.settings.get('colors.brand') && !fn.isLoaded()) {\n        const colors = {\n          brand: _this3.settings.get('colors.brand')\n        };\n        fn.addStyle(colors);\n      } // Show before initial render\n\n      _this3.show(); // render Controller\n\n      _this3.unload();\n      const controllerOptions = oktaUnderscore.extend({\n        el: _this3.el,\n        settings: _this3.settings,\n        appState: _this3.appState\n      }, options);\n      _this3.controller = new Controller(controllerOptions); // Bubble up all controller events\n\n      _this3.listenTo(_this3.controller, 'all', _this3.trigger);\n      _this3.controller.render();\n      _this3.hasControllerRendered = true; // This will reject the promise returned from renderEl\n\n      if (error) {\n        _this3.settings.callGlobalError(error);\n      } // -- TODO: OKTA-244631 How to surface up the CORS error in IDX?\n      // -- The `err` object from idx.js doesn't have XHR object\n      // Global error handling for CORS enabled errors\n      // if (err.xhr && BrowserFeatures.corsIsNotEnabled(err.xhr)) {\n      //   this.settings.callGlobalError(new UnsupportedBrowserError(loc('error.enabled.cors')));\n      //   return;\n      // }\n    })();\n  }\n  /**\n    * When \"Remember My Username\" is enabled, we save the identifier in a cookie\n    * so that the next time the user visits the SIW, the identifier field can be \n    * pre-filled with this value.\n   */\n\n  updateIdentifierCookie(idxResponse) {\n    if (this.settings.get('features.rememberMe')) {\n      var _idxResponse$context;\n\n      // Update the cookie with the identifier\n      const user = idxResponse === null || idxResponse === void 0 ? void 0 : (_idxResponse$context = idxResponse.context) === null || _idxResponse$context === void 0 ? void 0 : _idxResponse$context.user;\n      const {\n        identifier: identifier\n      } = (user === null || user === void 0 ? void 0 : user.value) || {};\n      if (identifier) {\n        fn$1.setUsernameCookie(identifier);\n      }\n    } else {\n      // We remove the cookie explicitly if this feature is disabled.\n      fn$1.removeUsernameCookie();\n    }\n  }\n  hasAuthenticationSucceeded(idxResponse) {\n    var _idxResponse$rawIdxSt, _idxResponse$rawIdxSt2;\n\n    // Check whether authentication has succeeded. This is done by checking the server response\n    // and seeing if either the 'success' or 'successWithInteractionCode' objects are present.\n    return (idxResponse === null || idxResponse === void 0 ? void 0 : (_idxResponse$rawIdxSt = idxResponse.rawIdxState) === null || _idxResponse$rawIdxSt === void 0 ? void 0 : _idxResponse$rawIdxSt.success) || (idxResponse === null || idxResponse === void 0 ? void 0 : (_idxResponse$rawIdxSt2 = idxResponse.rawIdxState) === null || _idxResponse$rawIdxSt2 === void 0 ? void 0 : _idxResponse$rawIdxSt2.successWithInteractionCode);\n  }\n  restartLoginFlow() {\n    // clear all transaction data and saved IDX response\n    this.settings.getAuthClient().transactionManager.clear();\n    this.appState.set('idx', undefined); // Clear the recoveryToken, if any\n\n    const authClient = this.settings.getAuthClient();\n    delete authClient.options['recoveryToken'];\n    this.settings.unset('recoveryToken'); // clear otp (email magic link), if any\n\n    this.settings.unset('otp'); // remove all event listeners from current controller instance. A new instance will be created in render().\n\n    this.controller.stopListening(); // Re-render the widget\n\n    this.render(this.controller.constructor);\n  }\n  start() {\n    const pushState = fn$2.supportsPushState();\n    Router.prototype.start.call(this, {\n      pushState: pushState\n    });\n  }\n  hide() {\n    this.header.$el.hide();\n  }\n  show() {\n    this.header.$el.show();\n  }\n  remove() {\n    this.unload();\n    this.header.$el.remove();\n    this.stopListening(this.appState);\n    this.stopListening(this.settings);\n    Bundles.remove();\n    Backbone.history.stop();\n  }\n} // Add \"Events\" to prototype for compatibility with existing code\n\nBaseLoginRouter.prototype.Events = Backbone.Events;\nexport { BaseLoginRouter as default };","map":{"version":3,"names":["Router","loc","Backbone","oktaJQueryStatic","oktaUnderscore","Settings","Bundles","fn$2","fn","Enums","ConfigError","Logger","LanguageUtil","AuthContainer","Header","AppState","sessionStorageHelper","startLoginFlow","handleConfiguredFlow","updateAppState","fn$1","formatError","IonResponseHelper","BaseLoginRouter","constructor","options","Events","hasControllerRendered","settings","appState","hooks","header","globalSuccessFn","globalErrorFn","err","error","omit","parse","setAuthClient","authClient","el","callGlobalError","on","wrapper","append","render","$el","WIDGET_CONTAINER_ID","hide","listenTo","updateDeviceFingerprint","restartLoginFlow","getAuthClient","fingerprint","get","http","setRequestHeader","handleIdxResponseFailure","details","undefined","_this","_asyncToGenerator","handleError","_this2","formattedError","Controller","_this3","getLastInitiatedLoginUrl","window","location","href","removeStateHandle","rendered","getContentEl","isLoaded","loadLanguage","idxResp","requestDidSucceed","isIdxSessionExpiredError","transactionManager","clear","exception","_exception$is","is","call","setNonIdxError","unset","colors","brand","addStyle","show","unload","controllerOptions","extend","controller","trigger","updateIdentifierCookie","idxResponse","_idxResponse$context","user","context","identifier","value","setUsernameCookie","removeUsernameCookie","hasAuthenticationSucceeded","_idxResponse$rawIdxSt","_idxResponse$rawIdxSt2","rawIdxState","success","successWithInteractionCode","set","stopListening","start","pushState","supportsPushState","prototype","remove","history","stop","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/BaseLoginRouter.js"],"sourcesContent":["import { Router, loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport Backbone from '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Settings from '../models/Settings.js';\nimport Bundles from '../util/Bundles.js';\nimport fn$2 from '../util/BrowserFeatures.js';\nimport fn from '../util/ColorsUtil.js';\nimport Enums from '../util/Enums.js';\nimport { ConfigError } from '../util/Errors.js';\nimport Logger from '../util/Logger.js';\nimport LanguageUtil from '../util/LanguageUtil.js';\nimport AuthContainer from '../v1/views/shared/AuthContainer.js';\nimport Header from '../v1/views/shared/Header.js';\nimport AppState from './models/AppState.js';\nimport sessionStorageHelper from './client/sessionStorageHelper.js';\nimport '@okta/okta-auth-js';\nimport { startLoginFlow } from './client/startLoginFlow.js';\nimport { handleConfiguredFlow } from './client/handleConfiguredFlow.js';\nimport { updateAppState } from './client/updateAppState.js';\nimport fn$1 from '../util/CookieUtil.js';\nimport { formatError } from './client/formatError.js';\nimport IonResponseHelper from './ion/IonResponseHelper.js';\n\n/* eslint max-depth: [1,4] */\n\nclass BaseLoginRouter extends Router {\n  // also set on prototype\n  constructor(options) {\n    super(options); // Create a default success and/or error handler if\n    // one is not provided.\n\n    this.Events = Backbone.Events;\n    this.hasControllerRendered = false;\n    this.settings = void 0;\n    this.appState = void 0;\n    this.hooks = void 0;\n    this.header = void 0;\n\n    if (!options.globalSuccessFn) {\n      options.globalSuccessFn = function () {\n        /* dummy function */\n      };\n    }\n\n    if (!options.globalErrorFn) {\n      options.globalErrorFn = function (err) {\n        Logger.error(err);\n      };\n    }\n\n    this.settings = new Settings(oktaUnderscore.omit(options, 'el', 'authClient', 'hooks'), {\n      parse: true\n    });\n    this.settings.setAuthClient(options.authClient);\n\n    if (!options.el) {\n      this.settings.callGlobalError(new ConfigError(loc('error.required.el')));\n    }\n\n    oktaJQueryStatic('body > div').on('click', function () {// OKTA-69769 Tooltip wont close on iPhone/iPad\n      // Registering a click handler on the first div\n      // allows a tap that falls outside the tooltip\n      // to be registered as a tap by iOS\n      // and then the open tooltip will lose focus and close.\n    });\n    this.hooks = options.hooks;\n    this.appState = new AppState({}, {\n      settings: this.settings,\n      hooks: this.hooks\n    });\n    const wrapper = new AuthContainer({\n      appState: this.appState\n    });\n    oktaJQueryStatic(options.el).append(wrapper.render().$el);\n    this.el = `#${Enums.WIDGET_CONTAINER_ID}`;\n    this.header = new Header({\n      el: this.el,\n      appState: this.appState,\n      settings: this.settings\n    }); // Hide until unitial render\n\n    this.hide();\n    this.listenTo(this.appState, 'change:deviceFingerprint', this.updateDeviceFingerprint);\n    this.listenTo(this.appState, 'restartLoginFlow', this.restartLoginFlow);\n  }\n\n  updateDeviceFingerprint() {\n    const authClient = this.settings.getAuthClient();\n    const fingerprint = this.appState.get('deviceFingerprint');\n\n    if (fingerprint) {\n      authClient.http.setRequestHeader('X-Device-Fingerprint', fingerprint);\n    }\n  }\n\n  async handleIdxResponseFailure(error = {\n    error: 'unknown',\n    details: undefined\n  }) {\n    // IDX errors will not call the global error handler\n    error = formatError(error);\n    await updateAppState(this.appState, error.details);\n  } // Generic error handler for all exceptions\n\n\n  async handleError(error = {\n    error: 'unknown',\n    details: undefined\n  }) {\n    const formattedError = formatError({ ...error\n    }); // format the error to resemble an IDX response\n\n    await updateAppState(this.appState, formattedError.details);\n  }\n  /* eslint max-statements: [2, 36], complexity: [2, 16] */\n\n\n  async render(Controller, options = {}) {\n    // If url changes then widget assumes that user's intention was to initiate a new login flow,\n    // so clear stored token to use the latest token.\n    if (sessionStorageHelper.getLastInitiatedLoginUrl() !== window.location.href) {\n      sessionStorageHelper.removeStateHandle();\n    } // Since we have a wrapper view, render our wrapper and use its content\n    // element as our new el.\n    // Note: Render it here because we know dom is ready at this point\n\n\n    if (!this.header.rendered()) {\n      this.el = this.header.render().getContentEl();\n    } // If we need to load a language (or apply custom i18n overrides), do\n    // this now and re-run render after it's finished.\n\n\n    if (!Bundles.isLoaded(this.settings.get('languageCode'))) {\n      await LanguageUtil.loadLanguage(this.appState, this.settings);\n    } // introspect stateToken when widget is bootstrap with state token\n    // and remove it from `settings` afterwards as IDX response always has\n    // state token (which will be set into AppState)\n\n\n    let error;\n\n    if (this.settings.get('oieEnabled')) {\n      try {\n        let idxResp = await startLoginFlow(this.settings);\n\n        if (idxResp.error) {\n          await this.handleIdxResponseFailure(idxResp.error);\n        } else {\n          if (this.settings.get('flow') && !this.hasControllerRendered) {\n            idxResp = await handleConfiguredFlow(idxResp, this.settings);\n          } // TODO: OKTA-494979 - temporary fix, remove when auth-js is upgraded to 6.6+\n\n\n          if (!idxResp.requestDidSucceed && IonResponseHelper.isIdxSessionExpiredError(idxResp)) {\n            // clear transaction subsequent page loads do not use stale interactionHandle\n            const authClient = this.settings.getAuthClient();\n            authClient.transactionManager.clear();\n          }\n\n          await updateAppState(this.appState, idxResp);\n        }\n      } catch (exception) {\n        var _exception$is;\n\n        if ((_exception$is = exception.is) !== null && _exception$is !== void 0 && _exception$is.call(exception, 'terminal')) {\n          this.appState.setNonIdxError(exception);\n        } else {\n          error = exception;\n          await this.handleError(exception);\n        }\n      } finally {\n        // These settings should only be used one time, for initial render\n        this.settings.unset('stateToken');\n        this.settings.unset('proxyIdxResponse');\n      }\n    } // Load the custom colors only on the first render\n\n\n    if (this.settings.get('colors.brand') && !fn.isLoaded()) {\n      const colors = {\n        brand: this.settings.get('colors.brand')\n      };\n      fn.addStyle(colors);\n    } // Show before initial render\n\n\n    this.show(); // render Controller\n\n    this.unload();\n\n    const controllerOptions = oktaUnderscore.extend({\n      el: this.el,\n      settings: this.settings,\n      appState: this.appState\n    }, options);\n\n    this.controller = new Controller(controllerOptions); // Bubble up all controller events\n\n    this.listenTo(this.controller, 'all', this.trigger);\n    this.controller.render();\n    this.hasControllerRendered = true; // This will reject the promise returned from renderEl\n\n    if (error) {\n      this.settings.callGlobalError(error);\n    } // -- TODO: OKTA-244631 How to surface up the CORS error in IDX?\n    // -- The `err` object from idx.js doesn't have XHR object\n    // Global error handling for CORS enabled errors\n    // if (err.xhr && BrowserFeatures.corsIsNotEnabled(err.xhr)) {\n    //   this.settings.callGlobalError(new UnsupportedBrowserError(loc('error.enabled.cors')));\n    //   return;\n    // }\n\n  }\n  /**\n    * When \"Remember My Username\" is enabled, we save the identifier in a cookie\n    * so that the next time the user visits the SIW, the identifier field can be \n    * pre-filled with this value.\n   */\n\n\n  updateIdentifierCookie(idxResponse) {\n    if (this.settings.get('features.rememberMe')) {\n      var _idxResponse$context;\n\n      // Update the cookie with the identifier\n      const user = idxResponse === null || idxResponse === void 0 ? void 0 : (_idxResponse$context = idxResponse.context) === null || _idxResponse$context === void 0 ? void 0 : _idxResponse$context.user;\n      const {\n        identifier: identifier\n      } = (user === null || user === void 0 ? void 0 : user.value) || {};\n\n      if (identifier) {\n        fn$1.setUsernameCookie(identifier);\n      }\n    } else {\n      // We remove the cookie explicitly if this feature is disabled.\n      fn$1.removeUsernameCookie();\n    }\n  }\n\n  hasAuthenticationSucceeded(idxResponse) {\n    var _idxResponse$rawIdxSt, _idxResponse$rawIdxSt2;\n\n    // Check whether authentication has succeeded. This is done by checking the server response\n    // and seeing if either the 'success' or 'successWithInteractionCode' objects are present.\n    return (idxResponse === null || idxResponse === void 0 ? void 0 : (_idxResponse$rawIdxSt = idxResponse.rawIdxState) === null || _idxResponse$rawIdxSt === void 0 ? void 0 : _idxResponse$rawIdxSt.success) || (idxResponse === null || idxResponse === void 0 ? void 0 : (_idxResponse$rawIdxSt2 = idxResponse.rawIdxState) === null || _idxResponse$rawIdxSt2 === void 0 ? void 0 : _idxResponse$rawIdxSt2.successWithInteractionCode);\n  }\n\n  restartLoginFlow() {\n    // clear all transaction data and saved IDX response\n    this.settings.getAuthClient().transactionManager.clear();\n    this.appState.set('idx', undefined); // Clear the recoveryToken, if any\n\n    const authClient = this.settings.getAuthClient();\n    delete authClient.options['recoveryToken'];\n    this.settings.unset('recoveryToken'); // clear otp (email magic link), if any\n\n    this.settings.unset('otp'); // remove all event listeners from current controller instance. A new instance will be created in render().\n\n    this.controller.stopListening(); // Re-render the widget\n\n    this.render(this.controller.constructor);\n  }\n\n  start() {\n    const pushState = fn$2.supportsPushState();\n    Router.prototype.start.call(this, {\n      pushState: pushState\n    });\n  }\n\n  hide() {\n    this.header.$el.hide();\n  }\n\n  show() {\n    this.header.$el.show();\n  }\n\n  remove() {\n    this.unload();\n    this.header.$el.remove();\n    this.stopListening(this.appState);\n    this.stopListening(this.settings);\n    Bundles.remove();\n    Backbone.history.stop();\n  }\n\n} // Add \"Events\" to prototype for compatibility with existing code\n\n\nBaseLoginRouter.prototype.Events = Backbone.Events;\n\nexport { BaseLoginRouter as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}