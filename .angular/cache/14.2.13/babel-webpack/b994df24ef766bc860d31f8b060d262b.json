{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\nclass OktaPassword extends Authenticator {\n  canVerify(values) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n  mapCredentials(values) {\n    const {\n      credentials,\n      password,\n      passcode\n    } = values;\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n    return credentials || {\n      passcode: passcode || password\n    };\n  }\n  getInputs(idxRemediationValue) {\n    var _a;\n    return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), {\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    });\n  }\n}\nexport { OktaPassword };","map":{"version":3,"names":["Authenticator","OktaPassword","canVerify","values","credentials","password","passcode","mapCredentials","getInputs","idxRemediationValue","_a","Object","assign","form","value","name","type","required"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/OktaPassword.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\n\nclass OktaPassword extends Authenticator {\n    canVerify(values) {\n        return !!(values.credentials || values.password || values.passcode);\n    }\n    mapCredentials(values) {\n        const { credentials, password, passcode } = values;\n        if (!credentials && !password && !passcode) {\n            return;\n        }\n        return credentials || { passcode: passcode || password };\n    }\n    getInputs(idxRemediationValue) {\n        var _a;\n        return Object.assign(Object.assign({}, (_a = idxRemediationValue.form) === null || _a === void 0 ? void 0 : _a.value[0]), { name: 'password', type: 'string', required: idxRemediationValue.required });\n    }\n}\n\nexport { OktaPassword };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,oBAAoB;AAElD,MAAMC,YAAY,SAASD,aAAa,CAAC;EACrCE,SAASA,CAACC,MAAM,EAAE;IACd,OAAO,CAAC,EAAEA,MAAM,CAACC,WAAW,IAAID,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAACG,QAAQ,CAAC;EACvE;EACAC,cAAcA,CAACJ,MAAM,EAAE;IACnB,MAAM;MAAEC,WAAW;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGH,MAAM;IAClD,IAAI,CAACC,WAAW,IAAI,CAACC,QAAQ,IAAI,CAACC,QAAQ,EAAE;MACxC;IACJ;IACA,OAAOF,WAAW,IAAI;MAAEE,QAAQ,EAAEA,QAAQ,IAAID;IAAS,CAAC;EAC5D;EACAG,SAASA,CAACC,mBAAmB,EAAE;IAC3B,IAAIC,EAAE;IACN,OAAOC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,CAACF,EAAE,GAAGD,mBAAmB,CAACI,IAAI,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MAAEC,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAER,mBAAmB,CAACQ;IAAS,CAAC,CAAC;EAC3M;AACJ;AAEA,SAAShB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}