{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction unwrapFormValue(remediation) {\n  if (Array.isArray(remediation)) {\n    return remediation.map(item => {\n      if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n        return item;\n      }\n      return unwrapFormValue(item);\n    });\n  }\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value);\n      if (['value', 'form'].includes(key) && formKeys.length === 1 && ['value', 'form'].includes(formKeys[0])) {\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      res[key] = value;\n    }\n  }\n  return res;\n}\nexport { unwrapFormValue };","map":{"version":3,"names":["unwrapFormValue","remediation","Array","isArray","map","item","res","key","value","Object","entries","formKeys","keys","includes","length","unwrappedForm","forEach"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/GenericRemediator/util.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction unwrapFormValue(remediation) {\n    if (Array.isArray(remediation)) {\n        return remediation\n            .map(item => {\n            if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n                return item;\n            }\n            return unwrapFormValue(item);\n        });\n    }\n    const res = {};\n    for (const [key, value] of Object.entries(remediation)) {\n        if (value === null || typeof value === 'undefined') {\n            continue;\n        }\n        if (typeof value === 'object') {\n            const formKeys = Object.keys(value);\n            if (['value', 'form'].includes(key)\n                && formKeys.length === 1\n                && ['value', 'form'].includes(formKeys[0])) {\n                const unwrappedForm = unwrapFormValue(value);\n                Object.entries(unwrappedForm).forEach(([key, value]) => {\n                    res[key] = value;\n                });\n            }\n            else {\n                res[key] = unwrapFormValue(value);\n            }\n        }\n        else {\n            res[key] = value;\n        }\n    }\n    return res;\n}\n\nexport { unwrapFormValue };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAeA,CAACC,WAAW,EAAE;EAClC,IAAIC,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC,EAAE;IAC5B,OAAOA,WAAW,CACbG,GAAG,CAACC,IAAI,IAAI;MACb,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,SAAS,EAAE;QACnF,OAAOA,IAAI;MACf;MACA,OAAOL,eAAe,CAACK,IAAI,CAAC;IAChC,CAAC,CAAC;EACN;EACA,MAAMC,GAAG,GAAG,CAAC,CAAC;EACd,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACT,WAAW,CAAC,EAAE;IACpD,IAAIO,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,WAAW,EAAE;MAChD;IACJ;IACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC3B,MAAMG,QAAQ,GAAGF,MAAM,CAACG,IAAI,CAACJ,KAAK,CAAC;MACnC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAACK,QAAQ,CAACN,GAAG,CAAC,IAC5BI,QAAQ,CAACG,MAAM,KAAK,CAAC,IACrB,CAAC,OAAO,EAAE,MAAM,CAAC,CAACD,QAAQ,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;QAC5C,MAAMI,aAAa,GAAGf,eAAe,CAACQ,KAAK,CAAC;QAC5CC,MAAM,CAACC,OAAO,CAACK,aAAa,CAAC,CAACC,OAAO,CAAC,CAAC,CAACT,GAAG,EAAEC,KAAK,CAAC,KAAK;UACpDF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;QACpB,CAAC,CAAC;MACN,CAAC,MACI;QACDF,GAAG,CAACC,GAAG,CAAC,GAAGP,eAAe,CAACQ,KAAK,CAAC;MACrC;IACJ,CAAC,MACI;MACDF,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK;IACpB;EACJ;EACA,OAAOF,GAAG;AACd;AAEA,SAASN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}