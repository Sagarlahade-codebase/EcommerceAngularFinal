{"ast":null,"code":"import _Handlebars2 from '../../../lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport _ from '../../../lib/underscore/underscore-min.js';\n\n/* eslint @okta/okta-ui/no-specific-methods: 0, @okta/okta-ui/no-specific-modules: 0 */\n\n_.mixin({\n  resultCtx: function (object, property, context, defaultValue) {\n    let value = _.isObject(object) ? object[property] : void 0;\n    if (_.isFunction(value)) {\n      value = value.call(context || object);\n    }\n    if (value) {\n      return value;\n    } else {\n      return !_.isUndefined(defaultValue) ? defaultValue : value;\n    }\n  },\n  isInteger: function (x) {\n    return _.isNumber(x) && x % 1 === 0;\n  },\n  // TODO: This will be deprecated at some point. Views should use precompiled templates\n  // eslint-disable-next-line @okta/okta-ui/no-bare-templates\n  template: function (source, data) {\n    const template = _Handlebars2.compile(source);\n    if (data) {\n      return template(data);\n    }\n    const fn = function (data) {\n      return template(data);\n    };\n    fn.source = ''; // to conform with \"CompiledTemplate\" type definition\n\n    return fn;\n  }\n});\nconst oktaUnderscore = _;\nexport { oktaUnderscore as default };","map":{"version":3,"names":["_Handlebars2","_","mixin","resultCtx","object","property","context","defaultValue","value","isObject","isFunction","call","isUndefined","isInteger","x","isNumber","template","source","data","compile","fn","oktaUnderscore","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js"],"sourcesContent":["import _Handlebars2 from '../../../lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport _ from '../../../lib/underscore/underscore-min.js';\n\n/* eslint @okta/okta-ui/no-specific-methods: 0, @okta/okta-ui/no-specific-modules: 0 */\n\n_.mixin({\n  resultCtx: function (object, property, context, defaultValue) {\n    let value = _.isObject(object) ? object[property] : void 0;\n\n    if (_.isFunction(value)) {\n      value = value.call(context || object);\n    }\n\n    if (value) {\n      return value;\n    } else {\n      return !_.isUndefined(defaultValue) ? defaultValue : value;\n    }\n  },\n  isInteger: function (x) {\n    return _.isNumber(x) && x % 1 === 0;\n  },\n  // TODO: This will be deprecated at some point. Views should use precompiled templates\n  // eslint-disable-next-line @okta/okta-ui/no-bare-templates\n  template: function (source, data) {\n    const template = _Handlebars2.compile(source);\n\n    if (data) {\n      return template(data);\n    }\n\n    const fn = function (data) {\n      return template(data);\n    };\n\n    fn.source = ''; // to conform with \"CompiledTemplate\" type definition\n\n    return fn;\n  }\n});\n\nconst oktaUnderscore = _;\n\nexport { oktaUnderscore as default };\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,wDAAwD;AACjF,OAAOC,CAAC,MAAM,2CAA2C;;AAEzD;;AAEAA,CAAC,CAACC,KAAK,CAAC;EACNC,SAAS,EAAE,SAAAA,CAAUC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,YAAY,EAAE;IAC5D,IAAIC,KAAK,GAAGP,CAAC,CAACQ,QAAQ,CAACL,MAAM,CAAC,GAAGA,MAAM,CAACC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAE1D,IAAIJ,CAAC,CAACS,UAAU,CAACF,KAAK,CAAC,EAAE;MACvBA,KAAK,GAAGA,KAAK,CAACG,IAAI,CAACL,OAAO,IAAIF,MAAM,CAAC;IACvC;IAEA,IAAII,KAAK,EAAE;MACT,OAAOA,KAAK;IACd,CAAC,MAAM;MACL,OAAO,CAACP,CAAC,CAACW,WAAW,CAACL,YAAY,CAAC,GAAGA,YAAY,GAAGC,KAAK;IAC5D;EACF,CAAC;EACDK,SAAS,EAAE,SAAAA,CAAUC,CAAC,EAAE;IACtB,OAAOb,CAAC,CAACc,QAAQ,CAACD,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC;EACrC,CAAC;EACD;EACA;EACAE,QAAQ,EAAE,SAAAA,CAAUC,MAAM,EAAEC,IAAI,EAAE;IAChC,MAAMF,QAAQ,GAAGhB,YAAY,CAACmB,OAAO,CAACF,MAAM,CAAC;IAE7C,IAAIC,IAAI,EAAE;MACR,OAAOF,QAAQ,CAACE,IAAI,CAAC;IACvB;IAEA,MAAME,EAAE,GAAG,SAAAA,CAAUF,IAAI,EAAE;MACzB,OAAOF,QAAQ,CAACE,IAAI,CAAC;IACvB,CAAC;IAEDE,EAAE,CAACH,MAAM,GAAG,EAAE,CAAC,CAAC;;IAEhB,OAAOG,EAAE;EACX;AACF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGpB,CAAC;AAExB,SAASoB,cAAc,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}