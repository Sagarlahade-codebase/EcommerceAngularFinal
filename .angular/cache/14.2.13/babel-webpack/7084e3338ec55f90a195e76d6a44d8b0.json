{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from '../_virtual/_tslib.js';\nimport { warn } from '../util/console.js';\nimport { split2 } from '../util/misc.js';\nimport * as index from './remediators/index.js';\nimport { GenericRemediator } from './remediators/GenericRemediator/GenericRemediator.js';\nimport { IdxFeature } from './types/api.js';\nimport { isIdxResponse } from './types/idx-js.js';\nfunction isTerminalResponse(idxResponse) {\n  const {\n    neededToProceed,\n    interactionCode\n  } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\nfunction canSkipFn(idxResponse) {\n  return idxResponse.neededToProceed.some(({\n    name\n  }) => name === 'skip');\n}\nfunction canResendFn(idxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\nfunction getMessagesFromIdxRemediationValue(value) {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value];\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm];\n    }\n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value];\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions];\n    }\n    return messages;\n  }, []);\n}\nfunction getMessagesFromResponse(idxResponse, options) {\n  var _a;\n  let messages = [];\n  const {\n    rawIdxState,\n    neededToProceed\n  } = idxResponse;\n  const globalMessages = (_a = rawIdxState.messages) === null || _a === void 0 ? void 0 : _a.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages];\n  }\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages];\n      }\n    }\n  }\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    var _a;\n    const key = (_a = message.i18n) === null || _a === void 0 ? void 0 : _a.key;\n    if (key && seen[key]) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message];\n    return filtered;\n  }, []);\n  return messages;\n}\nfunction getEnabledFeatures(idxResponse) {\n  const res = [];\n  const {\n    actions,\n    neededToProceed\n  } = idxResponse;\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY);\n  }\n  if (neededToProceed.some(({\n    name\n  }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION);\n  }\n  if (neededToProceed.some(({\n    name\n  }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP);\n  }\n  if (neededToProceed.some(({\n    name\n  }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK);\n  }\n  return res;\n}\nfunction getAvailableSteps(authClient, idxResponse, useGenericRemediator) {\n  var _a;\n  const res = [];\n  const remediatorMap = Object.values(index).reduce((map, remediatorClass) => {\n    if (remediatorClass.remediationName) {\n      map[remediatorClass.remediationName] = remediatorClass;\n    }\n    return map;\n  }, {});\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, {\n      useGenericRemediator,\n      remediators: remediatorMap\n    });\n    if (T) {\n      const remediator = new T(remediation);\n      res.push(remediator.getNextStep(authClient, idxResponse.context));\n    }\n  }\n  for (const [name] of Object.entries(idxResponse.actions || {})) {\n    let stepObj = {\n      name,\n      action: function () {\n        var _ref = _asyncToGenerator(function* (params) {\n          return authClient.idx.proceed({\n            actions: [{\n              name,\n              params\n            }]\n          });\n        });\n        return function action(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      const rest = __rest(actionObj, [\"href\", \"method\", \"rel\", \"accepts\", \"produces\"]);\n      const value = (_a = actionObj.value) === null || _a === void 0 ? void 0 : _a.filter(item => item.name !== 'stateHandle');\n      stepObj = Object.assign(Object.assign(Object.assign({}, rest), value && {\n        value\n      }), stepObj);\n    }\n    res.push(stepObj);\n  }\n  return res;\n}\nfunction filterValuesForRemediation(idxResponse, remediationName, values) {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n  const valuesForRemediation = remediation.value.reduce((res, entry) => {\n    const {\n      name,\n      value\n    } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value;\n    } else {\n      res[name] = values[name];\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\nfunction getRemediatorClass(remediation, options) {\n  const {\n    useGenericRemediator,\n    remediators\n  } = options;\n  if (!remediation) {\n    return undefined;\n  }\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n  return remediators[remediation.name];\n}\nfunction getRemediator(idxRemediations, values, options) {\n  const remediators = options.remediators;\n  const useGenericRemediator = options.useGenericRemediator;\n  let remediator;\n  if (options.step) {\n    const remediation = idxRemediations.find(({\n      name\n    }) => name === options.step);\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n  const remediatorCandidates = [];\n  if (useGenericRemediator) {\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n      const T = getRemediatorClass(remediation, options);\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate()) {\n        return remediator;\n      }\n      remediatorCandidates.push(remediator);\n    }\n  }\n  return remediatorCandidates[0];\n}\nfunction getNextStep(authClient, remediator, idxResponse) {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return Object.assign(Object.assign(Object.assign({}, nextStep), canSkip && {\n    canSkip\n  }), canResend && {\n    canResend\n  });\n}\nfunction handleIdxError(authClient, e, options = {}) {\n  let idxResponse = isIdxResponse(e) ? e : null;\n  if (!idxResponse) {\n    throw e;\n  }\n  idxResponse = Object.assign(Object.assign({}, idxResponse), {\n    requestDidSucceed: false\n  });\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return {\n      idxResponse,\n      terminal,\n      messages\n    };\n  } else {\n    const remediator = getRemediator(idxResponse.neededToProceed, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return Object.assign({\n      idxResponse,\n      messages\n    }, nextStep && {\n      nextStep\n    });\n  }\n}\nexport { canResendFn, canSkipFn, filterValuesForRemediation, getAvailableSteps, getEnabledFeatures, getMessagesFromIdxRemediationValue, getMessagesFromResponse, getNextStep, getRemediator, handleIdxError, isTerminalResponse };","map":{"version":3,"names":["__rest","warn","split2","index","GenericRemediator","IdxFeature","isIdxResponse","isTerminalResponse","idxResponse","neededToProceed","interactionCode","length","canSkipFn","some","name","canResendFn","Object","keys","actions","actionName","includes","getMessagesFromIdxRemediationValue","value","Array","isArray","reduce","messages","form","messagesFromForm","options","optionValues","forEach","option","messagesFromOptions","getMessagesFromResponse","_a","rawIdxState","globalMessages","map","message","useGenericRemediator","remediation","fieldMessages","seen","filtered","key","i18n","getEnabledFeatures","res","push","PASSWORD_RECOVERY","REGISTRATION","SOCIAL_IDP","ACCOUNT_UNLOCK","getAvailableSteps","authClient","remediatorMap","values","remediatorClass","remediationName","T","getRemediatorClass","remediators","remediator","getNextStep","context","entries","stepObj","action","_ref","_asyncToGenerator","params","idx","proceed","_x","apply","arguments","startsWith","part1","part2","actionObj","rest","filter","item","assign","filterValuesForRemediation","remediations","find","r","valuesForRemediation","entry","undefined","getRemediator","idxRemediations","step","remediatorCandidates","isRemeditionInFlow","canRemediate","nextStep","canSkip","canResend","handleIdxError","e","requestDidSucceed","terminal"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/util.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from '../_virtual/_tslib.js';\nimport { warn } from '../util/console.js';\nimport { split2 } from '../util/misc.js';\nimport * as index from './remediators/index.js';\nimport { GenericRemediator } from './remediators/GenericRemediator/GenericRemediator.js';\nimport { IdxFeature } from './types/api.js';\nimport { isIdxResponse } from './types/idx-js.js';\n\nfunction isTerminalResponse(idxResponse) {\n    const { neededToProceed, interactionCode } = idxResponse;\n    return !neededToProceed.length && !interactionCode;\n}\nfunction canSkipFn(idxResponse) {\n    return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\nfunction canResendFn(idxResponse) {\n    return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\nfunction getMessagesFromIdxRemediationValue(value) {\n    if (!value || !Array.isArray(value)) {\n        return;\n    }\n    return value.reduce((messages, value) => {\n        if (value.messages) {\n            messages = [...messages, ...value.messages.value];\n        }\n        if (value.form) {\n            const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n            messages = [...messages, ...messagesFromForm];\n        }\n        if (value.options) {\n            let optionValues = [];\n            value.options.forEach(option => {\n                if (!option.value || typeof option.value === 'string') {\n                    return;\n                }\n                optionValues = [...optionValues, option.value];\n            });\n            const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n            messages = [...messages, ...messagesFromOptions];\n        }\n        return messages;\n    }, []);\n}\nfunction getMessagesFromResponse(idxResponse, options) {\n    var _a;\n    let messages = [];\n    const { rawIdxState, neededToProceed } = idxResponse;\n    const globalMessages = (_a = rawIdxState.messages) === null || _a === void 0 ? void 0 : _a.value.map(message => message);\n    if (globalMessages) {\n        messages = [...messages, ...globalMessages];\n    }\n    if (!options.useGenericRemediator) {\n        for (let remediation of neededToProceed) {\n            const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n            if (fieldMessages) {\n                messages = [...messages, ...fieldMessages];\n            }\n        }\n    }\n    const seen = {};\n    messages = messages.reduce((filtered, message) => {\n        var _a;\n        const key = (_a = message.i18n) === null || _a === void 0 ? void 0 : _a.key;\n        if (key && seen[key]) {\n            return filtered;\n        }\n        seen[key] = message;\n        filtered = [...filtered, message];\n        return filtered;\n    }, []);\n    return messages;\n}\nfunction getEnabledFeatures(idxResponse) {\n    const res = [];\n    const { actions, neededToProceed } = idxResponse;\n    if (actions['currentAuthenticator-recover']) {\n        res.push(IdxFeature.PASSWORD_RECOVERY);\n    }\n    if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n        res.push(IdxFeature.REGISTRATION);\n    }\n    if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n        res.push(IdxFeature.SOCIAL_IDP);\n    }\n    if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n        res.push(IdxFeature.ACCOUNT_UNLOCK);\n    }\n    return res;\n}\nfunction getAvailableSteps(authClient, idxResponse, useGenericRemediator) {\n    var _a;\n    const res = [];\n    const remediatorMap = Object.values(index)\n        .reduce((map, remediatorClass) => {\n        if (remediatorClass.remediationName) {\n            map[remediatorClass.remediationName] = remediatorClass;\n        }\n        return map;\n    }, {});\n    for (let remediation of idxResponse.neededToProceed) {\n        const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n        if (T) {\n            const remediator = new T(remediation);\n            res.push(remediator.getNextStep(authClient, idxResponse.context));\n        }\n    }\n    for (const [name] of Object.entries((idxResponse.actions || {}))) {\n        let stepObj = {\n            name,\n            action: async (params) => {\n                return authClient.idx.proceed({\n                    actions: [{ name, params }]\n                });\n            }\n        };\n        if (name.startsWith('currentAuthenticator')) {\n            const [part1, part2] = split2(name, '-');\n            const actionObj = idxResponse.rawIdxState[part1].value[part2];\n            const rest = __rest(actionObj, [\"href\", \"method\", \"rel\", \"accepts\", \"produces\"]);\n            const value = (_a = actionObj.value) === null || _a === void 0 ? void 0 : _a.filter(item => item.name !== 'stateHandle');\n            stepObj = Object.assign(Object.assign(Object.assign({}, rest), (value && { value })), stepObj);\n        }\n        res.push(stepObj);\n    }\n    return res;\n}\nfunction filterValuesForRemediation(idxResponse, remediationName, values) {\n    const remediations = idxResponse.neededToProceed || [];\n    const remediation = remediations.find(r => r.name === remediationName);\n    if (!remediation) {\n        warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n        return values;\n    }\n    const valuesForRemediation = remediation.value.reduce((res, entry) => {\n        const { name, value } = entry;\n        if (name === 'stateHandle') {\n            res[name] = value;\n        }\n        else {\n            res[name] = values[name];\n        }\n        return res;\n    }, {});\n    return valuesForRemediation;\n}\nfunction getRemediatorClass(remediation, options) {\n    const { useGenericRemediator, remediators } = options;\n    if (!remediation) {\n        return undefined;\n    }\n    if (useGenericRemediator) {\n        return GenericRemediator;\n    }\n    return remediators[remediation.name];\n}\nfunction getRemediator(idxRemediations, values, options) {\n    const remediators = options.remediators;\n    const useGenericRemediator = options.useGenericRemediator;\n    let remediator;\n    if (options.step) {\n        const remediation = idxRemediations.find(({ name }) => name === options.step);\n        if (remediation) {\n            const T = getRemediatorClass(remediation, options);\n            return T ? new T(remediation, values, options) : undefined;\n        }\n        else {\n            warn(`step \"${options.step}\" did not match any remediations`);\n            return;\n        }\n    }\n    const remediatorCandidates = [];\n    if (useGenericRemediator) {\n        remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n    }\n    else {\n        for (let remediation of idxRemediations) {\n            const isRemeditionInFlow = Object.keys(remediators).includes(remediation.name);\n            if (!isRemeditionInFlow) {\n                continue;\n            }\n            const T = getRemediatorClass(remediation, options);\n            remediator = new T(remediation, values, options);\n            if (remediator.canRemediate()) {\n                return remediator;\n            }\n            remediatorCandidates.push(remediator);\n        }\n    }\n    return remediatorCandidates[0];\n}\nfunction getNextStep(authClient, remediator, idxResponse) {\n    const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n    const canSkip = canSkipFn(idxResponse);\n    const canResend = canResendFn(idxResponse);\n    return Object.assign(Object.assign(Object.assign({}, nextStep), (canSkip && { canSkip })), (canResend && { canResend }));\n}\nfunction handleIdxError(authClient, e, options = {}) {\n    let idxResponse = isIdxResponse(e) ? e : null;\n    if (!idxResponse) {\n        throw e;\n    }\n    idxResponse = Object.assign(Object.assign({}, idxResponse), { requestDidSucceed: false });\n    const terminal = isTerminalResponse(idxResponse);\n    const messages = getMessagesFromResponse(idxResponse, options);\n    if (terminal) {\n        return { idxResponse, terminal, messages };\n    }\n    else {\n        const remediator = getRemediator(idxResponse.neededToProceed, {}, options);\n        const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n        return Object.assign({ idxResponse,\n            messages }, (nextStep && { nextStep }));\n    }\n}\n\nexport { canResendFn, canSkipFn, filterValuesForRemediation, getAvailableSteps, getEnabledFeatures, getMessagesFromIdxRemediationValue, getMessagesFromResponse, getNextStep, getRemediator, handleIdxError, isTerminalResponse };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}