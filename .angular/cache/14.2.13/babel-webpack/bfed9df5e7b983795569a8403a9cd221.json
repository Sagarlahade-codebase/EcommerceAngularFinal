{"ast":null,"code":"import { loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Enums from './Enums.js';\nimport Logger from './Logger.js';\nimport fn from './BrowserFeatures.js';\n\n/* eslint-disable max-statements */\nconst Util = {};\nconst buildInputForParameter = function (name, value) {\n  const input = document.createElement('input');\n  input.name = name;\n  input.value = decodeURIComponent(value);\n  input.type = 'hidden';\n  return input;\n};\nconst buildSubmitInput = function () {\n  const input = document.createElement('input');\n  input.type = 'submit';\n  return input;\n};\nconst buildDynamicForm = function (url = '', method) {\n  const splitOnFragment = url.split('#');\n  const fragment = splitOnFragment[1];\n  const splitOnQuery = (splitOnFragment[0] || '').split('?');\n  const query = splitOnQuery[1];\n  let targetUrl = splitOnQuery[0];\n  if (fragment) {\n    targetUrl += '#' + fragment;\n  }\n  const form = document.createElement('form');\n  form.method = method;\n  form.setAttribute('style', 'display: none;');\n  form.action = targetUrl;\n  if (query && query.length) {\n    const queryParts = query.split('&');\n    queryParts.forEach(queryPart => {\n      const parameterParts = queryPart.split('=');\n      const input = buildInputForParameter(parameterParts[0], parameterParts[1]);\n      form.appendChild(input);\n    });\n  }\n  form.appendChild(buildSubmitInput());\n  return form;\n}; // eslint-disable-next-line complexity\n\nUtil.transformErrorXHR = function (xhr) {\n  // Handle network connection error\n  if (xhr.status === 0 && oktaUnderscore.isEmpty(xhr.responseJSON)) {\n    xhr.responseJSON = {\n      errorSummary: loc('error.network.connection', 'login')\n    };\n    return xhr;\n  }\n  if (!xhr.responseJSON) {\n    if (!xhr.responseText) {\n      // Empty server response\n      xhr.responseJSON = {\n        errorSummary: loc('error.unsupported.response', 'login')\n      };\n      return xhr;\n    }\n    if (typeof xhr.responseText === 'string') {\n      try {\n        xhr.responseJSON = JSON.parse(xhr.responseText);\n      } catch (e) {\n        // Malformed server response\n        xhr.responseJSON = {\n          errorSummary: loc('error.unsupported.response', 'login')\n        };\n        return xhr;\n      }\n    } else if (typeof xhr.responseText === 'object') {\n      xhr.responseJSON = xhr.responseText;\n    }\n  } // Temporary solution to display field errors\n  // Assuming there is only one field error in a response\n\n  if (xhr.responseJSON && xhr.responseJSON.errorCauses && xhr.responseJSON.errorCauses.length) {\n    xhr.responseJSON.errorSummary = xhr.responseJSON.errorCauses[0].errorSummary;\n  } // Replace error messages\n\n  if (!oktaUnderscore.isEmpty(xhr.responseJSON)) {\n    const errorMsg = loc('errors.' + xhr.responseJSON.errorCode, 'login');\n    if (errorMsg.indexOf('L10N_ERROR[') === -1) {\n      xhr.responseJSON.errorSummary = errorMsg;\n      if (xhr.responseJSON && xhr.responseJSON.errorCauses && xhr.responseJSON.errorCauses.length) {\n        // BaseForm will consume errorCauses before errorSummary if it is an array,\n        // so, we have to make sure to remove it when we have a valid error code\n        delete xhr.responseJSON.errorCauses;\n      }\n    }\n  }\n  return xhr;\n}; // Simple helper function to lowercase all strings in the given array\n\nUtil.toLower = function (strings) {\n  return oktaUnderscore.map(strings, function (str) {\n    return str.toLowerCase();\n  });\n}; // A languageCode can be composed of multiple parts, i.e:\n// {{language}}-{{region}}-{{dialect}}\n//\n// In these cases, it's necessary to generate a list of other possible\n// combinations that we might support (in preferred order).\n//\n// For example:\n// en-US -> [en-US, en]\n// de-DE-bavarian -> [de-DE-bavarian, de-DE, de]\n\nfunction expandLanguage(language) {\n  const expanded = [language];\n  const parts = language.split('-');\n  while (parts.pop() && parts.length > 0) {\n    expanded.push(parts.join('-'));\n  }\n  return expanded;\n} // Following the rules of expanding one language, this will generate\n// all potential languages in the given order (where higher priority is\n// given to expanded languages over other downstream languages).\n\nUtil.expandLanguages = function (languages) {\n  return oktaUnderscore.chain(languages).map(expandLanguage).flatten().uniq().value();\n}; //helper to call setTimeout\n\nUtil.callAfterTimeout = function (callback, time) {\n  return setTimeout(callback, time);\n}; // Helper function to provide consistent formatting of template literals\n// that are logged when in development mode.\n\nUtil.debugMessage = function (message) {};\nUtil.logConsoleError = function (message) {\n  Logger.error(message);\n}; // Trigger an afterError event\n\nUtil.triggerAfterError = function (controller, err = {}) {\n  if (!err.statusCode && err.xhr && err.xhr.status) {\n    // Bring the statusCode to the top-level of the Error\n    err.statusCode = err.xhr.status;\n  } // Some controllers return the className as a function - process it here:\n\n  const className = oktaUnderscore.isFunction(controller.className) ? controller.className() : controller.className;\n  const error = oktaUnderscore.pick(err, 'name', 'message', 'statusCode', 'xhr');\n  controller.trigger('afterError', {\n    controller: className\n  }, error); // Logs to console only in dev mode\n};\nUtil.redirect = function (url, win = window, isAppLink = false) {\n  if (!url) {\n    Logger.error(`Cannot redirect to empty URL: (${url})`);\n    return;\n  }\n  if (fn.isAndroid() && !isAppLink) {\n    Util.redirectWithFormGet(url);\n  } else {\n    win.location.href = url;\n  }\n};\n/**\n * Why redirect via Form get rather using `window.location.href`?\n * At the time of writing, Chrome (<72) in Android would block window location change\n * at following case\n * 1. An AJAX is trigger because of user action.\n * 2. 5+ seconds passed without any further user interaction.\n * 3. User takes an action results in window location change.\n *\n * Luckily we discovered that uses Form submit would work around this problem\n * even though it changed window location.\n *\n * Check the commit history for more details.\n */\n\nUtil.redirectWithFormGet = function (url) {\n  Util.redirectWithForm(url, 'get');\n};\nUtil.redirectWithForm = function (url, method = 'post') {\n  if (!url) {\n    Logger.error(`Cannot redirect to empty URL: (${url})`);\n    return;\n  }\n  const mainContainer = document.getElementById(Enums.WIDGET_CONTAINER_ID);\n  if (!mainContainer) {\n    Logger.error('Cannot find okta-sign-in container append to which a form');\n    return;\n  }\n  const form = buildDynamicForm(url, method);\n  mainContainer.appendChild(form);\n  form.querySelector('input[type=\"submit\"]').click();\n};\n/**\n * When we want to show an explain text, we need to check if this is different from\n * the label text, to not have an explain that look like a duplicated label.\n * okta-signin-widget gives the possibility to customize every i18n, so we cannot\n * know ahead if these two are equal or different, we need to call this function everytime.\n */\n\nUtil.createInputExplain = function (explainKey, labelKey, bundleName, explainParams, labelParams) {\n  const explain = explainParams ? loc(explainKey, bundleName, explainParams) : loc(explainKey, bundleName);\n  const label = labelParams ? loc(labelKey, bundleName, labelParams) : loc(labelKey, bundleName);\n  if (explain === label) {\n    return false;\n  }\n  return explain;\n};\nUtil.isV1StateToken = function (token) {\n  return !!(token && oktaUnderscore.isString(token) && token.startsWith('00'));\n};\nexport { Util as default };","map":{"version":3,"names":["loc","oktaUnderscore","Enums","Logger","fn","Util","buildInputForParameter","name","value","input","document","createElement","decodeURIComponent","type","buildSubmitInput","buildDynamicForm","url","method","splitOnFragment","split","fragment","splitOnQuery","query","targetUrl","form","setAttribute","action","length","queryParts","forEach","queryPart","parameterParts","appendChild","transformErrorXHR","xhr","status","isEmpty","responseJSON","errorSummary","responseText","JSON","parse","e","errorCauses","errorMsg","errorCode","indexOf","toLower","strings","map","str","toLowerCase","expandLanguage","language","expanded","parts","pop","push","join","expandLanguages","languages","chain","flatten","uniq","callAfterTimeout","callback","time","setTimeout","debugMessage","message","logConsoleError","error","triggerAfterError","controller","err","statusCode","className","isFunction","pick","trigger","redirect","win","window","isAppLink","isAndroid","redirectWithFormGet","location","href","redirectWithForm","mainContainer","getElementById","WIDGET_CONTAINER_ID","querySelector","click","createInputExplain","explainKey","labelKey","bundleName","explainParams","labelParams","explain","label","isV1StateToken","token","isString","startsWith","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/Util.js"],"sourcesContent":["import { loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Enums from './Enums.js';\nimport Logger from './Logger.js';\nimport fn from './BrowserFeatures.js';\n\n/* eslint-disable max-statements */\nconst Util = {};\n\nconst buildInputForParameter = function (name, value) {\n  const input = document.createElement('input');\n  input.name = name;\n  input.value = decodeURIComponent(value);\n  input.type = 'hidden';\n  return input;\n};\n\nconst buildSubmitInput = function () {\n  const input = document.createElement('input');\n  input.type = 'submit';\n  return input;\n};\n\nconst buildDynamicForm = function (url = '', method) {\n  const splitOnFragment = url.split('#');\n  const fragment = splitOnFragment[1];\n  const splitOnQuery = (splitOnFragment[0] || '').split('?');\n  const query = splitOnQuery[1];\n  let targetUrl = splitOnQuery[0];\n\n  if (fragment) {\n    targetUrl += '#' + fragment;\n  }\n\n  const form = document.createElement('form');\n  form.method = method;\n  form.setAttribute('style', 'display: none;');\n  form.action = targetUrl;\n\n  if (query && query.length) {\n    const queryParts = query.split('&');\n    queryParts.forEach(queryPart => {\n      const parameterParts = queryPart.split('=');\n      const input = buildInputForParameter(parameterParts[0], parameterParts[1]);\n      form.appendChild(input);\n    });\n  }\n\n  form.appendChild(buildSubmitInput());\n  return form;\n}; // eslint-disable-next-line complexity\n\n\nUtil.transformErrorXHR = function (xhr) {\n  // Handle network connection error\n  if (xhr.status === 0 && oktaUnderscore.isEmpty(xhr.responseJSON)) {\n    xhr.responseJSON = {\n      errorSummary: loc('error.network.connection', 'login')\n    };\n    return xhr;\n  }\n\n  if (!xhr.responseJSON) {\n    if (!xhr.responseText) {\n      // Empty server response\n      xhr.responseJSON = {\n        errorSummary: loc('error.unsupported.response', 'login')\n      };\n      return xhr;\n    }\n\n    if (typeof xhr.responseText === 'string') {\n      try {\n        xhr.responseJSON = JSON.parse(xhr.responseText);\n      } catch (e) {\n        // Malformed server response\n        xhr.responseJSON = {\n          errorSummary: loc('error.unsupported.response', 'login')\n        };\n        return xhr;\n      }\n    } else if (typeof xhr.responseText === 'object') {\n      xhr.responseJSON = xhr.responseText;\n    }\n  } // Temporary solution to display field errors\n  // Assuming there is only one field error in a response\n\n\n  if (xhr.responseJSON && xhr.responseJSON.errorCauses && xhr.responseJSON.errorCauses.length) {\n    xhr.responseJSON.errorSummary = xhr.responseJSON.errorCauses[0].errorSummary;\n  } // Replace error messages\n\n\n  if (!oktaUnderscore.isEmpty(xhr.responseJSON)) {\n    const errorMsg = loc('errors.' + xhr.responseJSON.errorCode, 'login');\n\n    if (errorMsg.indexOf('L10N_ERROR[') === -1) {\n      xhr.responseJSON.errorSummary = errorMsg;\n\n      if (xhr.responseJSON && xhr.responseJSON.errorCauses && xhr.responseJSON.errorCauses.length) {\n        // BaseForm will consume errorCauses before errorSummary if it is an array,\n        // so, we have to make sure to remove it when we have a valid error code\n        delete xhr.responseJSON.errorCauses;\n      }\n    }\n  }\n\n  return xhr;\n}; // Simple helper function to lowercase all strings in the given array\n\n\nUtil.toLower = function (strings) {\n  return oktaUnderscore.map(strings, function (str) {\n    return str.toLowerCase();\n  });\n}; // A languageCode can be composed of multiple parts, i.e:\n// {{language}}-{{region}}-{{dialect}}\n//\n// In these cases, it's necessary to generate a list of other possible\n// combinations that we might support (in preferred order).\n//\n// For example:\n// en-US -> [en-US, en]\n// de-DE-bavarian -> [de-DE-bavarian, de-DE, de]\n\n\nfunction expandLanguage(language) {\n  const expanded = [language];\n  const parts = language.split('-');\n\n  while (parts.pop() && parts.length > 0) {\n    expanded.push(parts.join('-'));\n  }\n\n  return expanded;\n} // Following the rules of expanding one language, this will generate\n// all potential languages in the given order (where higher priority is\n// given to expanded languages over other downstream languages).\n\n\nUtil.expandLanguages = function (languages) {\n  return oktaUnderscore.chain(languages).map(expandLanguage).flatten().uniq().value();\n}; //helper to call setTimeout\n\n\nUtil.callAfterTimeout = function (callback, time) {\n  return setTimeout(callback, time);\n}; // Helper function to provide consistent formatting of template literals\n// that are logged when in development mode.\n\n\nUtil.debugMessage = function (message) {\n};\n\nUtil.logConsoleError = function (message) {\n  Logger.error(message);\n}; // Trigger an afterError event\n\n\nUtil.triggerAfterError = function (controller, err = {}) {\n  if (!err.statusCode && err.xhr && err.xhr.status) {\n    // Bring the statusCode to the top-level of the Error\n    err.statusCode = err.xhr.status;\n  } // Some controllers return the className as a function - process it here:\n\n\n  const className = oktaUnderscore.isFunction(controller.className) ? controller.className() : controller.className;\n\n  const error = oktaUnderscore.pick(err, 'name', 'message', 'statusCode', 'xhr');\n\n  controller.trigger('afterError', {\n    controller: className\n  }, error); // Logs to console only in dev mode\n};\n\nUtil.redirect = function (url, win = window, isAppLink = false) {\n  if (!url) {\n    Logger.error(`Cannot redirect to empty URL: (${url})`);\n    return;\n  }\n\n  if (fn.isAndroid() && !isAppLink) {\n    Util.redirectWithFormGet(url);\n  } else {\n    win.location.href = url;\n  }\n};\n/**\n * Why redirect via Form get rather using `window.location.href`?\n * At the time of writing, Chrome (<72) in Android would block window location change\n * at following case\n * 1. An AJAX is trigger because of user action.\n * 2. 5+ seconds passed without any further user interaction.\n * 3. User takes an action results in window location change.\n *\n * Luckily we discovered that uses Form submit would work around this problem\n * even though it changed window location.\n *\n * Check the commit history for more details.\n */\n\n\nUtil.redirectWithFormGet = function (url) {\n  Util.redirectWithForm(url, 'get');\n};\n\nUtil.redirectWithForm = function (url, method = 'post') {\n  if (!url) {\n    Logger.error(`Cannot redirect to empty URL: (${url})`);\n    return;\n  }\n\n  const mainContainer = document.getElementById(Enums.WIDGET_CONTAINER_ID);\n\n  if (!mainContainer) {\n    Logger.error('Cannot find okta-sign-in container append to which a form');\n    return;\n  }\n\n  const form = buildDynamicForm(url, method);\n  mainContainer.appendChild(form);\n  form.querySelector('input[type=\"submit\"]').click();\n};\n/**\n * When we want to show an explain text, we need to check if this is different from\n * the label text, to not have an explain that look like a duplicated label.\n * okta-signin-widget gives the possibility to customize every i18n, so we cannot\n * know ahead if these two are equal or different, we need to call this function everytime.\n */\n\n\nUtil.createInputExplain = function (explainKey, labelKey, bundleName, explainParams, labelParams) {\n  const explain = explainParams ? loc(explainKey, bundleName, explainParams) : loc(explainKey, bundleName);\n  const label = labelParams ? loc(labelKey, bundleName, labelParams) : loc(labelKey, bundleName);\n\n  if (explain === label) {\n    return false;\n  }\n\n  return explain;\n};\n\nUtil.isV1StateToken = function (token) {\n  return !!(token && oktaUnderscore.isString(token) && token.startsWith('00'));\n};\n\nexport { Util as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}