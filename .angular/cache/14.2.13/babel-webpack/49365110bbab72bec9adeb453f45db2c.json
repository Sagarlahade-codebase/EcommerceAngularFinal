{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getOAuthUrls } from './oauth.js';\nfunction createOAuthMeta(sdk, tokenParams) {\n  const issuer = sdk.options.issuer;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId,\n    redirectUri: tokenParams.redirectUri,\n    responseType: tokenParams.responseType,\n    responseMode: tokenParams.responseMode,\n    scopes: tokenParams.scopes,\n    state: tokenParams.state,\n    nonce: tokenParams.nonce,\n    ignoreSignature: tokenParams.ignoreSignature\n  };\n  if (tokenParams.pkce === false) {\n    return oauthMeta;\n  }\n  const pkceMeta = Object.assign(Object.assign({}, oauthMeta), {\n    codeVerifier: tokenParams.codeVerifier,\n    codeChallengeMethod: tokenParams.codeChallengeMethod,\n    codeChallenge: tokenParams.codeChallenge\n  });\n  return pkceMeta;\n}\nexport { createOAuthMeta };","map":{"version":3,"names":["getOAuthUrls","createOAuthMeta","sdk","tokenParams","issuer","options","urls","oauthMeta","clientId","redirectUri","responseType","responseMode","scopes","state","nonce","ignoreSignature","pkce","pkceMeta","Object","assign","codeVerifier","codeChallengeMethod","codeChallenge"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/util/oauthMeta.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { getOAuthUrls } from './oauth.js';\n\nfunction createOAuthMeta(sdk, tokenParams) {\n    const issuer = sdk.options.issuer;\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const oauthMeta = {\n        issuer,\n        urls,\n        clientId: tokenParams.clientId,\n        redirectUri: tokenParams.redirectUri,\n        responseType: tokenParams.responseType,\n        responseMode: tokenParams.responseMode,\n        scopes: tokenParams.scopes,\n        state: tokenParams.state,\n        nonce: tokenParams.nonce,\n        ignoreSignature: tokenParams.ignoreSignature,\n    };\n    if (tokenParams.pkce === false) {\n        return oauthMeta;\n    }\n    const pkceMeta = Object.assign(Object.assign({}, oauthMeta), { codeVerifier: tokenParams.codeVerifier, codeChallengeMethod: tokenParams.codeChallengeMethod, codeChallenge: tokenParams.codeChallenge });\n    return pkceMeta;\n}\n\nexport { createOAuthMeta };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,YAAY,QAAQ,YAAY;AAEzC,SAASC,eAAeA,CAACC,GAAG,EAAEC,WAAW,EAAE;EACvC,MAAMC,MAAM,GAAGF,GAAG,CAACG,OAAO,CAACD,MAAM;EACjC,MAAME,IAAI,GAAGN,YAAY,CAACE,GAAG,EAAEC,WAAW,CAAC;EAC3C,MAAMI,SAAS,GAAG;IACdH,MAAM;IACNE,IAAI;IACJE,QAAQ,EAAEL,WAAW,CAACK,QAAQ;IAC9BC,WAAW,EAAEN,WAAW,CAACM,WAAW;IACpCC,YAAY,EAAEP,WAAW,CAACO,YAAY;IACtCC,YAAY,EAAER,WAAW,CAACQ,YAAY;IACtCC,MAAM,EAAET,WAAW,CAACS,MAAM;IAC1BC,KAAK,EAAEV,WAAW,CAACU,KAAK;IACxBC,KAAK,EAAEX,WAAW,CAACW,KAAK;IACxBC,eAAe,EAAEZ,WAAW,CAACY;EACjC,CAAC;EACD,IAAIZ,WAAW,CAACa,IAAI,KAAK,KAAK,EAAE;IAC5B,OAAOT,SAAS;EACpB;EACA,MAAMU,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEZ,SAAS,CAAC,EAAE;IAAEa,YAAY,EAAEjB,WAAW,CAACiB,YAAY;IAAEC,mBAAmB,EAAElB,WAAW,CAACkB,mBAAmB;IAAEC,aAAa,EAAEnB,WAAW,CAACmB;EAAc,CAAC,CAAC;EACxM,OAAOL,QAAQ;AACnB;AAEA,SAAShB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}