{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport './types/api.js';\nimport './remediators/EnrollAuthenticator.js';\nimport './remediators/EnrollPoll.js';\nimport './remediators/SelectEnrollmentChannel.js';\nimport './remediators/EnrollmentChannelData.js';\nimport './remediators/ChallengeAuthenticator.js';\nimport './remediators/ChallengePoll.js';\nimport './remediators/ResetAuthenticator.js';\nimport './remediators/EnrollProfile.js';\nimport './remediators/Identify.js';\nimport './remediators/ReEnrollAuthenticator.js';\nimport './remediators/RedirectIdp.js';\nimport './remediators/SelectAuthenticatorAuthenticate.js';\nimport './remediators/SelectAuthenticatorEnroll.js';\nimport './remediators/SelectAuthenticatorUnlockAccount.js';\nimport './remediators/SelectEnrollProfile.js';\nimport './remediators/AuthenticatorVerificationData.js';\nimport './remediators/AuthenticatorEnrollmentData.js';\nimport './remediators/Skip.js';\nimport { getFlowSpecification } from './flow/FlowSpecification.js';\nfunction recoverPassword(_x) {\n  return _recoverPassword.apply(this, arguments);\n}\nfunction _recoverPassword() {\n  _recoverPassword = _asyncToGenerator(function* (authClient, options = {}) {\n    const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n    return run(authClient, Object.assign(Object.assign({}, options), flowSpec));\n  });\n  return _recoverPassword.apply(this, arguments);\n}\nexport { recoverPassword };","map":{"version":3,"names":["run","getFlowSpecification","recoverPassword","_x","_recoverPassword","apply","arguments","_asyncToGenerator","authClient","options","flowSpec","Object","assign"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/recoverPassword.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport './types/api.js';\nimport './remediators/EnrollAuthenticator.js';\nimport './remediators/EnrollPoll.js';\nimport './remediators/SelectEnrollmentChannel.js';\nimport './remediators/EnrollmentChannelData.js';\nimport './remediators/ChallengeAuthenticator.js';\nimport './remediators/ChallengePoll.js';\nimport './remediators/ResetAuthenticator.js';\nimport './remediators/EnrollProfile.js';\nimport './remediators/Identify.js';\nimport './remediators/ReEnrollAuthenticator.js';\nimport './remediators/RedirectIdp.js';\nimport './remediators/SelectAuthenticatorAuthenticate.js';\nimport './remediators/SelectAuthenticatorEnroll.js';\nimport './remediators/SelectAuthenticatorUnlockAccount.js';\nimport './remediators/SelectEnrollProfile.js';\nimport './remediators/AuthenticatorVerificationData.js';\nimport './remediators/AuthenticatorEnrollmentData.js';\nimport './remediators/Skip.js';\nimport { getFlowSpecification } from './flow/FlowSpecification.js';\n\nasync function recoverPassword(authClient, options = {}) {\n    const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n    return run(authClient, Object.assign(Object.assign({}, options), flowSpec));\n}\n\nexport { recoverPassword };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,QAAQ,UAAU;AAC9B,OAAO,gBAAgB;AACvB,OAAO,sCAAsC;AAC7C,OAAO,6BAA6B;AACpC,OAAO,0CAA0C;AACjD,OAAO,wCAAwC;AAC/C,OAAO,yCAAyC;AAChD,OAAO,gCAAgC;AACvC,OAAO,qCAAqC;AAC5C,OAAO,gCAAgC;AACvC,OAAO,2BAA2B;AAClC,OAAO,wCAAwC;AAC/C,OAAO,8BAA8B;AACrC,OAAO,kDAAkD;AACzD,OAAO,4CAA4C;AACnD,OAAO,mDAAmD;AAC1D,OAAO,sCAAsC;AAC7C,OAAO,gDAAgD;AACvD,OAAO,8CAA8C;AACrD,OAAO,uBAAuB;AAC9B,SAASC,oBAAoB,QAAQ,6BAA6B;AAAC,SAEpDC,eAAeA,CAAAC,EAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAG,iBAAA,CAA9B,WAA+BC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACrD,MAAMC,QAAQ,GAAGT,oBAAoB,CAACO,UAAU,EAAE,iBAAiB,CAAC;IACpE,OAAOR,GAAG,CAACQ,UAAU,EAAEG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,OAAO,CAAC,EAAEC,QAAQ,CAAC,CAAC;EAC/E,CAAC;EAAA,OAAAN,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASJ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}