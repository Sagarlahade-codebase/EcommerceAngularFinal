{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../idx/types/api.js';\nimport { isIDToken, isAccessToken } from '../types/Token.js';\nimport '../myaccount/types.js';\nimport { getWithoutPrompt } from './getWithoutPrompt.js';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh.js';\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError('Renew must be passed a token with an array of scopes and an accessToken or idToken');\n}\nfunction getSingleToken(originalToken, tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\nfunction renewToken(_x, _x2) {\n  return _renewToken.apply(this, arguments);\n}\nfunction _renewToken() {\n  _renewToken = _asyncToGenerator(function* (sdk, token) {\n    if (!isIDToken(token) && !isAccessToken(token)) {\n      throwInvalidTokenError();\n    }\n    let tokens = sdk.tokenManager.getTokensSync();\n    if (tokens.refreshToken) {\n      tokens = yield renewTokensWithRefresh(sdk, {\n        scopes: token.scopes\n      }, tokens.refreshToken);\n      return getSingleToken(token, tokens);\n    }\n    var responseType;\n    if (sdk.options.pkce) {\n      responseType = 'code';\n    } else if (isAccessToken(token)) {\n      responseType = 'token';\n    } else {\n      responseType = 'id_token';\n    }\n    const {\n      scopes,\n      authorizeUrl,\n      userinfoUrl,\n      issuer\n    } = token;\n    return getWithoutPrompt(sdk, {\n      responseType,\n      scopes,\n      authorizeUrl,\n      userinfoUrl,\n      issuer\n    }).then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n  });\n  return _renewToken.apply(this, arguments);\n}\nexport { renewToken };","map":{"version":3,"names":["AuthSdkError","isIDToken","isAccessToken","getWithoutPrompt","renewTokensWithRefresh","throwInvalidTokenError","getSingleToken","originalToken","tokens","idToken","accessToken","renewToken","_x","_x2","_renewToken","apply","arguments","_asyncToGenerator","sdk","token","tokenManager","getTokensSync","refreshToken","scopes","responseType","options","pkce","authorizeUrl","userinfoUrl","issuer","then","res"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/renewToken.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../idx/types/api.js';\nimport { isIDToken, isAccessToken } from '../types/Token.js';\nimport '../myaccount/types.js';\nimport { getWithoutPrompt } from './getWithoutPrompt.js';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh.js';\n\nfunction throwInvalidTokenError() {\n    throw new AuthSdkError('Renew must be passed a token with an array of scopes and an accessToken or idToken');\n}\nfunction getSingleToken(originalToken, tokens) {\n    if (isIDToken(originalToken)) {\n        return tokens.idToken;\n    }\n    if (isAccessToken(originalToken)) {\n        return tokens.accessToken;\n    }\n    throwInvalidTokenError();\n}\nasync function renewToken(sdk, token) {\n    if (!isIDToken(token) && !isAccessToken(token)) {\n        throwInvalidTokenError();\n    }\n    let tokens = sdk.tokenManager.getTokensSync();\n    if (tokens.refreshToken) {\n        tokens = await renewTokensWithRefresh(sdk, {\n            scopes: token.scopes,\n        }, tokens.refreshToken);\n        return getSingleToken(token, tokens);\n    }\n    var responseType;\n    if (sdk.options.pkce) {\n        responseType = 'code';\n    }\n    else if (isAccessToken(token)) {\n        responseType = 'token';\n    }\n    else {\n        responseType = 'id_token';\n    }\n    const { scopes, authorizeUrl, userinfoUrl, issuer } = token;\n    return getWithoutPrompt(sdk, {\n        responseType,\n        scopes,\n        authorizeUrl,\n        userinfoUrl,\n        issuer\n    })\n        .then(function (res) {\n        return getSingleToken(token, res.tokens);\n    });\n}\n\nexport { renewToken };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,OAAO,qBAAqB;AAC5B,SAASC,SAAS,EAAEC,aAAa,QAAQ,mBAAmB;AAC5D,OAAO,uBAAuB;AAC9B,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,sBAAsB,QAAQ,6BAA6B;AAEpE,SAASC,sBAAsBA,CAAA,EAAG;EAC9B,MAAM,IAAIL,YAAY,CAAC,oFAAoF,CAAC;AAChH;AACA,SAASM,cAAcA,CAACC,aAAa,EAAEC,MAAM,EAAE;EAC3C,IAAIP,SAAS,CAACM,aAAa,CAAC,EAAE;IAC1B,OAAOC,MAAM,CAACC,OAAO;EACzB;EACA,IAAIP,aAAa,CAACK,aAAa,CAAC,EAAE;IAC9B,OAAOC,MAAM,CAACE,WAAW;EAC7B;EACAL,sBAAsB,CAAC,CAAC;AAC5B;AAAC,SACcM,UAAUA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,GAAG,EAAEC,KAAK,EAAE;IAClC,IAAI,CAAClB,SAAS,CAACkB,KAAK,CAAC,IAAI,CAACjB,aAAa,CAACiB,KAAK,CAAC,EAAE;MAC5Cd,sBAAsB,CAAC,CAAC;IAC5B;IACA,IAAIG,MAAM,GAAGU,GAAG,CAACE,YAAY,CAACC,aAAa,CAAC,CAAC;IAC7C,IAAIb,MAAM,CAACc,YAAY,EAAE;MACrBd,MAAM,SAASJ,sBAAsB,CAACc,GAAG,EAAE;QACvCK,MAAM,EAAEJ,KAAK,CAACI;MAClB,CAAC,EAAEf,MAAM,CAACc,YAAY,CAAC;MACvB,OAAOhB,cAAc,CAACa,KAAK,EAAEX,MAAM,CAAC;IACxC;IACA,IAAIgB,YAAY;IAChB,IAAIN,GAAG,CAACO,OAAO,CAACC,IAAI,EAAE;MAClBF,YAAY,GAAG,MAAM;IACzB,CAAC,MACI,IAAItB,aAAa,CAACiB,KAAK,CAAC,EAAE;MAC3BK,YAAY,GAAG,OAAO;IAC1B,CAAC,MACI;MACDA,YAAY,GAAG,UAAU;IAC7B;IACA,MAAM;MAAED,MAAM;MAAEI,YAAY;MAAEC,WAAW;MAAEC;IAAO,CAAC,GAAGV,KAAK;IAC3D,OAAOhB,gBAAgB,CAACe,GAAG,EAAE;MACzBM,YAAY;MACZD,MAAM;MACNI,YAAY;MACZC,WAAW;MACXC;IACJ,CAAC,CAAC,CACGC,IAAI,CAAC,UAAUC,GAAG,EAAE;MACrB,OAAOzB,cAAc,CAACa,KAAK,EAAEY,GAAG,CAACvB,MAAM,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EAAA,OAAAM,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}