{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticationFlow } from './AuthenticationFlow.js';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow.js';\nimport { RegistrationFlow } from './RegistrationFlow.js';\nimport { AccountUnlockFlow } from './AccountUnlockFlow.js';\nfunction getFlowSpecification(oktaAuth, flow = 'default') {\n  let remediators,\n    actions,\n    withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = ['currentAuthenticator-recover', 'currentAuthenticatorEnrollment-recover'];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = ['unlock-account'];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return {\n    flow,\n    remediators,\n    actions,\n    withCredentials\n  };\n}\nexport { getFlowSpecification };","map":{"version":3,"names":["AuthenticationFlow","PasswordRecoveryFlow","RegistrationFlow","AccountUnlockFlow","getFlowSpecification","oktaAuth","flow","remediators","actions","withCredentials"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/flow/FlowSpecification.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticationFlow } from './AuthenticationFlow.js';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow.js';\nimport { RegistrationFlow } from './RegistrationFlow.js';\nimport { AccountUnlockFlow } from './AccountUnlockFlow.js';\n\nfunction getFlowSpecification(oktaAuth, flow = 'default') {\n    let remediators, actions, withCredentials = true;\n    switch (flow) {\n        case 'register':\n        case 'signup':\n        case 'enrollProfile':\n            remediators = RegistrationFlow;\n            withCredentials = false;\n            break;\n        case 'recoverPassword':\n        case 'resetPassword':\n            remediators = PasswordRecoveryFlow;\n            actions = [\n                'currentAuthenticator-recover',\n                'currentAuthenticatorEnrollment-recover'\n            ];\n            withCredentials = false;\n            break;\n        case 'unlockAccount':\n            remediators = AccountUnlockFlow;\n            withCredentials = false;\n            actions = [\n                'unlock-account'\n            ];\n            break;\n        case 'authenticate':\n        case 'login':\n        case 'signin':\n            remediators = AuthenticationFlow;\n            break;\n        default:\n            remediators = AuthenticationFlow;\n            break;\n    }\n    return { flow, remediators, actions, withCredentials };\n}\n\nexport { getFlowSpecification };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,iBAAiB,QAAQ,wBAAwB;AAE1D,SAASC,oBAAoBA,CAACC,QAAQ,EAAEC,IAAI,GAAG,SAAS,EAAE;EACtD,IAAIC,WAAW;IAAEC,OAAO;IAAEC,eAAe,GAAG,IAAI;EAChD,QAAQH,IAAI;IACR,KAAK,UAAU;IACf,KAAK,QAAQ;IACb,KAAK,eAAe;MAChBC,WAAW,GAAGL,gBAAgB;MAC9BO,eAAe,GAAG,KAAK;MACvB;IACJ,KAAK,iBAAiB;IACtB,KAAK,eAAe;MAChBF,WAAW,GAAGN,oBAAoB;MAClCO,OAAO,GAAG,CACN,8BAA8B,EAC9B,wCAAwC,CAC3C;MACDC,eAAe,GAAG,KAAK;MACvB;IACJ,KAAK,eAAe;MAChBF,WAAW,GAAGJ,iBAAiB;MAC/BM,eAAe,GAAG,KAAK;MACvBD,OAAO,GAAG,CACN,gBAAgB,CACnB;MACD;IACJ,KAAK,cAAc;IACnB,KAAK,OAAO;IACZ,KAAK,QAAQ;MACTD,WAAW,GAAGP,kBAAkB;MAChC;IACJ;MACIO,WAAW,GAAGP,kBAAkB;MAChC;EACR;EACA,OAAO;IAAEM,IAAI;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAgB,CAAC;AAC1D;AAEA,SAASL,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module"}