{"ast":null,"code":"import { Form, createButton, loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport TextBox from '../shared/TextBox.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction addInlineTotp(form) {\n  form.addDivider();\n  form.addInput({\n    label: loc('mfa.challenge.enterCode.placeholder', 'login'),\n    'label-top': true,\n    className: 'o-form-fieldset o-form-label-top inline-input auth-passcode',\n    name: 'answer',\n    input: TextBox,\n    type: 'tel'\n  });\n  form.add(createButton({\n    attributes: {\n      'data-se': 'inline-totp-verify'\n    },\n    className: 'button inline-totp-verify margin-top-30',\n    title: loc('mfa.challenge.verify', 'login'),\n    click: function () {\n      form.clearErrors();\n      if (!form.isValid()) {\n        return;\n      }\n      form.model.manageTransaction(function (transaction, setTransaction) {\n        // This is the case where we enter the TOTP code and verify while there is an\n        // active Push request (or polling) running. We need to invoke previous() on authClient\n        // and then call model.save(). If not, we would still be in MFA_CHALLENGE state and\n        // verify would result in a wrong request (push verify instead of a TOTP verify).\n        if (transaction.status === 'MFA_CHALLENGE' && transaction.prev) {\n          form.options.appState.set('trapMfaRequiredResponse', true);\n          return transaction.prev().then(function (trans) {\n            setTransaction(trans);\n            form.model.save();\n          });\n        } else {\n          // Push is not active and we enter the code to verify.\n          form.model.save();\n        }\n      });\n    }\n  }));\n  form.at(1).focus();\n}\nvar InlineTOTPForm = Form.extend({\n  autoSave: true,\n  noButtonBar: true,\n  scrollOnError: false,\n  layout: 'o-form-theme',\n  className: 'mfa-verify-totp-inline',\n  attributes: {\n    'data-se': 'factor-inline-totp'\n  },\n  initialize: function () {\n    const form = this;\n    this.listenTo(this.model, 'error', function () {\n      this.clearErrors();\n    });\n    this.add(createButton({\n      className: 'link',\n      attributes: {\n        'data-se': 'inline-totp-add'\n      },\n      title: loc('mfa.challenge.orEnterCode', 'login'),\n      click: function () {\n        this.remove();\n        addInlineTotp(form);\n      }\n    }));\n  }\n});\nexport { InlineTOTPForm as default };","map":{"version":3,"names":["Form","createButton","loc","TextBox","addInlineTotp","form","addDivider","addInput","label","className","name","input","type","add","attributes","title","click","clearErrors","isValid","model","manageTransaction","transaction","setTransaction","status","prev","options","appState","set","then","trans","save","at","focus","InlineTOTPForm","extend","autoSave","noButtonBar","scrollOnError","layout","initialize","listenTo","remove","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/views/mfa-verify/InlineTOTPForm.js"],"sourcesContent":["import { Form, createButton, loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport TextBox from '../shared/TextBox.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction addInlineTotp(form) {\n  form.addDivider();\n  form.addInput({\n    label: loc('mfa.challenge.enterCode.placeholder', 'login'),\n    'label-top': true,\n    className: 'o-form-fieldset o-form-label-top inline-input auth-passcode',\n    name: 'answer',\n    input: TextBox,\n    type: 'tel'\n  });\n  form.add(createButton({\n    attributes: {\n      'data-se': 'inline-totp-verify'\n    },\n    className: 'button inline-totp-verify margin-top-30',\n    title: loc('mfa.challenge.verify', 'login'),\n    click: function () {\n      form.clearErrors();\n\n      if (!form.isValid()) {\n        return;\n      }\n\n      form.model.manageTransaction(function (transaction, setTransaction) {\n        // This is the case where we enter the TOTP code and verify while there is an\n        // active Push request (or polling) running. We need to invoke previous() on authClient\n        // and then call model.save(). If not, we would still be in MFA_CHALLENGE state and\n        // verify would result in a wrong request (push verify instead of a TOTP verify).\n        if (transaction.status === 'MFA_CHALLENGE' && transaction.prev) {\n          form.options.appState.set('trapMfaRequiredResponse', true);\n          return transaction.prev().then(function (trans) {\n            setTransaction(trans);\n            form.model.save();\n          });\n        } else {\n          // Push is not active and we enter the code to verify.\n          form.model.save();\n        }\n      });\n    }\n  }));\n  form.at(1).focus();\n}\n\nvar InlineTOTPForm = Form.extend({\n  autoSave: true,\n  noButtonBar: true,\n  scrollOnError: false,\n  layout: 'o-form-theme',\n  className: 'mfa-verify-totp-inline',\n  attributes: {\n    'data-se': 'factor-inline-totp'\n  },\n  initialize: function () {\n    const form = this;\n    this.listenTo(this.model, 'error', function () {\n      this.clearErrors();\n    });\n    this.add(createButton({\n      className: 'link',\n      attributes: {\n        'data-se': 'inline-totp-add'\n      },\n      title: loc('mfa.challenge.orEnterCode', 'login'),\n      click: function () {\n        this.remove();\n        addInlineTotp(form);\n      }\n    }));\n  }\n});\n\nexport { InlineTOTPForm as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}