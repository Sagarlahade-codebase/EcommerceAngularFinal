{"ast":null,"code":"import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport fn from '../../../../util/CountryUtil.js';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView.js';\nconst Body = BaseForm.extend({\n  className: 'oie-enroll-ov-data',\n  title: function () {\n    return this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ? loc('oie.enroll.okta_verify.enroll.channel.email.title', 'login') : loc('oie.enroll.okta_verify.enroll.channel.sms.title', 'login');\n  },\n  save: function () {\n    return loc('oie.enroll.okta_verify.setupLink', 'login');\n  },\n  getUISchema: function () {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const phoneNumberUISchema = oktaUnderscore.find(uiSchemas, ({\n      name: name\n    }) => name === 'phoneNumber');\n    const phoneNumberUISchemaIndex = oktaUnderscore.findIndex(uiSchemas, ({\n      name: name\n    }) => name === 'phoneNumber');\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('country.label', 'login'),\n      type: 'select',\n      options: fn.getCountries(),\n      name: 'country',\n      wide: true\n    }; // Create an input group - serves as a display wrapper\n\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      input: [{\n        type: 'label',\n        /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n        label: `+${this.model.get('phoneCode')}`,\n        className: 'country-code-label no-translate'\n      }, Object.assign({}, phoneNumberUISchema)]\n    };\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema and add countryUISchema before phone.\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, countryUISchema, phoneNumberWithCodeUISchema);\n    }\n    const description = {\n      View: this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ? loc('oie.enroll.okta_verify.channel.email.description', 'login') : loc('oie.enroll.okta_verify.channel.sms.description', 'login'),\n      selector: '.o-form-fieldset-container'\n    };\n    uiSchemas.push(description);\n    return uiSchemas;\n  },\n  handlePhoneCodeChange: function () {\n    const countryCodeField = this.el.querySelector('.country-code-label');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'sms') {\n      this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n    }\n  }\n});\nvar EnrollementChannelDataOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel !== 'sms') {\n      return ModelClass;\n    }\n    const local = Object.assign({\n      country: {\n        // Set default country to \"US\"\n        'value': 'US',\n        'type': 'string'\n      }\n    }, ModelClass.prototype.local);\n    const derived = Object.assign({\n      phoneCode: {\n        deps: ['country'],\n        fn: function (country) {\n          return fn.getCallingCodeForCountry(country);\n        }\n      }\n    }, ModelClass.prototype.derived);\n    return ModelClass.extend({\n      local: local,\n      derived: derived,\n      toJSON: function () {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const phoneCode = this.get('phoneCode'); // Add country code..\n\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.phoneNumber}`; // Override phone with formatted number..\n\n        modelJSON.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      }\n    });\n  },\n  postRender: function () {\n    this.add(SwitchEnrollChannelLinkView, 'form');\n  }\n});\nexport { EnrollementChannelDataOktaVerifyView as default };","map":{"version":3,"names":["loc","oktaUnderscore","Model","BaseForm","BaseView","BaseAuthenticatorView","fn","SwitchEnrollChannelLinkView","Body","extend","className","title","options","appState","get","contextualData","selectedChannel","save","getUISchema","uiSchemas","prototype","apply","arguments","phoneNumberUISchema","find","name","phoneNumberUISchemaIndex","findIndex","countryUISchema","label","type","getCountries","wide","phoneNumberWithCodeUISchema","modelType","input","model","Object","assign","splice","description","View","selector","push","handlePhoneCodeChange","countryCodeField","el","querySelector","innerText","initialize","listenTo","bind","EnrollementChannelDataOktaVerifyView","createModelClass","ModelClass","local","country","derived","phoneCode","deps","getCallingCodeForCountry","toJSON","modelJSON","call","formattedPhoneNumber","phoneNumber","postRender","add","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/ov/EnrollementChannelDataOktaVerifyView.js"],"sourcesContent":["import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport BaseForm from '../../internals/BaseForm.js';\nimport '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../util/FactorUtil.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport fn from '../../../../util/CountryUtil.js';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView.js';\n\nconst Body = BaseForm.extend({\n  className: 'oie-enroll-ov-data',\n  title: function () {\n    return this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ? loc('oie.enroll.okta_verify.enroll.channel.email.title', 'login') : loc('oie.enroll.okta_verify.enroll.channel.sms.title', 'login');\n  },\n  save: function () {\n    return loc('oie.enroll.okta_verify.setupLink', 'login');\n  },\n  getUISchema: function () {\n    const uiSchemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n\n    const phoneNumberUISchema = oktaUnderscore.find(uiSchemas, ({\n      name: name\n    }) => name === 'phoneNumber');\n\n    const phoneNumberUISchemaIndex = oktaUnderscore.findIndex(uiSchemas, ({\n      name: name\n    }) => name === 'phoneNumber');\n\n    const countryUISchema = {\n      'label-top': true,\n      label: loc('country.label', 'login'),\n      type: 'select',\n      options: fn.getCountries(),\n      name: 'country',\n      wide: true\n    }; // Create an input group - serves as a display wrapper\n\n    const phoneNumberWithCodeUISchema = {\n      label: loc('mfa.phoneNumber.placeholder', 'login'),\n      type: 'group',\n      modelType: 'string',\n      'label-top': true,\n      name: 'phoneCode',\n      input: [{\n        type: 'label',\n\n        /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n        label: `+${this.model.get('phoneCode')}`,\n        className: 'country-code-label no-translate'\n      }, Object.assign({}, phoneNumberUISchema)]\n    };\n\n    if (phoneNumberUISchemaIndex !== -1) {\n      // Replace phoneNumberUISchema and add countryUISchema before phone.\n      uiSchemas.splice(phoneNumberUISchemaIndex, 1, countryUISchema, phoneNumberWithCodeUISchema);\n    }\n\n    const description = {\n      View: this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'email' ? loc('oie.enroll.okta_verify.channel.email.description', 'login') : loc('oie.enroll.okta_verify.channel.sms.description', 'login'),\n      selector: '.o-form-fieldset-container'\n    };\n    uiSchemas.push(description);\n    return uiSchemas;\n  },\n  handlePhoneCodeChange: function () {\n    const countryCodeField = this.el.querySelector('.country-code-label');\n    countryCodeField.innerText = `+${this.model.get('phoneCode')}`;\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'sms') {\n      this.listenTo(this.model, 'change:phoneCode', this.handlePhoneCodeChange.bind(this));\n    }\n  }\n});\nvar EnrollementChannelDataOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments);\n\n    if (this.options.appState.get('currentAuthenticator').contextualData.selectedChannel !== 'sms') {\n      return ModelClass;\n    }\n\n    const local = Object.assign({\n      country: {\n        // Set default country to \"US\"\n        'value': 'US',\n        'type': 'string'\n      }\n    }, ModelClass.prototype.local);\n    const derived = Object.assign({\n      phoneCode: {\n        deps: ['country'],\n        fn: function (country) {\n          return fn.getCallingCodeForCountry(country);\n        }\n      }\n    }, ModelClass.prototype.derived);\n    return ModelClass.extend({\n      local: local,\n      derived: derived,\n      toJSON: function () {\n        const modelJSON = Model.prototype.toJSON.call(this, arguments);\n        const phoneCode = this.get('phoneCode'); // Add country code..\n\n        let formattedPhoneNumber = `+${phoneCode}${modelJSON.phoneNumber}`; // Override phone with formatted number..\n\n        modelJSON.phoneNumber = formattedPhoneNumber;\n        return modelJSON;\n      }\n    });\n  },\n  postRender: function () {\n    this.add(SwitchEnrollChannelLinkView, 'form');\n  }\n});\n\nexport { EnrollementChannelDataOktaVerifyView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}