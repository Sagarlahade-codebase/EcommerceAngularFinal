{"ast":null,"code":"import EnrollUser from '../models/EnrollUser.js';\nimport BaseLoginController from '../util/BaseLoginController.js';\nimport EnrollUserForm from '../views/enrollUser/EnrollUserForm.js';\nimport FooterWithBackLink from '../views/shared/FooterWithBackLink.js';\n\n/*!\n * Copyright (c) 2019, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar EnrollUserController = BaseLoginController.extend({\n  className: 'enroll-user',\n  initialize: function (options) {\n    this.options = options || {}; // create model\n\n    this.model = new EnrollUser(this.options);\n  },\n  fetchInitialData: function () {\n    // If user is unauthenticated and starts enroll flow make a post call to transition state to PROFILE_REQUIRED\n    if (this.options.appState.get('isUnauthenticated')) {\n      return this.model.getEnrollFormData();\n    } else {\n      return BaseLoginController.prototype.fetchInitialData.call();\n    }\n  },\n  trapAuthResponse: function () {\n    if (this.options.appState.get('isProfileRequired')) {\n      return true;\n    }\n  },\n  postRender: function () {\n    const form = new EnrollUserForm(this.toJSON());\n    this.add(form);\n    this.add(new FooterWithBackLink(this.toJSON()));\n    this.addListeners();\n  }\n});\nexport { EnrollUserController as default };","map":{"version":3,"names":["EnrollUser","BaseLoginController","EnrollUserForm","FooterWithBackLink","EnrollUserController","extend","className","initialize","options","model","fetchInitialData","appState","get","getEnrollFormData","prototype","call","trapAuthResponse","postRender","form","toJSON","add","addListeners","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/EnrollUserController.js"],"sourcesContent":["import EnrollUser from '../models/EnrollUser.js';\nimport BaseLoginController from '../util/BaseLoginController.js';\nimport EnrollUserForm from '../views/enrollUser/EnrollUserForm.js';\nimport FooterWithBackLink from '../views/shared/FooterWithBackLink.js';\n\n/*!\n * Copyright (c) 2019, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar EnrollUserController = BaseLoginController.extend({\n  className: 'enroll-user',\n  initialize: function (options) {\n    this.options = options || {}; // create model\n\n    this.model = new EnrollUser(this.options);\n  },\n  fetchInitialData: function () {\n    // If user is unauthenticated and starts enroll flow make a post call to transition state to PROFILE_REQUIRED\n    if (this.options.appState.get('isUnauthenticated')) {\n      return this.model.getEnrollFormData();\n    } else {\n      return BaseLoginController.prototype.fetchInitialData.call();\n    }\n  },\n  trapAuthResponse: function () {\n    if (this.options.appState.get('isProfileRequired')) {\n      return true;\n    }\n  },\n  postRender: function () {\n    const form = new EnrollUserForm(this.toJSON());\n    this.add(form);\n    this.add(new FooterWithBackLink(this.toJSON()));\n    this.addListeners();\n  }\n});\n\nexport { EnrollUserController as default };\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,yBAAyB;AAChD,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAOC,kBAAkB,MAAM,uCAAuC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,oBAAoB,GAAGH,mBAAmB,CAACI,MAAM,CAAC;EACpDC,SAAS,EAAE,aAAa;EACxBC,UAAU,EAAE,SAAAA,CAAUC,OAAO,EAAE;IAC7B,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;;IAE9B,IAAI,CAACC,KAAK,GAAG,IAAIT,UAAU,CAAC,IAAI,CAACQ,OAAO,CAAC;EAC3C,CAAC;EACDE,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B;IACA,IAAI,IAAI,CAACF,OAAO,CAACG,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;MAClD,OAAO,IAAI,CAACH,KAAK,CAACI,iBAAiB,CAAC,CAAC;IACvC,CAAC,MAAM;MACL,OAAOZ,mBAAmB,CAACa,SAAS,CAACJ,gBAAgB,CAACK,IAAI,CAAC,CAAC;IAC9D;EACF,CAAC;EACDC,gBAAgB,EAAE,SAAAA,CAAA,EAAY;IAC5B,IAAI,IAAI,CAACR,OAAO,CAACG,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;MAClD,OAAO,IAAI;IACb;EACF,CAAC;EACDK,UAAU,EAAE,SAAAA,CAAA,EAAY;IACtB,MAAMC,IAAI,GAAG,IAAIhB,cAAc,CAAC,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC;IAC9C,IAAI,CAACC,GAAG,CAACF,IAAI,CAAC;IACd,IAAI,CAACE,GAAG,CAAC,IAAIjB,kBAAkB,CAAC,IAAI,CAACgB,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAI,CAACE,YAAY,CAAC,CAAC;EACrB;AACF,CAAC,CAAC;AAEF,SAASjB,oBAAoB,IAAIkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}