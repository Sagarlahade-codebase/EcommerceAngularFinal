{"ast":null,"code":"import oktaUnderscore from '../util/underscore-wrapper.js';\nimport BaseCollection from './BaseCollection.js';\nimport BaseModel from './BaseModel.js';\nimport SchemaProperty from './SchemaProperty.js';\nconst parseProperties = function (resp) {\n  const schemaMeta = oktaUnderscore.pick(resp, 'id', 'name', 'displayName');\n  const properties = oktaUnderscore.map(resp.schema.properties, function (property, name) {\n    return oktaUnderscore.extend({\n      name: name\n    }, property);\n  });\n  oktaUnderscore.each(properties, function (property) {\n    property['__schemaMeta__'] = schemaMeta;\n    if (property.__metadata) {\n      property['__metadata__'] = property.__metadata;\n      delete property.__metadata;\n    }\n  });\n  return properties;\n};\nconst BaseSchemaSchema = BaseModel.extend({\n  defaults: {\n    id: undefined,\n    displayName: undefined,\n    name: undefined\n  },\n  constructor: function () {\n    this.properties = new SchemaProperty.Collection();\n    BaseModel.apply(this, arguments);\n  },\n  getProperties: function () {\n    return this.properties;\n  },\n  clone: function () {\n    const model = BaseModel.prototype.clone.apply(this, arguments);\n    model.getProperties().set(this.getProperties().toJSON({\n      verbose: true\n    }));\n    return model;\n  },\n  parse: function (resp) {\n    const properties = parseProperties(resp);\n    this.properties.set(properties, {\n      parse: true\n    });\n    return oktaUnderscore.omit(resp, 'schema');\n  },\n  trimProperty: function (property) {\n    return oktaUnderscore.omit(property, 'name');\n  },\n  toJSON: function () {\n    const json = BaseModel.prototype.toJSON.apply(this, arguments);\n    json.schema = {\n      properties: {}\n    };\n    this.getProperties().each(function (model) {\n      const property = model.toJSON();\n      json.schema.properties[property.name] = this.trimProperty(property);\n    }, this);\n    return json;\n  },\n  save: function () {\n    this.getProperties().each(function (model) {\n      model.cleanup();\n    });\n    return BaseModel.prototype.save.apply(this, arguments);\n  }\n});\nconst BaseSchemaSchemas = BaseCollection.extend({\n  model: BaseSchemaSchema\n});\nvar BaseSchema = {\n  parseProperties: parseProperties,\n  Model: BaseSchemaSchema,\n  Collection: BaseSchemaSchemas\n};\nexport { BaseSchema as default };","map":{"version":3,"names":["oktaUnderscore","BaseCollection","BaseModel","SchemaProperty","parseProperties","resp","schemaMeta","pick","properties","map","schema","property","name","extend","each","__metadata","BaseSchemaSchema","defaults","id","undefined","displayName","constructor","Collection","apply","arguments","getProperties","clone","model","prototype","set","toJSON","verbose","parse","omit","trimProperty","json","save","cleanup","BaseSchemaSchemas","BaseSchema","Model","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/models/BaseSchema.js"],"sourcesContent":["import oktaUnderscore from '../util/underscore-wrapper.js';\nimport BaseCollection from './BaseCollection.js';\nimport BaseModel from './BaseModel.js';\nimport SchemaProperty from './SchemaProperty.js';\n\nconst parseProperties = function (resp) {\n  const schemaMeta = oktaUnderscore.pick(resp, 'id', 'name', 'displayName');\n  const properties = oktaUnderscore.map(resp.schema.properties, function (property, name) {\n    return oktaUnderscore.extend({\n      name: name\n    }, property);\n  });\n  oktaUnderscore.each(properties, function (property) {\n    property['__schemaMeta__'] = schemaMeta;\n\n    if (property.__metadata) {\n      property['__metadata__'] = property.__metadata;\n      delete property.__metadata;\n    }\n  });\n  return properties;\n};\n\nconst BaseSchemaSchema = BaseModel.extend({\n  defaults: {\n    id: undefined,\n    displayName: undefined,\n    name: undefined\n  },\n  constructor: function () {\n    this.properties = new SchemaProperty.Collection();\n    BaseModel.apply(this, arguments);\n  },\n  getProperties: function () {\n    return this.properties;\n  },\n  clone: function () {\n    const model = BaseModel.prototype.clone.apply(this, arguments);\n    model.getProperties().set(this.getProperties().toJSON({\n      verbose: true\n    }));\n    return model;\n  },\n  parse: function (resp) {\n    const properties = parseProperties(resp);\n    this.properties.set(properties, {\n      parse: true\n    });\n    return oktaUnderscore.omit(resp, 'schema');\n  },\n  trimProperty: function (property) {\n    return oktaUnderscore.omit(property, 'name');\n  },\n  toJSON: function () {\n    const json = BaseModel.prototype.toJSON.apply(this, arguments);\n    json.schema = {\n      properties: {}\n    };\n    this.getProperties().each(function (model) {\n      const property = model.toJSON();\n      json.schema.properties[property.name] = this.trimProperty(property);\n    }, this);\n    return json;\n  },\n  save: function () {\n    this.getProperties().each(function (model) {\n      model.cleanup();\n    });\n    return BaseModel.prototype.save.apply(this, arguments);\n  }\n});\nconst BaseSchemaSchemas = BaseCollection.extend({\n  model: BaseSchemaSchema\n});\nvar BaseSchema = {\n  parseProperties: parseProperties,\n  Model: BaseSchemaSchema,\n  Collection: BaseSchemaSchemas\n};\n\nexport { BaseSchema as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}