{"ast":null,"code":"import { Controller, Form } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Q from 'q';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction getForm(controller) {\n  return oktaUnderscore.find(controller.getChildren(), function (item) {\n    return item instanceof Form;\n  });\n}\nvar BaseLoginController = Controller.extend({\n  // Ideally we should be attaching the listeners in the constructor, but because of the way\n  // we construct the FormController (this.model is generated after the BaseLoginController's\n  // constructor is called), this.model is undefined in when try to attach the events and\n  // therefore we don't listen to events for such forms. And changing the order in which we call\n  // the constructor doesn't help either (JS errors etc.). This at least guarantees that we\n  // are listening to the model events.\n  // Note - Figure out a way to call the constructor in the right order.\n  addListeners: function () {\n    // Events to enable/disable the primary button on the forms\n    this.listenTo(this.model, 'save', function () {\n      const form = getForm(this); //disable the submit button on forms while making the request\n      //to prevent users from hitting rate limiting exceptions of\n      //1 per second on the auth api\n\n      const disableSubmitButton = form.disableSubmitButton;\n      if (disableSubmitButton && !form.disableSubmitButton()) {\n        return;\n      }\n      this.toggleButtonState(true);\n    });\n    this.listenTo(this.model, 'error', function () {\n      this.toggleButtonState(false);\n    });\n    this.addModelListeners(this.model);\n  },\n  addModelListeners: function (model) {\n    const setTransactionHandler = transaction => {\n      this.options.appState.set('transaction', transaction);\n    };\n    const transactionErrorHandler = err => {\n      this.options.appState.set('transactionError', err);\n    }; // Events to set the transaction attributes on the app state.\n\n    this.listenTo(model, 'setTransaction', setTransactionHandler);\n    this.listenTo(model, 'setTransactionError', transactionErrorHandler); // For TOTP factor model\n    // TOTP model is special, its model will not be attached to a controller, but will\n    // tag along with the push factor model. We need to listen to the transaction\n    // changes on this as well (in case of the push+totp form).\n\n    const totpModel = model.get('backupFactor');\n    if (totpModel) {\n      this.listenTo(totpModel, 'setTransaction', setTransactionHandler);\n      this.listenTo(totpModel, 'setTransactionError', transactionErrorHandler);\n    }\n  },\n  // Override this method to delay switching to this screen until return\n  // promise is resolved. This is useful for cases like enrolling a security\n  // question, which requires an additional request to fetch the question\n  // list.\n  fetchInitialData: function () {\n    return Q();\n  },\n  // Override this method to prevent route navigation. This is useful for\n  // intermediate status changes that do not trigger a full refresh of the\n  // page, like MFA_ENROLL_ACTIVATE and MFA_CHALLENGE.\n  trapAuthResponse: function () {\n    return false;\n  },\n  toJSON: function () {\n    const data = Controller.prototype.toJSON.apply(this, arguments);\n    return oktaUnderscore.extend(oktaUnderscore.pick(this.options, 'appState'), data);\n  },\n  toggleButtonState: function (state) {\n    const button = this.$el.find('.button');\n    button.toggleClass('link-button-disabled', state).prop('disabled', state);\n  },\n  postRenderAnimation: function () {\n    // Event triggered after a page is rendered along with the classname to identify the page\n    // TODO: Deprecate this event in the next major version in favor of 'afterRender'\n    this.trigger('pageRendered', {\n      page: this.className\n    });\n    this.trigger('afterRender', {\n      controller: this.className\n    });\n  }\n});\nexport { BaseLoginController as default };","map":{"version":3,"names":["Controller","Form","oktaUnderscore","Q","getForm","controller","find","getChildren","item","BaseLoginController","extend","addListeners","listenTo","model","form","disableSubmitButton","toggleButtonState","addModelListeners","setTransactionHandler","transaction","options","appState","set","transactionErrorHandler","err","totpModel","get","fetchInitialData","trapAuthResponse","toJSON","data","prototype","apply","arguments","pick","state","button","$el","toggleClass","prop","postRenderAnimation","trigger","page","className","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/util/BaseLoginController.js"],"sourcesContent":["import { Controller, Form } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport Q from 'q';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nfunction getForm(controller) {\n  return oktaUnderscore.find(controller.getChildren(), function (item) {\n    return item instanceof Form;\n  });\n}\n\nvar BaseLoginController = Controller.extend({\n  // Ideally we should be attaching the listeners in the constructor, but because of the way\n  // we construct the FormController (this.model is generated after the BaseLoginController's\n  // constructor is called), this.model is undefined in when try to attach the events and\n  // therefore we don't listen to events for such forms. And changing the order in which we call\n  // the constructor doesn't help either (JS errors etc.). This at least guarantees that we\n  // are listening to the model events.\n  // Note - Figure out a way to call the constructor in the right order.\n  addListeners: function () {\n    // Events to enable/disable the primary button on the forms\n    this.listenTo(this.model, 'save', function () {\n      const form = getForm(this); //disable the submit button on forms while making the request\n      //to prevent users from hitting rate limiting exceptions of\n      //1 per second on the auth api\n\n      const disableSubmitButton = form.disableSubmitButton;\n\n      if (disableSubmitButton && !form.disableSubmitButton()) {\n        return;\n      }\n\n      this.toggleButtonState(true);\n    });\n    this.listenTo(this.model, 'error', function () {\n      this.toggleButtonState(false);\n    });\n    this.addModelListeners(this.model);\n  },\n  addModelListeners: function (model) {\n    const setTransactionHandler = transaction => {\n      this.options.appState.set('transaction', transaction);\n    };\n\n    const transactionErrorHandler = err => {\n      this.options.appState.set('transactionError', err);\n    }; // Events to set the transaction attributes on the app state.\n\n\n    this.listenTo(model, 'setTransaction', setTransactionHandler);\n    this.listenTo(model, 'setTransactionError', transactionErrorHandler); // For TOTP factor model\n    // TOTP model is special, its model will not be attached to a controller, but will\n    // tag along with the push factor model. We need to listen to the transaction\n    // changes on this as well (in case of the push+totp form).\n\n    const totpModel = model.get('backupFactor');\n\n    if (totpModel) {\n      this.listenTo(totpModel, 'setTransaction', setTransactionHandler);\n      this.listenTo(totpModel, 'setTransactionError', transactionErrorHandler);\n    }\n  },\n  // Override this method to delay switching to this screen until return\n  // promise is resolved. This is useful for cases like enrolling a security\n  // question, which requires an additional request to fetch the question\n  // list.\n  fetchInitialData: function () {\n    return Q();\n  },\n  // Override this method to prevent route navigation. This is useful for\n  // intermediate status changes that do not trigger a full refresh of the\n  // page, like MFA_ENROLL_ACTIVATE and MFA_CHALLENGE.\n  trapAuthResponse: function () {\n    return false;\n  },\n  toJSON: function () {\n    const data = Controller.prototype.toJSON.apply(this, arguments);\n    return oktaUnderscore.extend(oktaUnderscore.pick(this.options, 'appState'), data);\n  },\n  toggleButtonState: function (state) {\n    const button = this.$el.find('.button');\n    button.toggleClass('link-button-disabled', state).prop('disabled', state);\n  },\n  postRenderAnimation: function () {\n    // Event triggered after a page is rendered along with the classname to identify the page\n    // TODO: Deprecate this event in the next major version in favor of 'afterRender'\n    this.trigger('pageRendered', {\n      page: this.className\n    });\n    this.trigger('afterRender', {\n      controller: this.className\n    });\n  }\n});\n\nexport { BaseLoginController as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}