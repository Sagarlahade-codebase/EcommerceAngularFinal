{"ast":null,"code":"import _Handlebars2 from '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, internal } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport config from '../config/config.json.js';\nimport Q from 'q';\nimport fn from '../util/BrowserFeatures.js';\nimport { ConfigError, UnsupportedBrowserError } from '../util/Errors.js';\nimport IDP from '../util/IDP.js';\nimport Logger from '../util/Logger.js';\nimport Util from '../util/Util.js';\nimport fn$1 from '../util/CountryUtil.js';\nconst SharedUtil = internal.util.Util;\nconst assetBaseUrlTpl = _Handlebars2.template({\n  \"compiler\": [8, \">= 4.3.0\"],\n  \"main\": function (container, depth0, helpers, partials, data) {\n    var helper,\n      lookupProperty = container.lookupProperty || function (parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined;\n      };\n    return \"https://global.oktacdn.com/okta-signin-widget/\" + container.escapeExpression((helper = (helper = lookupProperty(helpers, \"version\") || (depth0 != null ? lookupProperty(depth0, \"version\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n      \"name\": \"version\",\n      \"hash\": {},\n      \"data\": data,\n      \"loc\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 46\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 57\n        }\n      }\n    }) : helper));\n  },\n  \"useData\": true\n});\nconst local = {\n  baseUrl: ['string', true],\n  recoveryToken: ['string', false, undefined],\n  stateToken: ['string', false, undefined],\n  username: ['string', false],\n  relayState: ['string', false],\n  // These two settings are aliases. Setting either value will set `backToSignInUri` \n  signOutLink: ['string', false],\n  // for backward compatibility\n  backToSignInLink: ['string', false],\n  // preferred setting\n  redirect: {\n    type: 'string',\n    values: ['never', 'always', 'auto'],\n    value: 'auto'\n  },\n  // allows bootstrapping the Widget into a specific view such\n  // as register or forgot password\n  flow: ['string', false, 'default'],\n  // Function to transform the username before passing it to the API\n  // for Primary Auth, Forgot Password and Unlock Account.\n  transformUsername: ['function', false],\n  // CALLBACKS\n  globalSuccessFn: 'function',\n  globalErrorFn: 'function',\n  processCreds: 'function',\n  hooks: 'object',\n  // IMAGES\n  logo: 'string',\n  logoText: ['string', false],\n  helpSupportNumber: 'string',\n  // <OIE>\n  // attribute to hold proxy (fake) idx response\n  // to render static pages without initiating idx pipeline\n  proxyIdxResponse: ['object', false],\n  // <OIE>\n  // By default, state handle will be saved to session storage\n  // and will be clear when terminal error or success redirect.\n  // Set this flag to true if you want to override this behavior.\n  // a.k.a dishonor the state handle stored in session storage.\n  overrideExistingStateToken: ['boolean', false, false],\n  // FEATURES\n  'features.router': ['boolean', true, false],\n  'features.securityImage': ['boolean', true, false],\n  'features.rememberMe': ['boolean', true, true],\n  'features.autoPush': ['boolean', true, false],\n  'features.smsRecovery': ['boolean', true, false],\n  'features.callRecovery': ['boolean', true, false],\n  'features.emailRecovery': ['boolean', false, true],\n  'features.webauthn': ['boolean', true, false],\n  'features.selfServiceUnlock': ['boolean', true, false],\n  'features.multiOptionalFactorEnroll': ['boolean', true, false],\n  'features.deviceFingerprinting': ['boolean', false, false],\n  'features.hideSignOutLinkInMFA': ['boolean', false, false],\n  'features.skipIdpFactorVerificationBtn': ['boolean', false, false],\n  'features.hideBackToSignInForReset': ['boolean', false, false],\n  'features.customExpiredPassword': ['boolean', true, false],\n  'features.registration': ['boolean', false, false],\n  'features.idpDiscovery': ['boolean', false, false],\n  'features.passwordlessAuth': ['boolean', false, false],\n  'features.showPasswordToggleOnSignInPage': ['boolean', false, false],\n  'features.trackTypingPattern': ['boolean', false, false],\n  'features.redirectByFormSubmit': ['boolean', false, false],\n  'features.useDeviceFingerprintForSecurityImage': ['boolean', false, true],\n  'features.showPasswordRequirementsAsHtmlList': ['boolean', false, false],\n  'features.mfaOnlyFlow': ['boolean', false, false],\n  'features.scrollOnError': ['boolean', false, true],\n  'features.showKeepMeSignedIn': ['boolean', false, true],\n  'features.showIdentifier': ['boolean', false, true],\n  'features.autoFocus': ['boolean', false, true],\n  'features.rememberMyUsernameOnOIE': ['boolean', false, false],\n  defaultCountryCode: ['string', false, 'US'],\n  // I18N\n  language: ['any', false],\n  // Can be a string or a function\n  i18n: ['object', false],\n  // ASSETS\n  'assets.baseUrl': ['string', false],\n  'assets.rewrite': {\n    type: 'function',\n    value: oktaUnderscore.identity\n  },\n  'assets.languages': ['array', false],\n  // OAUTH2\n  issuer: 'string',\n  clientId: 'string',\n  redirectUri: 'string',\n  state: 'string',\n  nonce: 'string',\n  scopes: 'array',\n  codeChallenge: 'string',\n  codeChallengeMethod: ['string', false],\n  oAuthTimeout: ['number', false],\n  authScheme: ['string', false, 'OAUTH2'],\n  // External IdPs\n  idps: ['array', false, []],\n  idpDisplay: {\n    type: 'string',\n    values: ['PRIMARY', 'SECONDARY'],\n    value: 'SECONDARY'\n  },\n  // HELP LINKS\n  'helpLinks.help': 'string',\n  'helpLinks.forgotPassword': 'string',\n  'helpLinks.unlock': 'string',\n  'helpLinks.custom': 'array',\n  'helpLinks.factorPage.href': 'string',\n  'helpLinks.factorPage.text': 'string',\n  //Custom Buttons\n  customButtons: ['array', false, []],\n  //Registration\n  policyId: 'string',\n  'registration.click': 'function',\n  'registration.parseSchema': 'function',\n  'registration.preSubmit': 'function',\n  'registration.postSubmit': 'function',\n  //Consent\n  'consent.cancel': 'function',\n  //IDP Discovery\n  'idpDiscovery.requestContext': 'string',\n  //Colors\n  'colors.brand': 'string',\n  //Descriptions\n  brandName: 'string',\n  //PIV\n  piv: ['object', false, {}],\n  //Email verify callback\n  otp: 'string'\n};\nconst derived = {\n  backToSignInUri: {\n    deps: ['backToSignInLink', 'signOutLink'],\n    fn: function (backToSignInLink, signOutLink) {\n      return backToSignInLink || signOutLink; // prefer backToSignInLink over signOutLink, but they are aliases\n    }\n  },\n  showPasswordToggle: {\n    deps: ['features.showPasswordToggleOnSignInPage'],\n    fn: function () {\n      var _this$options$feature, _this$options, _this$options$feature2, _this$options2;\n\n      // showPasswordToggle is for OIE only.\n      // Used to default showPasswordToggleOnSignInPage to true.\n      const defaultValue = true;\n      const customizedValue = (_this$options$feature = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$feature2 = _this$options.features) === null || _this$options$feature2 === void 0 ? void 0 : _this$options$feature2.showPasswordToggleOnSignInPage) !== null && _this$options$feature !== void 0 ? _this$options$feature : (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2['features.showPasswordToggleOnSignInPage'];\n      return customizedValue !== null && customizedValue !== void 0 ? customizedValue : defaultValue;\n    },\n    cache: true\n  },\n  redirectUtilFn: {\n    deps: ['features.redirectByFormSubmit'],\n    fn: function (redirectByFormSubmit) {\n      return redirectByFormSubmit ? Util.redirectWithFormGet.bind(Util) : SharedUtil.redirect.bind(SharedUtil);\n    },\n    cache: true\n  },\n  supportedLanguages: {\n    deps: ['i18n', 'language', 'assets.languages'],\n    fn: function (i18n, language, hostedLanguages) {\n      // By default, the language be automatically detected from the browser\n      // Developers can specify the language. It will be added to the supportedLanguages list.\n      // Developers can also provide a list of languages with hosted assets, these replace the default list\n      const supportedLanguages = hostedLanguages || config.supportedLanguages;\n      return oktaUnderscore.union(supportedLanguages, oktaUnderscore.keys(i18n), oktaUnderscore.isString(language) ? [language] : []);\n    },\n    cache: true\n  },\n  languageCode: {\n    deps: ['language', 'supportedLanguages'],\n    fn: function (language, supportedLanguages) {\n      const userLanguages = fn.getUserLanguages(); // TODO: revisit this fix - OKTA-491150\n\n      userLanguages.forEach((val, idx) => {\n        if (val === 'nl') {\n          userLanguages[idx] = 'nl-NL';\n        } else if (val === 'pt') {\n          userLanguages[idx] = 'pt-BR';\n        }\n      });\n      const preferred = oktaUnderscore.clone(userLanguages);\n      const supportedLowerCase = Util.toLower(supportedLanguages); // Any developer defined \"language\" takes highest priority:\n      // As a string, i.e. 'en', 'ja', 'zh-CN'\n\n      if (oktaUnderscore.isString(language)) {\n        preferred.unshift(language);\n      } else if (oktaUnderscore.isFunction(language)) {\n        // As a callback function, which is passed the list of supported\n        // languages and detected user languages. This function must return\n        // a languageCode, i.e. 'en', 'ja', 'zh-CN'\n        preferred.unshift(language(supportedLanguages, userLanguages));\n      } // Add default language, and expand to include any language\n      // codes that do not include region, dialect, etc.\n\n      preferred.push(config.defaultLanguage);\n      const expanded = Util.toLower(Util.expandLanguages(preferred)); // Perform a case insensitive search - this is necessary in the case\n      // of browsers like Safari\n\n      let i;\n      let supportedPos;\n      for (i = 0; i < expanded.length; i++) {\n        supportedPos = supportedLowerCase.indexOf(expanded[i]);\n        if (supportedPos > -1) {\n          return supportedLanguages[supportedPos];\n        }\n      }\n    }\n  },\n  countryCode: {\n    deps: ['defaultCountryCode'],\n    fn: function (defaultCountryCode) {\n      const countries = fn$1.getCountries();\n      return Object.keys(countries).includes(defaultCountryCode) ? defaultCountryCode : 'US';\n    }\n  },\n  mode: {\n    deps: ['useInteractionCodeFlow', 'codeChallenge'],\n    fn: function (useInteractionCodeFlow, codeChallenge) {\n      if (useInteractionCodeFlow && codeChallenge) {\n        return 'remediation';\n      }\n      return 'relying-party';\n    }\n  },\n  oauth2Enabled: {\n    deps: ['clientId', 'authScheme'],\n    fn: function (clientId, authScheme) {\n      return !!clientId && authScheme.toLowerCase() === 'oauth2';\n    },\n    cache: true\n  },\n  oieEnabled: {\n    deps: ['stateToken', 'proxyIdxResponse', 'useInteractionCodeFlow'],\n    fn: function (stateToken, proxyIdxResponse, useInteractionCodeFlow) {\n      return stateToken || proxyIdxResponse || useInteractionCodeFlow;\n    },\n    cache: true\n  },\n  // Redirect Uri to provide in the oauth API\n  oauthRedirectUri: {\n    deps: ['redirectUri'],\n    fn: function (redirectUri) {\n      if (redirectUri) {\n        return redirectUri;\n      }\n      let origin = window.location.origin; // IE8\n\n      if (!origin) {\n        const href = window.location.href;\n        const path = window.location.pathname;\n        if (path !== '') {\n          origin = href.substring(0, href.lastIndexOf(path));\n        }\n      }\n      return encodeURI(origin);\n    }\n  },\n  // Adjusts the idps passed into the widget based on if they get explicit support\n  configuredSocialIdps: {\n    deps: ['idps'],\n    fn: function (idps) {\n      return oktaUnderscore.map(idps, function (idpConfig) {\n        const idp = oktaUnderscore.clone(idpConfig);\n        let type = idp.type && idp.type.toLowerCase();\n        if (!(type && oktaUnderscore.contains(IDP.SUPPORTED_SOCIAL_IDPS, type))) {\n          type = 'general-idp';\n          idp.text = idp.text || '{ Please provide a text value }';\n        }\n        idp.className = ['social-auth-button', 'social-auth-' + type + '-button ', idp.className ? idp.className : ''].join(' ');\n        idp.dataAttr = 'social-auth-' + type + '-button';\n        idp.i18nKey = 'socialauth.' + type + '.label';\n        return idp;\n      });\n    },\n    cache: true\n  },\n  // Can support piv authentication\n  hasPivCard: {\n    deps: ['piv'],\n    fn: function (piv) {\n      return piv && piv.certAuthUrl;\n    },\n    cache: true\n  },\n  // social auth buttons order - 'above'/'below' the primary auth form (boolean)\n  socialAuthPositionTop: {\n    deps: ['configuredSocialIdps', 'hasPivCard', 'idpDisplay'],\n    fn: function (configuredSocialIdps, hasPivCard, idpDisplay) {\n      return (!oktaUnderscore.isEmpty(configuredSocialIdps) || hasPivCard) && idpDisplay.toUpperCase() === 'PRIMARY';\n    },\n    cache: true\n  },\n  hasConfiguredButtons: {\n    deps: ['configuredSocialIdps', 'customButtons', 'hasPivCard'],\n    fn: function (configuredSocialIdps, customButtons, hasPivCard) {\n      return !oktaUnderscore.isEmpty(configuredSocialIdps) || !oktaUnderscore.isEmpty(customButtons) || hasPivCard;\n    },\n    cache: true\n  }\n};\nclass Settings extends Model {\n  constructor(...args) {\n    super(...args);\n    this.authClient = void 0;\n  }\n  get(attributeName) {\n    return Model.prototype.get.call(this, attributeName);\n  }\n  preinitialize(...args) {\n    this.local = local;\n    this.derived = derived;\n    Model.prototype.preinitialize.apply(this, args);\n  }\n  initialize(options) {\n    const {\n      colors: colors\n    } = options;\n    let {\n      baseUrl: baseUrl\n    } = options;\n    if (!baseUrl) {\n      // infer baseUrl from the issuer\n      const {\n        authClient: authClient\n      } = options;\n      if (authClient) {\n        baseUrl = authClient.getIssuerOrigin();\n      } else {\n        var _issuer;\n\n        // issuer can be passed at top-level or in authParams\n        const {\n          authParams: authParams\n        } = options;\n        let {\n          issuer: issuer\n        } = options;\n        issuer = issuer || (authParams === null || authParams === void 0 ? void 0 : authParams.issuer);\n        baseUrl = (_issuer = issuer) === null || _issuer === void 0 ? void 0 : _issuer.split('/oauth2/')[0];\n      }\n      this.set('baseUrl', baseUrl);\n    }\n    if (!baseUrl) {\n      this.callGlobalError(new ConfigError(loc('error.required.baseUrl')));\n    } else if (colors && oktaUnderscore.isString(colors.brand) && !colors.brand.match(/^#[0-9A-Fa-f]{6}$/)) {\n      this.callGlobalError(new ConfigError(loc('error.invalid.colors.brand')));\n    } else if (fn.corsIsNotSupported()) {\n      this.callGlobalError(new UnsupportedBrowserError(loc('error.unsupported.cors')));\n    }\n  }\n  setAcceptLanguageHeader(authClient) {\n    if (authClient) {\n      authClient.http.setRequestHeader('Accept-Language', this.get('languageCode'));\n    }\n  }\n  setAuthClient(authClient) {\n    this.setAcceptLanguageHeader(authClient);\n    this.authClient = authClient;\n  }\n  getAuthClient() {\n    return this.authClient;\n  }\n  set(...args) {\n    try {\n      return Model.prototype.set.apply(this, args);\n    } catch (e) {\n      const message = e.message ? e.message : e;\n      this.callGlobalError(new ConfigError(message));\n    }\n  } // Invokes the global success function. This should only be called on a\n  // terminal part of the code (i.e. authStatus SUCCESS or after sending\n  // a recovery email)\n\n  callGlobalSuccess(status, data) {\n    const res = oktaUnderscore.extend(data, {\n      status: status\n    }); // Defer this to ensure that our functions have rendered completely\n    // before invoking their function\n\n    oktaUnderscore.defer(oktaUnderscore.partial(this.get('globalSuccessFn'), res));\n  } // Invokes the global error function. This should only be called on non\n  // recoverable errors (i.e. configuration errors, browser unsupported\n  // errors, etc)\n\n  callGlobalError(err) {\n    const globalErrorFn = this.get('globalErrorFn') || this.options.globalErrorFn; // Note: Must use \"this.options.globalErrorFn\" when they've passed invalid\n    // arguments - globalErrorFn will not have been set yet\n\n    if (globalErrorFn) {\n      globalErrorFn(err);\n    } else {\n      // Only throw the error if they have not registered a globalErrorFn\n      throw err;\n    }\n  } // Get the username by applying the transform function if it exists.\n\n  transformUsername(username, operation) {\n    const transformFn = this.get('transformUsername');\n    if (transformFn && oktaUnderscore.isFunction(transformFn)) {\n      return transformFn(username, operation);\n    }\n    return username;\n  }\n  processCreds(creds) {\n    const processCreds = this.get('processCreds');\n    return Q.Promise(function (resolve) {\n      if (!oktaUnderscore.isFunction(processCreds)) {\n        resolve();\n      } else if (processCreds.length === 2) {\n        processCreds(creds, resolve);\n      } else {\n        processCreds(creds);\n        resolve();\n      }\n    });\n  }\n  parseRegistrationSchema(schema, onSuccess, onFailure) {\n    const parseSchema = this.get('registration.parseSchema'); //check for parseSchema callback\n\n    if (oktaUnderscore.isFunction(parseSchema)) {\n      parseSchema(schema, function (schema) {\n        onSuccess(schema);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'parseSchema';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(schema);\n    }\n  }\n  preRegistrationSubmit(postData, onSuccess, onFailure) {\n    const preSubmit = this.get('registration.preSubmit'); //check for preSubmit callback\n\n    if (oktaUnderscore.isFunction(preSubmit)) {\n      preSubmit(postData, function (postData) {\n        onSuccess(postData);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'preSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(postData);\n    }\n  }\n  postRegistrationSubmit(response, onSuccess, onFailure) {\n    const postSubmit = this.get('registration.postSubmit'); //check for postSubmit callback\n\n    if (oktaUnderscore.isFunction(postSubmit)) {\n      postSubmit(response, function (response) {\n        onSuccess(response);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'postSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(response);\n    }\n  } // Use the parse function to transform config options to the standard\n  // settings we currently support. This is a good place to deprecate old\n  // option formats.\n\n  parse(options) {\n    if (options.labels || options.country) {\n      Logger.deprecate('Use \"i18n\" instead of \"labels\" and \"country\"');\n      const overrides = options.labels || {};\n      oktaUnderscore.each(options.country, function (val, key) {\n        overrides['country.' + key] = val;\n      }); // Old behavior is to treat the override as a global override, so we\n      // need to add these overrides to each language\n\n      options.i18n = {};\n      oktaUnderscore.each(config.supportedLanguages, function (language) {\n        options.i18n[language] = overrides;\n      });\n      delete options.labels;\n      delete options.country;\n    } // Default the assets.baseUrl to the cdn, or remove any trailing slashes\n\n    if (!options.assets) {\n      options.assets = {};\n    }\n    const abu = options.assets.baseUrl;\n    if (!abu) {\n      options.assets.baseUrl = assetBaseUrlTpl({\n        version: config.version\n      });\n    } else if (abu[abu.length - 1] === '/') {\n      options.assets.baseUrl = abu.substring(0, abu.length - 1);\n    }\n    return options;\n  }\n  isDsTheme() {\n    return false;\n  }\n}\nexport { Settings as default };","map":{"version":3,"names":["_Handlebars2","loc","internal","oktaUnderscore","Model","config","Q","fn","ConfigError","UnsupportedBrowserError","IDP","Logger","Util","fn$1","SharedUtil","util","assetBaseUrlTpl","template","main","container","depth0","helpers","partials","data","helper","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","undefined","escapeExpression","hooks","helperMissing","nullContext","local","baseUrl","recoveryToken","stateToken","username","relayState","signOutLink","backToSignInLink","redirect","type","values","value","flow","transformUsername","globalSuccessFn","globalErrorFn","processCreds","logo","logoText","helpSupportNumber","proxyIdxResponse","overrideExistingStateToken","defaultCountryCode","language","i18n","identity","issuer","clientId","redirectUri","state","nonce","scopes","codeChallenge","codeChallengeMethod","oAuthTimeout","authScheme","idps","idpDisplay","customButtons","policyId","brandName","piv","otp","derived","backToSignInUri","deps","showPasswordToggle","_this$options$feature","_this$options","_this$options$feature2","_this$options2","defaultValue","customizedValue","options","features","showPasswordToggleOnSignInPage","cache","redirectUtilFn","redirectByFormSubmit","redirectWithFormGet","bind","supportedLanguages","hostedLanguages","union","keys","isString","languageCode","userLanguages","getUserLanguages","forEach","val","idx","preferred","clone","supportedLowerCase","toLower","unshift","isFunction","push","defaultLanguage","expanded","expandLanguages","i","supportedPos","length","indexOf","countryCode","countries","getCountries","includes","mode","useInteractionCodeFlow","oauth2Enabled","toLowerCase","oieEnabled","oauthRedirectUri","origin","window","location","href","path","pathname","substring","lastIndexOf","encodeURI","configuredSocialIdps","map","idpConfig","idp","contains","SUPPORTED_SOCIAL_IDPS","text","className","join","dataAttr","i18nKey","hasPivCard","certAuthUrl","socialAuthPositionTop","isEmpty","toUpperCase","hasConfiguredButtons","Settings","constructor","args","authClient","get","attributeName","preinitialize","apply","initialize","colors","getIssuerOrigin","_issuer","authParams","split","set","callGlobalError","brand","match","corsIsNotSupported","setAcceptLanguageHeader","http","setRequestHeader","setAuthClient","getAuthClient","e","message","callGlobalSuccess","status","res","extend","defer","partial","err","operation","transformFn","creds","Promise","resolve","parseRegistrationSchema","schema","onSuccess","onFailure","parseSchema","error","errorSummary","preRegistrationSubmit","postData","preSubmit","postRegistrationSubmit","response","postSubmit","parse","labels","country","deprecate","overrides","each","key","assets","abu","version","isDsTheme","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/models/Settings.js"],"sourcesContent":["import _Handlebars2 from '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, internal } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport Model from '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport config from '../config/config.json.js';\nimport Q from 'q';\nimport fn from '../util/BrowserFeatures.js';\nimport { ConfigError, UnsupportedBrowserError } from '../util/Errors.js';\nimport IDP from '../util/IDP.js';\nimport Logger from '../util/Logger.js';\nimport Util from '../util/Util.js';\nimport fn$1 from '../util/CountryUtil.js';\n\nconst SharedUtil = internal.util.Util;\n\nconst assetBaseUrlTpl = _Handlebars2.template({\n  \"compiler\": [8, \">= 4.3.0\"],\n  \"main\": function (container, depth0, helpers, partials, data) {\n    var helper,\n        lookupProperty = container.lookupProperty || function (parent, propertyName) {\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return parent[propertyName];\n      }\n\n      return undefined;\n    };\n\n    return \"https://global.oktacdn.com/okta-signin-widget/\" + container.escapeExpression((helper = (helper = lookupProperty(helpers, \"version\") || (depth0 != null ? lookupProperty(depth0, \"version\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n      \"name\": \"version\",\n      \"hash\": {},\n      \"data\": data,\n      \"loc\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 46\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 57\n        }\n      }\n    }) : helper));\n  },\n  \"useData\": true\n});\n\nconst local = {\n  baseUrl: ['string', true],\n  recoveryToken: ['string', false, undefined],\n  stateToken: ['string', false, undefined],\n  username: ['string', false],\n  relayState: ['string', false],\n  // These two settings are aliases. Setting either value will set `backToSignInUri` \n  signOutLink: ['string', false],\n  // for backward compatibility\n  backToSignInLink: ['string', false],\n  // preferred setting\n  redirect: {\n    type: 'string',\n    values: ['never', 'always', 'auto'],\n    value: 'auto'\n  },\n  // allows bootstrapping the Widget into a specific view such\n  // as register or forgot password\n  flow: ['string', false, 'default'],\n  // Function to transform the username before passing it to the API\n  // for Primary Auth, Forgot Password and Unlock Account.\n  transformUsername: ['function', false],\n  // CALLBACKS\n  globalSuccessFn: 'function',\n  globalErrorFn: 'function',\n  processCreds: 'function',\n  hooks: 'object',\n  // IMAGES\n  logo: 'string',\n  logoText: ['string', false],\n  helpSupportNumber: 'string',\n  // <OIE>\n  // attribute to hold proxy (fake) idx response\n  // to render static pages without initiating idx pipeline\n  proxyIdxResponse: ['object', false],\n  // <OIE>\n  // By default, state handle will be saved to session storage\n  // and will be clear when terminal error or success redirect.\n  // Set this flag to true if you want to override this behavior.\n  // a.k.a dishonor the state handle stored in session storage.\n  overrideExistingStateToken: ['boolean', false, false],\n  // FEATURES\n  'features.router': ['boolean', true, false],\n  'features.securityImage': ['boolean', true, false],\n  'features.rememberMe': ['boolean', true, true],\n  'features.autoPush': ['boolean', true, false],\n  'features.smsRecovery': ['boolean', true, false],\n  'features.callRecovery': ['boolean', true, false],\n  'features.emailRecovery': ['boolean', false, true],\n  'features.webauthn': ['boolean', true, false],\n  'features.selfServiceUnlock': ['boolean', true, false],\n  'features.multiOptionalFactorEnroll': ['boolean', true, false],\n  'features.deviceFingerprinting': ['boolean', false, false],\n  'features.hideSignOutLinkInMFA': ['boolean', false, false],\n  'features.skipIdpFactorVerificationBtn': ['boolean', false, false],\n  'features.hideBackToSignInForReset': ['boolean', false, false],\n  'features.customExpiredPassword': ['boolean', true, false],\n  'features.registration': ['boolean', false, false],\n  'features.idpDiscovery': ['boolean', false, false],\n  'features.passwordlessAuth': ['boolean', false, false],\n  'features.showPasswordToggleOnSignInPage': ['boolean', false, false],\n  'features.trackTypingPattern': ['boolean', false, false],\n  'features.redirectByFormSubmit': ['boolean', false, false],\n  'features.useDeviceFingerprintForSecurityImage': ['boolean', false, true],\n  'features.showPasswordRequirementsAsHtmlList': ['boolean', false, false],\n  'features.mfaOnlyFlow': ['boolean', false, false],\n  'features.scrollOnError': ['boolean', false, true],\n  'features.showKeepMeSignedIn': ['boolean', false, true],\n  'features.showIdentifier': ['boolean', false, true],\n  'features.autoFocus': ['boolean', false, true],\n  'features.rememberMyUsernameOnOIE': ['boolean', false, false],\n  defaultCountryCode: ['string', false, 'US'],\n  // I18N\n  language: ['any', false],\n  // Can be a string or a function\n  i18n: ['object', false],\n  // ASSETS\n  'assets.baseUrl': ['string', false],\n  'assets.rewrite': {\n    type: 'function',\n    value: oktaUnderscore.identity\n  },\n  'assets.languages': ['array', false],\n  // OAUTH2\n  issuer: 'string',\n  clientId: 'string',\n  redirectUri: 'string',\n  state: 'string',\n  nonce: 'string',\n  scopes: 'array',\n  codeChallenge: 'string',\n  codeChallengeMethod: ['string', false],\n  oAuthTimeout: ['number', false],\n  authScheme: ['string', false, 'OAUTH2'],\n  // External IdPs\n  idps: ['array', false, []],\n  idpDisplay: {\n    type: 'string',\n    values: ['PRIMARY', 'SECONDARY'],\n    value: 'SECONDARY'\n  },\n  // HELP LINKS\n  'helpLinks.help': 'string',\n  'helpLinks.forgotPassword': 'string',\n  'helpLinks.unlock': 'string',\n  'helpLinks.custom': 'array',\n  'helpLinks.factorPage.href': 'string',\n  'helpLinks.factorPage.text': 'string',\n  //Custom Buttons\n  customButtons: ['array', false, []],\n  //Registration\n  policyId: 'string',\n  'registration.click': 'function',\n  'registration.parseSchema': 'function',\n  'registration.preSubmit': 'function',\n  'registration.postSubmit': 'function',\n  //Consent\n  'consent.cancel': 'function',\n  //IDP Discovery\n  'idpDiscovery.requestContext': 'string',\n  //Colors\n  'colors.brand': 'string',\n  //Descriptions\n  brandName: 'string',\n  //PIV\n  piv: ['object', false, {}],\n  //Email verify callback\n  otp: 'string'\n};\nconst derived = {\n  backToSignInUri: {\n    deps: ['backToSignInLink', 'signOutLink'],\n    fn: function (backToSignInLink, signOutLink) {\n      return backToSignInLink || signOutLink; // prefer backToSignInLink over signOutLink, but they are aliases\n    }\n  },\n  showPasswordToggle: {\n    deps: ['features.showPasswordToggleOnSignInPage'],\n    fn: function () {\n      var _this$options$feature, _this$options, _this$options$feature2, _this$options2;\n\n      // showPasswordToggle is for OIE only.\n      // Used to default showPasswordToggleOnSignInPage to true.\n      const defaultValue = true;\n      const customizedValue = (_this$options$feature = (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$feature2 = _this$options.features) === null || _this$options$feature2 === void 0 ? void 0 : _this$options$feature2.showPasswordToggleOnSignInPage) !== null && _this$options$feature !== void 0 ? _this$options$feature : (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2['features.showPasswordToggleOnSignInPage'];\n      return customizedValue !== null && customizedValue !== void 0 ? customizedValue : defaultValue;\n    },\n    cache: true\n  },\n  redirectUtilFn: {\n    deps: ['features.redirectByFormSubmit'],\n    fn: function (redirectByFormSubmit) {\n      return redirectByFormSubmit ? Util.redirectWithFormGet.bind(Util) : SharedUtil.redirect.bind(SharedUtil);\n    },\n    cache: true\n  },\n  supportedLanguages: {\n    deps: ['i18n', 'language', 'assets.languages'],\n    fn: function (i18n, language, hostedLanguages) {\n      // By default, the language be automatically detected from the browser\n      // Developers can specify the language. It will be added to the supportedLanguages list.\n      // Developers can also provide a list of languages with hosted assets, these replace the default list\n      const supportedLanguages = hostedLanguages || config.supportedLanguages;\n      return oktaUnderscore.union(supportedLanguages, oktaUnderscore.keys(i18n), oktaUnderscore.isString(language) ? [language] : []);\n    },\n    cache: true\n  },\n  languageCode: {\n    deps: ['language', 'supportedLanguages'],\n    fn: function (language, supportedLanguages) {\n      const userLanguages = fn.getUserLanguages(); // TODO: revisit this fix - OKTA-491150\n\n      userLanguages.forEach((val, idx) => {\n        if (val === 'nl') {\n          userLanguages[idx] = 'nl-NL';\n        } else if (val === 'pt') {\n          userLanguages[idx] = 'pt-BR';\n        }\n      });\n\n      const preferred = oktaUnderscore.clone(userLanguages);\n\n      const supportedLowerCase = Util.toLower(supportedLanguages); // Any developer defined \"language\" takes highest priority:\n      // As a string, i.e. 'en', 'ja', 'zh-CN'\n\n      if (oktaUnderscore.isString(language)) {\n        preferred.unshift(language);\n      } else if (oktaUnderscore.isFunction(language)) {\n        // As a callback function, which is passed the list of supported\n        // languages and detected user languages. This function must return\n        // a languageCode, i.e. 'en', 'ja', 'zh-CN'\n        preferred.unshift(language(supportedLanguages, userLanguages));\n      } // Add default language, and expand to include any language\n      // codes that do not include region, dialect, etc.\n\n\n      preferred.push(config.defaultLanguage);\n      const expanded = Util.toLower(Util.expandLanguages(preferred)); // Perform a case insensitive search - this is necessary in the case\n      // of browsers like Safari\n\n      let i;\n      let supportedPos;\n\n      for (i = 0; i < expanded.length; i++) {\n        supportedPos = supportedLowerCase.indexOf(expanded[i]);\n\n        if (supportedPos > -1) {\n          return supportedLanguages[supportedPos];\n        }\n      }\n    }\n  },\n  countryCode: {\n    deps: ['defaultCountryCode'],\n    fn: function (defaultCountryCode) {\n      const countries = fn$1.getCountries();\n      return Object.keys(countries).includes(defaultCountryCode) ? defaultCountryCode : 'US';\n    }\n  },\n  mode: {\n    deps: ['useInteractionCodeFlow', 'codeChallenge'],\n    fn: function (useInteractionCodeFlow, codeChallenge) {\n      if (useInteractionCodeFlow && codeChallenge) {\n        return 'remediation';\n      }\n\n      return 'relying-party';\n    }\n  },\n  oauth2Enabled: {\n    deps: ['clientId', 'authScheme'],\n    fn: function (clientId, authScheme) {\n      return !!clientId && authScheme.toLowerCase() === 'oauth2';\n    },\n    cache: true\n  },\n  oieEnabled: {\n    deps: ['stateToken', 'proxyIdxResponse', 'useInteractionCodeFlow'],\n    fn: function (stateToken, proxyIdxResponse, useInteractionCodeFlow) {\n      return stateToken || proxyIdxResponse || useInteractionCodeFlow;\n    },\n    cache: true\n  },\n  // Redirect Uri to provide in the oauth API\n  oauthRedirectUri: {\n    deps: ['redirectUri'],\n    fn: function (redirectUri) {\n      if (redirectUri) {\n        return redirectUri;\n      }\n\n      let origin = window.location.origin; // IE8\n\n      if (!origin) {\n        const href = window.location.href;\n        const path = window.location.pathname;\n\n        if (path !== '') {\n          origin = href.substring(0, href.lastIndexOf(path));\n        }\n      }\n\n      return encodeURI(origin);\n    }\n  },\n  // Adjusts the idps passed into the widget based on if they get explicit support\n  configuredSocialIdps: {\n    deps: ['idps'],\n    fn: function (idps) {\n      return oktaUnderscore.map(idps, function (idpConfig) {\n        const idp = oktaUnderscore.clone(idpConfig);\n\n        let type = idp.type && idp.type.toLowerCase();\n\n        if (!(type && oktaUnderscore.contains(IDP.SUPPORTED_SOCIAL_IDPS, type))) {\n          type = 'general-idp';\n          idp.text = idp.text || '{ Please provide a text value }';\n        }\n\n        idp.className = ['social-auth-button', 'social-auth-' + type + '-button ', idp.className ? idp.className : ''].join(' ');\n        idp.dataAttr = 'social-auth-' + type + '-button';\n        idp.i18nKey = 'socialauth.' + type + '.label';\n        return idp;\n      });\n    },\n    cache: true\n  },\n  // Can support piv authentication\n  hasPivCard: {\n    deps: ['piv'],\n    fn: function (piv) {\n      return piv && piv.certAuthUrl;\n    },\n    cache: true\n  },\n  // social auth buttons order - 'above'/'below' the primary auth form (boolean)\n  socialAuthPositionTop: {\n    deps: ['configuredSocialIdps', 'hasPivCard', 'idpDisplay'],\n    fn: function (configuredSocialIdps, hasPivCard, idpDisplay) {\n      return (!oktaUnderscore.isEmpty(configuredSocialIdps) || hasPivCard) && idpDisplay.toUpperCase() === 'PRIMARY';\n    },\n    cache: true\n  },\n  hasConfiguredButtons: {\n    deps: ['configuredSocialIdps', 'customButtons', 'hasPivCard'],\n    fn: function (configuredSocialIdps, customButtons, hasPivCard) {\n      return !oktaUnderscore.isEmpty(configuredSocialIdps) || !oktaUnderscore.isEmpty(customButtons) || hasPivCard;\n    },\n    cache: true\n  }\n};\nclass Settings extends Model {\n  constructor(...args) {\n    super(...args);\n    this.authClient = void 0;\n  }\n\n  get(attributeName) {\n    return Model.prototype.get.call(this, attributeName);\n  }\n\n  preinitialize(...args) {\n    this.local = local;\n    this.derived = derived;\n    Model.prototype.preinitialize.apply(this, args);\n  }\n\n  initialize(options) {\n    const {\n      colors: colors\n    } = options;\n    let {\n      baseUrl: baseUrl\n    } = options;\n\n    if (!baseUrl) {\n      // infer baseUrl from the issuer\n      const {\n        authClient: authClient\n      } = options;\n\n      if (authClient) {\n        baseUrl = authClient.getIssuerOrigin();\n      } else {\n        var _issuer;\n\n        // issuer can be passed at top-level or in authParams\n        const {\n          authParams: authParams\n        } = options;\n        let {\n          issuer: issuer\n        } = options;\n        issuer = issuer || (authParams === null || authParams === void 0 ? void 0 : authParams.issuer);\n        baseUrl = (_issuer = issuer) === null || _issuer === void 0 ? void 0 : _issuer.split('/oauth2/')[0];\n      }\n\n      this.set('baseUrl', baseUrl);\n    }\n\n    if (!baseUrl) {\n      this.callGlobalError(new ConfigError(loc('error.required.baseUrl')));\n    } else if (colors && oktaUnderscore.isString(colors.brand) && !colors.brand.match(/^#[0-9A-Fa-f]{6}$/)) {\n      this.callGlobalError(new ConfigError(loc('error.invalid.colors.brand')));\n    } else if (fn.corsIsNotSupported()) {\n      this.callGlobalError(new UnsupportedBrowserError(loc('error.unsupported.cors')));\n    }\n  }\n\n  setAcceptLanguageHeader(authClient) {\n    if (authClient) {\n      authClient.http.setRequestHeader('Accept-Language', this.get('languageCode'));\n    }\n  }\n\n  setAuthClient(authClient) {\n    this.setAcceptLanguageHeader(authClient);\n    this.authClient = authClient;\n  }\n\n  getAuthClient() {\n    return this.authClient;\n  }\n\n  set(...args) {\n    try {\n      return Model.prototype.set.apply(this, args);\n    } catch (e) {\n      const message = e.message ? e.message : e;\n      this.callGlobalError(new ConfigError(message));\n    }\n  } // Invokes the global success function. This should only be called on a\n  // terminal part of the code (i.e. authStatus SUCCESS or after sending\n  // a recovery email)\n\n\n  callGlobalSuccess(status, data) {\n    const res = oktaUnderscore.extend(data, {\n      status: status\n    }); // Defer this to ensure that our functions have rendered completely\n    // before invoking their function\n\n\n    oktaUnderscore.defer(oktaUnderscore.partial(this.get('globalSuccessFn'), res));\n  } // Invokes the global error function. This should only be called on non\n  // recoverable errors (i.e. configuration errors, browser unsupported\n  // errors, etc)\n\n\n  callGlobalError(err) {\n    const globalErrorFn = this.get('globalErrorFn') || this.options.globalErrorFn; // Note: Must use \"this.options.globalErrorFn\" when they've passed invalid\n    // arguments - globalErrorFn will not have been set yet\n\n    if (globalErrorFn) {\n      globalErrorFn(err);\n    } else {\n      // Only throw the error if they have not registered a globalErrorFn\n      throw err;\n    }\n  } // Get the username by applying the transform function if it exists.\n\n\n  transformUsername(username, operation) {\n    const transformFn = this.get('transformUsername');\n\n    if (transformFn && oktaUnderscore.isFunction(transformFn)) {\n      return transformFn(username, operation);\n    }\n\n    return username;\n  }\n\n  processCreds(creds) {\n    const processCreds = this.get('processCreds');\n    return Q.Promise(function (resolve) {\n      if (!oktaUnderscore.isFunction(processCreds)) {\n        resolve();\n      } else if (processCreds.length === 2) {\n        processCreds(creds, resolve);\n      } else {\n        processCreds(creds);\n        resolve();\n      }\n    });\n  }\n\n  parseRegistrationSchema(schema, onSuccess, onFailure) {\n    const parseSchema = this.get('registration.parseSchema'); //check for parseSchema callback\n\n    if (oktaUnderscore.isFunction(parseSchema)) {\n      parseSchema(schema, function (schema) {\n        onSuccess(schema);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'parseSchema';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(schema);\n    }\n  }\n\n  preRegistrationSubmit(postData, onSuccess, onFailure) {\n    const preSubmit = this.get('registration.preSubmit'); //check for preSubmit callback\n\n    if (oktaUnderscore.isFunction(preSubmit)) {\n      preSubmit(postData, function (postData) {\n        onSuccess(postData);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'preSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(postData);\n    }\n  }\n\n  postRegistrationSubmit(response, onSuccess, onFailure) {\n    const postSubmit = this.get('registration.postSubmit'); //check for postSubmit callback\n\n    if (oktaUnderscore.isFunction(postSubmit)) {\n      postSubmit(response, function (response) {\n        onSuccess(response);\n      }, function (error) {\n        error = error || {\n          errorSummary: loc('registration.default.callbackhook.error')\n        };\n        error['callback'] = 'postSubmit';\n        onFailure(error);\n      });\n    } else {\n      //no callback\n      onSuccess(response);\n    }\n  } // Use the parse function to transform config options to the standard\n  // settings we currently support. This is a good place to deprecate old\n  // option formats.\n\n\n  parse(options) {\n    if (options.labels || options.country) {\n      Logger.deprecate('Use \"i18n\" instead of \"labels\" and \"country\"');\n      const overrides = options.labels || {};\n\n      oktaUnderscore.each(options.country, function (val, key) {\n        overrides['country.' + key] = val;\n      }); // Old behavior is to treat the override as a global override, so we\n      // need to add these overrides to each language\n\n\n      options.i18n = {};\n\n      oktaUnderscore.each(config.supportedLanguages, function (language) {\n        options.i18n[language] = overrides;\n      });\n\n      delete options.labels;\n      delete options.country;\n    } // Default the assets.baseUrl to the cdn, or remove any trailing slashes\n\n\n    if (!options.assets) {\n      options.assets = {};\n    }\n\n    const abu = options.assets.baseUrl;\n\n    if (!abu) {\n      options.assets.baseUrl = assetBaseUrlTpl({\n        version: config.version\n      });\n    } else if (abu[abu.length - 1] === '/') {\n      options.assets.baseUrl = abu.substring(0, abu.length - 1);\n    }\n\n    return options;\n  }\n\n  isDsTheme() {\n    return false;\n  }\n\n}\n\nexport { Settings as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}