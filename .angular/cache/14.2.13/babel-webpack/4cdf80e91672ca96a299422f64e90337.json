{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\nimport '../myaccount/types.js';\nfunction register(_x) {\n  return _register.apply(this, arguments);\n}\nfunction _register() {\n  _register = _asyncToGenerator(function* (authClient, options = {}) {\n    if (!hasSavedInteractionHandle(authClient)) {\n      const {\n        enabledFeatures,\n        availableSteps\n      } = yield startTransaction(authClient, Object.assign(Object.assign({}, options), {\n        flow: 'register',\n        autoRemediate: false\n      }));\n      if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n        const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n        throw error;\n      }\n      if (options.activationToken && (availableSteps === null || availableSteps === void 0 ? void 0 : availableSteps.some(({\n        name\n      }) => name === 'identify'))) {\n        const error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n        throw error;\n      }\n    }\n    return run(authClient, Object.assign(Object.assign({}, options), {\n      flow: 'register'\n    }));\n  });\n  return _register.apply(this, arguments);\n}\nexport { register };","map":{"version":3,"names":["run","hasSavedInteractionHandle","startTransaction","AuthSdkError","IdxFeature","register","_x","_register","apply","arguments","_asyncToGenerator","authClient","options","enabledFeatures","availableSteps","Object","assign","flow","autoRemediate","activationToken","includes","REGISTRATION","error","some","name"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/register.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\nimport '../myaccount/types.js';\n\nasync function register(authClient, options = {}) {\n    if (!hasSavedInteractionHandle(authClient)) {\n        const { enabledFeatures, availableSteps } = await startTransaction(authClient, Object.assign(Object.assign({}, options), { flow: 'register', autoRemediate: false }));\n        if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n            const error = new AuthSdkError('Registration is not supported based on your current org configuration.');\n            throw error;\n        }\n        if (options.activationToken && (availableSteps === null || availableSteps === void 0 ? void 0 : availableSteps.some(({ name }) => name === 'identify'))) {\n            const error = new AuthSdkError('activationToken is not supported based on your current org configuration.');\n            throw error;\n        }\n    }\n    return run(authClient, Object.assign(Object.assign({}, options), { flow: 'register' }));\n}\n\nexport { register };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,yBAAyB,QAAQ,sBAAsB;AAChE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAO,uBAAuB;AAAC,SAEhBC,QAAQA,CAAAC,EAAA;EAAA,OAAAC,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,UAAA;EAAAA,SAAA,GAAAG,iBAAA,CAAvB,WAAwBC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9C,IAAI,CAACX,yBAAyB,CAACU,UAAU,CAAC,EAAE;MACxC,MAAM;QAAEE,eAAe;QAAEC;MAAe,CAAC,SAASZ,gBAAgB,CAACS,UAAU,EAAEI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,OAAO,CAAC,EAAE;QAAEK,IAAI,EAAE,UAAU;QAAEC,aAAa,EAAE;MAAM,CAAC,CAAC,CAAC;MACrK,IAAI,CAACN,OAAO,CAACO,eAAe,IAAIN,eAAe,IAAI,CAACA,eAAe,CAACO,QAAQ,CAAChB,UAAU,CAACiB,YAAY,CAAC,EAAE;QACnG,MAAMC,KAAK,GAAG,IAAInB,YAAY,CAAC,wEAAwE,CAAC;QACxG,MAAMmB,KAAK;MACf;MACA,IAAIV,OAAO,CAACO,eAAe,KAAKL,cAAc,KAAK,IAAI,IAAIA,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACS,IAAI,CAAC,CAAC;QAAEC;MAAK,CAAC,KAAKA,IAAI,KAAK,UAAU,CAAC,CAAC,EAAE;QACrJ,MAAMF,KAAK,GAAG,IAAInB,YAAY,CAAC,2EAA2E,CAAC;QAC3G,MAAMmB,KAAK;MACf;IACJ;IACA,OAAOtB,GAAG,CAACW,UAAU,EAAEI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,OAAO,CAAC,EAAE;MAAEK,IAAI,EAAE;IAAW,CAAC,CAAC,CAAC;EAC3F,CAAC;EAAA,OAAAV,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}