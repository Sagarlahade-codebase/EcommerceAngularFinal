{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport PCancelable from 'p-cancelable';\nimport AuthSdkError from './errors/AuthSdkError.js';\nimport './idx/types/api.js';\nimport { EVENT_ADDED, EVENT_REMOVED } from './types/TokenManager.js';\nimport { getConsole } from './util/console.js';\nimport './myaccount/types.js';\nimport PromiseQueue from './PromiseQueue.js';\nconst INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\nconst isSameAuthState = (prevState, state) => {\n  if (!prevState) {\n    return false;\n  }\n  return prevState.isAuthenticated === state.isAuthenticated && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken) && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken) && prevState.error === state.error;\n};\nclass AuthStateManager {\n  constructor(sdk) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n    this._sdk = sdk;\n    this._pending = Object.assign({}, DEFAULT_PENDING);\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({\n        event: EVENT_ADDED,\n        key,\n        token\n      });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({\n        event: EVENT_REMOVED,\n        key,\n        token\n      });\n      this.updateAuthState();\n    });\n  }\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n  getAuthState() {\n    return this._authState;\n  }\n  getPreviousAuthState() {\n    return this._prevAuthState;\n  }\n  updateAuthState() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        transformAuthState,\n        devMode\n      } = _this._sdk.options;\n      const log = status => {\n        const {\n          event,\n          key,\n          token\n        } = _this._logOptions;\n        getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n        getConsole().log(key, token);\n        getConsole().log('Current authState', _this._authState);\n        getConsole().groupEnd();\n        _this._logOptions = {};\n      };\n      const emitAuthStateChange = authState => {\n        if (isSameAuthState(_this._authState, authState)) {\n          devMode && log('unchanged');\n          return;\n        }\n        _this._prevAuthState = _this._authState;\n        _this._authState = authState;\n        _this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, Object.assign({}, authState));\n        devMode && log('emitted');\n      };\n      const finalPromise = origPromise => {\n        return _this._pending.updateAuthStatePromise.then(() => {\n          const curPromise = _this._pending.updateAuthStatePromise;\n          if (curPromise && curPromise !== origPromise) {\n            return finalPromise(curPromise);\n          }\n          return _this.getAuthState();\n        });\n      };\n      if (_this._pending.updateAuthStatePromise) {\n        if (_this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n          devMode && log('terminated');\n          return finalPromise(_this._pending.updateAuthStatePromise);\n        } else {\n          _this._pending.updateAuthStatePromise.cancel();\n        }\n      }\n      const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n        onCancel.shouldReject = false;\n        onCancel(() => {\n          _this._pending.updateAuthStatePromise = null;\n          _this._pending.canceledTimes = _this._pending.canceledTimes + 1;\n          devMode && log('canceled');\n        });\n        const emitAndResolve = authState => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n          emitAuthStateChange(authState);\n          resolve();\n          _this._pending = Object.assign({}, DEFAULT_PENDING);\n        };\n        _this._sdk.isAuthenticated().then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n          const {\n            accessToken,\n            idToken,\n            refreshToken\n          } = _this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n          const promise = transformAuthState ? _this._transformQueue.push(transformAuthState, null, _this._sdk, authState) : Promise.resolve(authState);\n          promise.then(authState => emitAndResolve(authState)).catch(error => emitAndResolve({\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: false,\n            error\n          }));\n        });\n      });\n      _this._pending.updateAuthStatePromise = cancelablePromise;\n      return finalPromise(cancelablePromise);\n    })();\n  }\n  subscribe(handler) {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n  unsubscribe(handler) {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\nexport { AuthStateManager, INITIAL_AUTH_STATE };","map":{"version":3,"names":["PCancelable","AuthSdkError","EVENT_ADDED","EVENT_REMOVED","getConsole","PromiseQueue","INITIAL_AUTH_STATE","DEFAULT_PENDING","updateAuthStatePromise","canceledTimes","EVENT_AUTH_STATE_CHANGE","MAX_PROMISE_CANCEL_TIMES","isSameAuthState","prevState","state","isAuthenticated","JSON","stringify","idToken","accessToken","error","AuthStateManager","constructor","sdk","emitter","_sdk","_pending","Object","assign","_authState","_logOptions","_prevAuthState","_transformQueue","quiet","tokenManager","on","key","token","_setLogOptions","event","updateAuthState","options","getAuthState","getPreviousAuthState","_this","_asyncToGenerator","transformAuthState","devMode","log","status","group","groupEnd","emitAuthStateChange","authState","emit","finalPromise","origPromise","then","curPromise","cancel","cancelablePromise","resolve","_","onCancel","shouldReject","emitAndResolve","isCanceled","refreshToken","getTokensSync","promise","push","Promise","catch","subscribe","handler","unsubscribe","off"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/AuthStateManager.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport PCancelable from 'p-cancelable';\nimport AuthSdkError from './errors/AuthSdkError.js';\nimport './idx/types/api.js';\nimport { EVENT_ADDED, EVENT_REMOVED } from './types/TokenManager.js';\nimport { getConsole } from './util/console.js';\nimport './myaccount/types.js';\nimport PromiseQueue from './PromiseQueue.js';\n\nconst INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n    updateAuthStatePromise: null,\n    canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\nconst isSameAuthState = (prevState, state) => {\n    if (!prevState) {\n        return false;\n    }\n    return prevState.isAuthenticated === state.isAuthenticated\n        && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n        && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n        && prevState.error === state.error;\n};\nclass AuthStateManager {\n    constructor(sdk) {\n        if (!sdk.emitter) {\n            throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n        }\n        this._sdk = sdk;\n        this._pending = Object.assign({}, DEFAULT_PENDING);\n        this._authState = INITIAL_AUTH_STATE;\n        this._logOptions = {};\n        this._prevAuthState = null;\n        this._transformQueue = new PromiseQueue({\n            quiet: true\n        });\n        sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n            this._setLogOptions({ event: EVENT_ADDED, key, token });\n            this.updateAuthState();\n        });\n        sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n            this._setLogOptions({ event: EVENT_REMOVED, key, token });\n            this.updateAuthState();\n        });\n    }\n    _setLogOptions(options) {\n        this._logOptions = options;\n    }\n    getAuthState() {\n        return this._authState;\n    }\n    getPreviousAuthState() {\n        return this._prevAuthState;\n    }\n    async updateAuthState() {\n        const { transformAuthState, devMode } = this._sdk.options;\n        const log = (status) => {\n            const { event, key, token } = this._logOptions;\n            getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n            getConsole().log(key, token);\n            getConsole().log('Current authState', this._authState);\n            getConsole().groupEnd();\n            this._logOptions = {};\n        };\n        const emitAuthStateChange = (authState) => {\n            if (isSameAuthState(this._authState, authState)) {\n                devMode && log('unchanged');\n                return;\n            }\n            this._prevAuthState = this._authState;\n            this._authState = authState;\n            this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, Object.assign({}, authState));\n            devMode && log('emitted');\n        };\n        const finalPromise = (origPromise) => {\n            return this._pending.updateAuthStatePromise.then(() => {\n                const curPromise = this._pending.updateAuthStatePromise;\n                if (curPromise && curPromise !== origPromise) {\n                    return finalPromise(curPromise);\n                }\n                return this.getAuthState();\n            });\n        };\n        if (this._pending.updateAuthStatePromise) {\n            if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n                devMode && log('terminated');\n                return finalPromise(this._pending.updateAuthStatePromise);\n            }\n            else {\n                this._pending.updateAuthStatePromise.cancel();\n            }\n        }\n        const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n            onCancel.shouldReject = false;\n            onCancel(() => {\n                this._pending.updateAuthStatePromise = null;\n                this._pending.canceledTimes = this._pending.canceledTimes + 1;\n                devMode && log('canceled');\n            });\n            const emitAndResolve = (authState) => {\n                if (cancelablePromise.isCanceled) {\n                    resolve();\n                    return;\n                }\n                emitAuthStateChange(authState);\n                resolve();\n                this._pending = Object.assign({}, DEFAULT_PENDING);\n            };\n            this._sdk.isAuthenticated()\n                .then(() => {\n                if (cancelablePromise.isCanceled) {\n                    resolve();\n                    return;\n                }\n                const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n                const authState = {\n                    accessToken,\n                    idToken,\n                    refreshToken,\n                    isAuthenticated: !!(accessToken && idToken)\n                };\n                const promise = transformAuthState\n                    ? this._transformQueue.push(transformAuthState, null, this._sdk, authState)\n                    : Promise.resolve(authState);\n                promise\n                    .then(authState => emitAndResolve(authState))\n                    .catch(error => emitAndResolve({\n                    accessToken,\n                    idToken,\n                    refreshToken,\n                    isAuthenticated: false,\n                    error\n                }));\n            });\n        });\n        this._pending.updateAuthStatePromise = cancelablePromise;\n        return finalPromise(cancelablePromise);\n    }\n    subscribe(handler) {\n        this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n    unsubscribe(handler) {\n        this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n    }\n}\n\nexport { AuthStateManager, INITIAL_AUTH_STATE };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}