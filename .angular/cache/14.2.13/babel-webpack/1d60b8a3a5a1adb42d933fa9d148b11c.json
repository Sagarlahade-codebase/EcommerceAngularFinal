{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\nimport '../myaccount/types.js';\nfunction unlockAccount(_x) {\n  return _unlockAccount.apply(this, arguments);\n}\nfunction _unlockAccount() {\n  _unlockAccount = _asyncToGenerator(function* (authClient, options = {}) {\n    options.flow = 'unlockAccount';\n    if (!hasSavedInteractionHandle(authClient)) {\n      const {\n        enabledFeatures\n      } = yield startTransaction(authClient, Object.assign(Object.assign({}, options), {\n        autoRemediate: false\n      }));\n      if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n        throw new AuthSdkError('Self Service Account Unlock is not supported based on your current org configuration.');\n      }\n    }\n    return run(authClient, Object.assign({}, options));\n  });\n  return _unlockAccount.apply(this, arguments);\n}\nexport { unlockAccount };","map":{"version":3,"names":["run","hasSavedInteractionHandle","startTransaction","AuthSdkError","IdxFeature","unlockAccount","_x","_unlockAccount","apply","arguments","_asyncToGenerator","authClient","options","flow","enabledFeatures","Object","assign","autoRemediate","includes","ACCOUNT_UNLOCK"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/unlockAccount.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { run } from './run.js';\nimport { hasSavedInteractionHandle } from './transactionMeta.js';\nimport { startTransaction } from './startTransaction.js';\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { IdxFeature } from './types/api.js';\nimport '../myaccount/types.js';\n\nasync function unlockAccount(authClient, options = {}) {\n    options.flow = 'unlockAccount';\n    if (!hasSavedInteractionHandle(authClient)) {\n        const { enabledFeatures } = await startTransaction(authClient, Object.assign(Object.assign({}, options), { autoRemediate: false }));\n        if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n            throw new AuthSdkError('Self Service Account Unlock is not supported based on your current org configuration.');\n        }\n    }\n    return run(authClient, Object.assign({}, options));\n}\n\nexport { unlockAccount };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAG,QAAQ,UAAU;AAC9B,SAASC,yBAAyB,QAAQ,sBAAsB;AAChE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAO,uBAAuB;AAAC,SAEhBC,aAAaA,CAAAC,EAAA;EAAA,OAAAC,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,eAAA;EAAAA,cAAA,GAAAG,iBAAA,CAA5B,WAA6BC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACnDA,OAAO,CAACC,IAAI,GAAG,eAAe;IAC9B,IAAI,CAACZ,yBAAyB,CAACU,UAAU,CAAC,EAAE;MACxC,MAAM;QAAEG;MAAgB,CAAC,SAASZ,gBAAgB,CAACS,UAAU,EAAEI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,OAAO,CAAC,EAAE;QAAEK,aAAa,EAAE;MAAM,CAAC,CAAC,CAAC;MACnI,IAAIH,eAAe,IAAI,CAACA,eAAe,CAACI,QAAQ,CAACd,UAAU,CAACe,cAAc,CAAC,EAAE;QACzE,MAAM,IAAIhB,YAAY,CAAC,uFAAuF,CAAC;MACnH;IACJ;IACA,OAAOH,GAAG,CAACW,UAAU,EAAEI,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEJ,OAAO,CAAC,CAAC;EACtD,CAAC;EAAA,OAAAL,cAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}