{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport { isSameRefreshToken } from './util/refreshToken.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\nimport { postRefreshToken } from './endpoints/token.js';\nimport { isRefreshTokenInvalidError } from './util/errors.js';\nfunction renewTokensWithRefresh(_x, _x2, _x3) {\n  return _renewTokensWithRefresh.apply(this, arguments);\n}\nfunction _renewTokensWithRefresh() {\n  _renewTokensWithRefresh = _asyncToGenerator(function* (sdk, tokenParams, refreshTokenObject) {\n    const {\n      clientId\n    } = sdk.options;\n    if (!clientId) {\n      throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n    }\n    try {\n      const renewTokenParams = Object.assign({}, tokenParams, {\n        clientId\n      });\n      const tokenResponse = yield postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n      const urls = getOAuthUrls(sdk, tokenParams);\n      const {\n        tokens\n      } = yield handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n      const {\n        refreshToken\n      } = tokens;\n      if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n        sdk.tokenManager.updateRefreshToken(refreshToken);\n      }\n      return tokens;\n    } catch (err) {\n      if (isRefreshTokenInvalidError(err)) {\n        sdk.tokenManager.removeRefreshToken();\n      }\n      throw err;\n    }\n  });\n  return _renewTokensWithRefresh.apply(this, arguments);\n}\nexport { renewTokensWithRefresh };","map":{"version":3,"names":["AuthSdkError","getOAuthUrls","isSameRefreshToken","handleOAuthResponse","postRefreshToken","isRefreshTokenInvalidError","renewTokensWithRefresh","_x","_x2","_x3","_renewTokensWithRefresh","apply","arguments","_asyncToGenerator","sdk","tokenParams","refreshTokenObject","clientId","options","renewTokenParams","Object","assign","tokenResponse","urls","tokens","refreshToken","tokenManager","updateRefreshToken","err","removeRefreshToken"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/renewTokensWithRefresh.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { getOAuthUrls } from './util/oauth.js';\nimport { isSameRefreshToken } from './util/refreshToken.js';\nimport { handleOAuthResponse } from './handleOAuthResponse.js';\nimport { postRefreshToken } from './endpoints/token.js';\nimport { isRefreshTokenInvalidError } from './util/errors.js';\n\nasync function renewTokensWithRefresh(sdk, tokenParams, refreshTokenObject) {\n    const { clientId } = sdk.options;\n    if (!clientId) {\n        throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n    }\n    try {\n        const renewTokenParams = Object.assign({}, tokenParams, {\n            clientId,\n        });\n        const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n        const urls = getOAuthUrls(sdk, tokenParams);\n        const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n        const { refreshToken } = tokens;\n        if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n            sdk.tokenManager.updateRefreshToken(refreshToken);\n        }\n        return tokens;\n    }\n    catch (err) {\n        if (isRefreshTokenInvalidError(err)) {\n            sdk.tokenManager.removeRefreshToken();\n        }\n        throw err;\n    }\n}\n\nexport { renewTokensWithRefresh };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,0BAA0B,QAAQ,kBAAkB;AAAC,SAE/CC,sBAAsBA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,wBAAA;EAAAA,uBAAA,GAAAG,iBAAA,CAArC,WAAsCC,GAAG,EAAEC,WAAW,EAAEC,kBAAkB,EAAE;IACxE,MAAM;MAAEC;IAAS,CAAC,GAAGH,GAAG,CAACI,OAAO;IAChC,IAAI,CAACD,QAAQ,EAAE;MACX,MAAM,IAAIjB,YAAY,CAAC,0EAA0E,CAAC;IACtG;IACA,IAAI;MACA,MAAMmB,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,WAAW,EAAE;QACpDE;MACJ,CAAC,CAAC;MACF,MAAMK,aAAa,SAASlB,gBAAgB,CAACU,GAAG,EAAEK,gBAAgB,EAAEH,kBAAkB,CAAC;MACvF,MAAMO,IAAI,GAAGtB,YAAY,CAACa,GAAG,EAAEC,WAAW,CAAC;MAC3C,MAAM;QAAES;MAAO,CAAC,SAASrB,mBAAmB,CAACW,GAAG,EAAEK,gBAAgB,EAAEG,aAAa,EAAEC,IAAI,CAAC;MACxF,MAAM;QAAEE;MAAa,CAAC,GAAGD,MAAM;MAC/B,IAAIC,YAAY,IAAI,CAACvB,kBAAkB,CAACuB,YAAY,EAAET,kBAAkB,CAAC,EAAE;QACvEF,GAAG,CAACY,YAAY,CAACC,kBAAkB,CAACF,YAAY,CAAC;MACrD;MACA,OAAOD,MAAM;IACjB,CAAC,CACD,OAAOI,GAAG,EAAE;MACR,IAAIvB,0BAA0B,CAACuB,GAAG,CAAC,EAAE;QACjCd,GAAG,CAACY,YAAY,CAACG,kBAAkB,CAAC,CAAC;MACzC;MACA,MAAMD,GAAG;IACb;EACJ,CAAC;EAAA,OAAAlB,uBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASN,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module"}