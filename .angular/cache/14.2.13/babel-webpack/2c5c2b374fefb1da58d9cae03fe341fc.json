{"ast":null,"code":"import oktaJQueryStatic from './jquery-wrapper.js';\nimport oktaUnderscore from './underscore-wrapper.js';\nimport Bundles from '../../../../../../../src/util/Bundles.js';\nconst entityMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': '\\'',\n  '&#039;': '\\'',\n  '&#x2F;': '/'\n};\nconst emailValidator = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(?!-)((\\[?[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\]?)|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/**\n* Converts the locale code identifier from \"${languageCode}-${countryCode}\" to \"${languageCode}_${countryCode}\"\n* Follows the ISO-639-1 language code and 2-letter ISO-3166-1-alpha-2 country code structure.\n* @param {String} locale code identifier\n* @return {String} converted locale code identifier\n*/\n\nconst parseLocale = locale => {\n  if (/-/.test(locale)) {\n    const parts = locale.split('-');\n    parts[1] = parts[1].toUpperCase();\n    return parts.join('_');\n  }\n  return locale;\n};\n/* eslint max-len: 0*/\n\n/**\n * Returns the language bundle based on the current locale.\n * - If a locale is not provided, default to English ('en')\n * - Legacy Support: If the named language bundle does not exist, fall back to the default named bundle.\n *\n * @param {*} bundleName\n */\n\nfunction getBundle(bundleName) {\n  if (!bundleName) {\n    return Bundles[oktaUnderscore.keys(Bundles)[0]];\n  }\n  const locale = parseLocale(window && window.okta && window.okta.locale) || 'en';\n  return Bundles[`${bundleName}_${locale}`] || Bundles[bundleName];\n}\n/**\n *\n * CustomEvent polyfill for IE\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#polyfill\n */\n\nfunction IECustomEvent(event, params) {\n  params = params || {\n    bubbles: false,\n    cancelable: false,\n    detail: null\n  };\n  var evt = document.createEvent('CustomEvent');\n  evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n  return evt;\n}\n/**\n * Call the window.okta.emitL10nError function if it is defined\n * @param {String} key The i18n key\n * @param {String} bundleName The i18n bundle name\n * @param {String} reason Could be 'bundle' (Bundle not found), 'key' (Key not found) or 'parameters' (Parameters mismatch).\n */\n\nfunction emitL10nError(key, bundleName, reason) {\n  // CustomEvent polyfill for IE\n  if (!window.CustomEvent) {\n    window.CustomEvent = IECustomEvent;\n  } // dispatchEvent for sentry\n\n  if (typeof window.CustomEvent === 'function') {\n    const event = new CustomEvent('okta-i18n-error', {\n      detail: {\n        type: 'l10n-error',\n        key: key,\n        bundleName: bundleName,\n        reason: reason\n      }\n    });\n    document.dispatchEvent(event);\n  }\n}\nconst StringUtil = /** @lends module:Okta.internal.util.StringUtil */\n{\n  /** @static */\n  sprintf: function () {\n    const args = Array.prototype.slice.apply(arguments);\n    let value = args.shift();\n    let oldValue = value;\n    /* eslint max-statements: [2, 15] */\n\n    function triggerError() {\n      throw new Error('Mismatch number of variables: ' + arguments[0] + ', ' + JSON.stringify(args));\n    }\n    for (var i = 0, l = args.length; i < l; i++) {\n      const entity = args[i];\n      const regex = new RegExp('\\\\{' + i + '\\\\}', 'g');\n      value = value.replace(regex, entity);\n      if (entity === undefined || entity === null || value === oldValue) {\n        triggerError();\n      }\n      oldValue = value;\n    }\n    if (/\\{[\\d+]\\}/.test(value)) {\n      triggerError();\n    }\n    return value;\n  },\n  /**\n   * Converts a URI encoded query string into a hash map\n   * @param  {String} query The query string\n   * @return {Object} The map\n   * @static\n   * @example\n   * StringUtil.parseQuery('foo=bar&baz=qux') // {foo: 'bar', baz: 'qux'}\n   */\n  parseQuery: function (query) {\n    const params = {};\n    const pairs = decodeURIComponent(query.replace(/\\+/g, ' ')).split('&');\n    for (var i = 0; i < pairs.length; i++) {\n      const pair = pairs[i];\n      const data = pair.split('=');\n      params[data.shift()] = data.join('=');\n    }\n    return params;\n  },\n  /** @static */\n  encodeJSObject: function (jsObj) {\n    return encodeURIComponent(JSON.stringify(jsObj));\n  },\n  /** @static */\n  decodeJSObject: function (jsObj) {\n    try {\n      return JSON.parse(decodeURIComponent(jsObj));\n    } catch (e) {\n      return null;\n    }\n  },\n  /** @static */\n  unescapeHtml: function (string) {\n    return String(string).replace(/&[\\w#\\d]{2,};/g, function (s) {\n      return entityMap[s] || s;\n    });\n  },\n  /**\n   * Get the original i18n template directly without string format with parameters\n   * @param {String} key The key\n   * @param {String} bundle=\"messages\"] The name of the i18n bundle. Defaults to the first bundle in the list.\n   */\n  getTemplate: function (key, bundleName) {\n    const bundle = getBundle(bundleName);\n    if (!bundle) {\n      emitL10nError(key, bundleName, 'bundle');\n      return 'L10N_ERROR[' + bundleName + ']';\n    }\n    if (bundle[key]) {\n      return bundle[key];\n    } else {\n      emitL10nError(key, bundleName, 'key');\n      return 'L10N_ERROR[' + key + ']';\n    }\n  },\n  /**\n   * Translate a key to the localized value\n   * @static\n   * @param  {String} key The key\n   * @param  {String} [bundle=\"messages\"] The name of the i18n bundle. Defaults to the first bundle in the list.\n   * @param  {Array} [params] A list of parameters to apply as tokens to the i18n value\n   * @return {String} The localized value\n   */\n  localize: function (key, bundleName, params) {\n    const bundle = getBundle(bundleName);\n    /* eslint complexity: [2, 6] */\n\n    if (!bundle) {\n      emitL10nError(key, bundleName, 'bundle');\n      return 'L10N_ERROR[' + bundleName + ']';\n    }\n    let value = bundle[key];\n    try {\n      params = params && params.slice ? params.slice(0) : [];\n      params.unshift(value);\n      value = StringUtil.sprintf.apply(null, params);\n      if (value) {\n        return value;\n      } else {\n        emitL10nError(key, bundleName, 'key');\n        return 'L10N_ERROR[' + key + ']';\n      }\n    } catch (e) {\n      emitL10nError(key, bundleName, 'parameters');\n      return 'L10N_ERROR[' + key + ']';\n    }\n  },\n  /**\n   * Convert a string to a float if valid, otherwise return the string.\n   * Valid numbers may contain a negative sign and a decimal point.\n   * @static\n   * @param {String} string The string to convert to a number\n   * @return {String|Number} Returns a number if the string can be casted, otherwise returns the original string\n   */\n  parseFloat: function (string) {\n    const number = +string;\n    return typeof string === 'string' && number === parseFloat(string) ? number : string;\n  },\n  /**\n   * Convert a string to an integer if valid, otherwise return the string\n   * @static\n   * @param {String} string The string to convert to an integer\n   * @return {String|integer} Returns an integer if the string can be casted, otherwise, returns the original string\n   */\n  parseInt: function (string) {\n    const int = +string;\n    return oktaUnderscore.isString(string) && int === parseInt(string, 10) ? int : string;\n  },\n  /**\n   * Convert a string to an object if valid, otherwise return the string\n   * @static\n   * @param {String} string The string to convert to an object\n   * @return {String|object} Returns an object if the string can be casted, otherwise, returns the original string\n   */\n  parseObject: function (string) {\n    if (!oktaUnderscore.isString(string)) {\n      return string;\n    }\n    try {\n      const object = JSON.parse(string);\n      return oktaJQueryStatic.isPlainObject(object) ? object : string;\n    } catch (e) {\n      return string;\n    }\n  },\n  /**\n   * Returns a random string from [a-z][A-Z][0-9] of a given length\n   * @static\n   * @param {Number} length The length of the random string.\n   * @return {String} Returns a random string from [a-z][A-Z][0-9] of a given length\n   */\n  randomString: function (length) {\n    const characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    if (length === undefined) {\n      length = oktaUnderscore.random(characters.length);\n    } else if (length === 0) {\n      return '';\n    }\n    const stringArray = [];\n    while (length--) {\n      stringArray.push(characters[oktaUnderscore.random(characters.length - 1)]);\n    }\n    return stringArray.join('');\n  },\n  /**\n   * Returns if a str ends with another string\n   * @static\n   * @param {String} str The string to search\n   * @param {String} ends The string it should end with\n   *\n   * @return {Boolean} Returns if the str ends with ends\n   */\n  endsWith: function (str, ends) {\n    str += '';\n    ends += '';\n    return str.length >= ends.length && str.substring(str.length - ends.length) === ends;\n  },\n  /** @static */\n  isEmail: function (str) {\n    const target = oktaJQueryStatic.trim(str);\n    return !oktaUnderscore.isEmpty(target) && emailValidator.test(target);\n  }\n};\nexport { StringUtil as default };","map":{"version":3,"names":["oktaJQueryStatic","oktaUnderscore","Bundles","entityMap","emailValidator","parseLocale","locale","test","parts","split","toUpperCase","join","getBundle","bundleName","keys","window","okta","IECustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","emitL10nError","key","reason","CustomEvent","type","dispatchEvent","StringUtil","sprintf","args","Array","prototype","slice","apply","arguments","value","shift","oldValue","triggerError","Error","JSON","stringify","i","l","length","entity","regex","RegExp","replace","undefined","parseQuery","query","pairs","decodeURIComponent","pair","data","encodeJSObject","jsObj","encodeURIComponent","decodeJSObject","parse","e","unescapeHtml","string","String","s","getTemplate","bundle","localize","unshift","parseFloat","number","parseInt","int","isString","parseObject","object","isPlainObject","randomString","characters","random","stringArray","push","endsWith","str","ends","substring","isEmail","target","trim","isEmpty","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/util/StringUtil.js"],"sourcesContent":["import oktaJQueryStatic from './jquery-wrapper.js';\nimport oktaUnderscore from './underscore-wrapper.js';\nimport Bundles from '../../../../../../../src/util/Bundles.js';\n\nconst entityMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': '\\'',\n  '&#039;': '\\'',\n  '&#x2F;': '/'\n};\nconst emailValidator = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(?!-)((\\[?[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\]?)|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/**\n* Converts the locale code identifier from \"${languageCode}-${countryCode}\" to \"${languageCode}_${countryCode}\"\n* Follows the ISO-639-1 language code and 2-letter ISO-3166-1-alpha-2 country code structure.\n* @param {String} locale code identifier\n* @return {String} converted locale code identifier\n*/\n\nconst parseLocale = locale => {\n  if (/-/.test(locale)) {\n    const parts = locale.split('-');\n    parts[1] = parts[1].toUpperCase();\n    return parts.join('_');\n  }\n\n  return locale;\n};\n/* eslint max-len: 0*/\n\n/**\n * Returns the language bundle based on the current locale.\n * - If a locale is not provided, default to English ('en')\n * - Legacy Support: If the named language bundle does not exist, fall back to the default named bundle.\n *\n * @param {*} bundleName\n */\n\n\nfunction getBundle(bundleName) {\n  if (!bundleName) {\n    return Bundles[oktaUnderscore.keys(Bundles)[0]];\n  }\n\n  const locale = parseLocale(window && window.okta && window.okta.locale) || 'en';\n  return Bundles[`${bundleName}_${locale}`] || Bundles[bundleName];\n}\n/**\n *\n * CustomEvent polyfill for IE\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#polyfill\n */\n\n\nfunction IECustomEvent(event, params) {\n  params = params || {\n    bubbles: false,\n    cancelable: false,\n    detail: null\n  };\n  var evt = document.createEvent('CustomEvent');\n  evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n  return evt;\n}\n/**\n * Call the window.okta.emitL10nError function if it is defined\n * @param {String} key The i18n key\n * @param {String} bundleName The i18n bundle name\n * @param {String} reason Could be 'bundle' (Bundle not found), 'key' (Key not found) or 'parameters' (Parameters mismatch).\n */\n\n\nfunction emitL10nError(key, bundleName, reason) {\n  // CustomEvent polyfill for IE\n  if (!window.CustomEvent) {\n    window.CustomEvent = IECustomEvent;\n  } // dispatchEvent for sentry\n\n\n  if (typeof window.CustomEvent === 'function') {\n    const event = new CustomEvent('okta-i18n-error', {\n      detail: {\n        type: 'l10n-error',\n        key: key,\n        bundleName: bundleName,\n        reason: reason\n      }\n    });\n    document.dispatchEvent(event);\n  }\n}\n\nconst StringUtil =\n/** @lends module:Okta.internal.util.StringUtil */\n{\n  /** @static */\n  sprintf: function () {\n    const args = Array.prototype.slice.apply(arguments);\n    let value = args.shift();\n    let oldValue = value;\n    /* eslint max-statements: [2, 15] */\n\n    function triggerError() {\n      throw new Error('Mismatch number of variables: ' + arguments[0] + ', ' + JSON.stringify(args));\n    }\n\n    for (var i = 0, l = args.length; i < l; i++) {\n      const entity = args[i];\n      const regex = new RegExp('\\\\{' + i + '\\\\}', 'g');\n      value = value.replace(regex, entity);\n\n      if (entity === undefined || entity === null || value === oldValue) {\n        triggerError();\n      }\n\n      oldValue = value;\n    }\n\n    if (/\\{[\\d+]\\}/.test(value)) {\n      triggerError();\n    }\n\n    return value;\n  },\n\n  /**\n   * Converts a URI encoded query string into a hash map\n   * @param  {String} query The query string\n   * @return {Object} The map\n   * @static\n   * @example\n   * StringUtil.parseQuery('foo=bar&baz=qux') // {foo: 'bar', baz: 'qux'}\n   */\n  parseQuery: function (query) {\n    const params = {};\n    const pairs = decodeURIComponent(query.replace(/\\+/g, ' ')).split('&');\n\n    for (var i = 0; i < pairs.length; i++) {\n      const pair = pairs[i];\n      const data = pair.split('=');\n      params[data.shift()] = data.join('=');\n    }\n\n    return params;\n  },\n\n  /** @static */\n  encodeJSObject: function (jsObj) {\n    return encodeURIComponent(JSON.stringify(jsObj));\n  },\n\n  /** @static */\n  decodeJSObject: function (jsObj) {\n    try {\n      return JSON.parse(decodeURIComponent(jsObj));\n    } catch (e) {\n      return null;\n    }\n  },\n\n  /** @static */\n  unescapeHtml: function (string) {\n    return String(string).replace(/&[\\w#\\d]{2,};/g, function (s) {\n      return entityMap[s] || s;\n    });\n  },\n\n  /**\n   * Get the original i18n template directly without string format with parameters\n   * @param {String} key The key\n   * @param {String} bundle=\"messages\"] The name of the i18n bundle. Defaults to the first bundle in the list.\n   */\n  getTemplate: function (key, bundleName) {\n    const bundle = getBundle(bundleName);\n\n    if (!bundle) {\n      emitL10nError(key, bundleName, 'bundle');\n      return 'L10N_ERROR[' + bundleName + ']';\n    }\n\n    if (bundle[key]) {\n      return bundle[key];\n    } else {\n      emitL10nError(key, bundleName, 'key');\n      return 'L10N_ERROR[' + key + ']';\n    }\n  },\n\n  /**\n   * Translate a key to the localized value\n   * @static\n   * @param  {String} key The key\n   * @param  {String} [bundle=\"messages\"] The name of the i18n bundle. Defaults to the first bundle in the list.\n   * @param  {Array} [params] A list of parameters to apply as tokens to the i18n value\n   * @return {String} The localized value\n   */\n  localize: function (key, bundleName, params) {\n    const bundle = getBundle(bundleName);\n    /* eslint complexity: [2, 6] */\n\n    if (!bundle) {\n      emitL10nError(key, bundleName, 'bundle');\n      return 'L10N_ERROR[' + bundleName + ']';\n    }\n\n    let value = bundle[key];\n\n    try {\n      params = params && params.slice ? params.slice(0) : [];\n      params.unshift(value);\n      value = StringUtil.sprintf.apply(null, params);\n\n      if (value) {\n        return value;\n      } else {\n        emitL10nError(key, bundleName, 'key');\n        return 'L10N_ERROR[' + key + ']';\n      }\n    } catch (e) {\n      emitL10nError(key, bundleName, 'parameters');\n      return 'L10N_ERROR[' + key + ']';\n    }\n  },\n\n  /**\n   * Convert a string to a float if valid, otherwise return the string.\n   * Valid numbers may contain a negative sign and a decimal point.\n   * @static\n   * @param {String} string The string to convert to a number\n   * @return {String|Number} Returns a number if the string can be casted, otherwise returns the original string\n   */\n  parseFloat: function (string) {\n    const number = +string;\n    return typeof string === 'string' && number === parseFloat(string) ? number : string;\n  },\n\n  /**\n   * Convert a string to an integer if valid, otherwise return the string\n   * @static\n   * @param {String} string The string to convert to an integer\n   * @return {String|integer} Returns an integer if the string can be casted, otherwise, returns the original string\n   */\n  parseInt: function (string) {\n    const int = +string;\n    return oktaUnderscore.isString(string) && int === parseInt(string, 10) ? int : string;\n  },\n\n  /**\n   * Convert a string to an object if valid, otherwise return the string\n   * @static\n   * @param {String} string The string to convert to an object\n   * @return {String|object} Returns an object if the string can be casted, otherwise, returns the original string\n   */\n  parseObject: function (string) {\n    if (!oktaUnderscore.isString(string)) {\n      return string;\n    }\n\n    try {\n      const object = JSON.parse(string);\n      return oktaJQueryStatic.isPlainObject(object) ? object : string;\n    } catch (e) {\n      return string;\n    }\n  },\n\n  /**\n   * Returns a random string from [a-z][A-Z][0-9] of a given length\n   * @static\n   * @param {Number} length The length of the random string.\n   * @return {String} Returns a random string from [a-z][A-Z][0-9] of a given length\n   */\n  randomString: function (length) {\n    const characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n\n    if (length === undefined) {\n      length = oktaUnderscore.random(characters.length);\n    } else if (length === 0) {\n      return '';\n    }\n\n    const stringArray = [];\n\n    while (length--) {\n      stringArray.push(characters[oktaUnderscore.random(characters.length - 1)]);\n    }\n\n    return stringArray.join('');\n  },\n\n  /**\n   * Returns if a str ends with another string\n   * @static\n   * @param {String} str The string to search\n   * @param {String} ends The string it should end with\n   *\n   * @return {Boolean} Returns if the str ends with ends\n   */\n  endsWith: function (str, ends) {\n    str += '';\n    ends += '';\n    return str.length >= ends.length && str.substring(str.length - ends.length) === ends;\n  },\n\n  /** @static */\n  isEmail: function (str) {\n    const target = oktaJQueryStatic.trim(str);\n    return !oktaUnderscore.isEmpty(target) && emailValidator.test(target);\n  }\n};\n\nexport { StringUtil as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}