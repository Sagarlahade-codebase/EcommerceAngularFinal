{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\nclass SecurityQuestionEnrollment extends Authenticator {\n  canVerify(values) {\n    const {\n      credentials\n    } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const {\n      questionKey,\n      question,\n      answer\n    } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n  mapCredentials(values) {\n    const {\n      questionKey,\n      question,\n      answer\n    } = values;\n    if (!answer || !questionKey && !question) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n  getInputs() {\n    return [{\n      name: 'questionKey',\n      type: 'string',\n      required: true\n    }, {\n      name: 'question',\n      type: 'string',\n      label: 'Create a security question'\n    }, {\n      name: 'answer',\n      type: 'string',\n      label: 'Answer',\n      required: true\n    }];\n  }\n}\nexport { SecurityQuestionEnrollment };","map":{"version":3,"names":["Authenticator","SecurityQuestionEnrollment","canVerify","values","credentials","questionKey","answer","question","mapCredentials","getInputs","name","type","required","label"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/SecurityQuestionEnrollment.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Authenticator } from './Authenticator.js';\n\nclass SecurityQuestionEnrollment extends Authenticator {\n    canVerify(values) {\n        const { credentials } = values;\n        if (credentials && credentials.questionKey && credentials.answer) {\n            return true;\n        }\n        const { questionKey, question, answer } = values;\n        return !!(questionKey && answer) || !!(question && answer);\n    }\n    mapCredentials(values) {\n        const { questionKey, question, answer } = values;\n        if (!answer || (!questionKey && !question)) {\n            return;\n        }\n        return {\n            questionKey: question ? 'custom' : questionKey,\n            question,\n            answer\n        };\n    }\n    getInputs() {\n        return [\n            { name: 'questionKey', type: 'string', required: true },\n            { name: 'question', type: 'string', label: 'Create a security question' },\n            { name: 'answer', type: 'string', label: 'Answer', required: true },\n        ];\n    }\n}\n\nexport { SecurityQuestionEnrollment };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,QAAQ,oBAAoB;AAElD,MAAMC,0BAA0B,SAASD,aAAa,CAAC;EACnDE,SAASA,CAACC,MAAM,EAAE;IACd,MAAM;MAAEC;IAAY,CAAC,GAAGD,MAAM;IAC9B,IAAIC,WAAW,IAAIA,WAAW,CAACC,WAAW,IAAID,WAAW,CAACE,MAAM,EAAE;MAC9D,OAAO,IAAI;IACf;IACA,MAAM;MAAED,WAAW;MAAEE,QAAQ;MAAED;IAAO,CAAC,GAAGH,MAAM;IAChD,OAAO,CAAC,EAAEE,WAAW,IAAIC,MAAM,CAAC,IAAI,CAAC,EAAEC,QAAQ,IAAID,MAAM,CAAC;EAC9D;EACAE,cAAcA,CAACL,MAAM,EAAE;IACnB,MAAM;MAAEE,WAAW;MAAEE,QAAQ;MAAED;IAAO,CAAC,GAAGH,MAAM;IAChD,IAAI,CAACG,MAAM,IAAK,CAACD,WAAW,IAAI,CAACE,QAAS,EAAE;MACxC;IACJ;IACA,OAAO;MACHF,WAAW,EAAEE,QAAQ,GAAG,QAAQ,GAAGF,WAAW;MAC9CE,QAAQ;MACRD;IACJ,CAAC;EACL;EACAG,SAASA,CAAA,EAAG;IACR,OAAO,CACH;MAAEC,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE,QAAQ;MAAEC,QAAQ,EAAE;IAAK,CAAC,EACvD;MAAEF,IAAI,EAAE,UAAU;MAAEC,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAE;IAA6B,CAAC,EACzE;MAAEH,IAAI,EAAE,QAAQ;MAAEC,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAE,QAAQ;MAAED,QAAQ,EAAE;IAAK,CAAC,CACtE;EACL;AACJ;AAEA,SAASX,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module"}