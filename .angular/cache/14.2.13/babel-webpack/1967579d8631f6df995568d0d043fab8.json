{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\nclass SelectAuthenticatorUnlockAccount extends SelectAuthenticator {\n  constructor() {\n    super(...arguments);\n    this.map = {\n      identifier: ['username']\n    };\n  }\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n  mapAuthenticator(remediationValue) {\n    var _a, _b, _c;\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value.form.value.find(({\n      name\n    }) => name === 'methodType');\n    const methodTypeValue = this.values.methodType || (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n    if (methodTypeValue) {\n      return Object.assign(Object.assign({}, authenticatorMap), {\n        methodType: methodTypeValue\n      });\n    }\n    return authenticatorMap;\n  }\n  getInputUsername() {\n    return {\n      name: 'username',\n      type: 'string'\n    };\n  }\n}\nSelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\nexport { SelectAuthenticatorUnlockAccount };","map":{"version":3,"names":["SelectAuthenticator","SelectAuthenticatorUnlockAccount","constructor","arguments","map","identifier","canRemediate","getData","mapAuthenticator","remediationValue","_a","_b","_c","authenticatorMap","methodTypeOption","selectedOption","value","form","find","name","methodTypeValue","values","methodType","options","Object","assign","getInputUsername","type","remediationName"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/SelectAuthenticatorUnlockAccount.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\n\nclass SelectAuthenticatorUnlockAccount extends SelectAuthenticator {\n    constructor() {\n        super(...arguments);\n        this.map = {\n            identifier: ['username']\n        };\n    }\n    canRemediate() {\n        const identifier = this.getData('identifier');\n        return !!identifier && super.canRemediate();\n    }\n    mapAuthenticator(remediationValue) {\n        var _a, _b, _c;\n        const authenticatorMap = super.mapAuthenticator(remediationValue);\n        const methodTypeOption = (_a = this.selectedOption) === null || _a === void 0 ? void 0 : _a.value.form.value.find(({ name }) => name === 'methodType');\n        const methodTypeValue = this.values.methodType ||\n            (methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.value) || ((_c = (_b = methodTypeOption === null || methodTypeOption === void 0 ? void 0 : methodTypeOption.options) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value);\n        if (methodTypeValue) {\n            return Object.assign(Object.assign({}, authenticatorMap), { methodType: methodTypeValue });\n        }\n        return authenticatorMap;\n    }\n    getInputUsername() {\n        return { name: 'username', type: 'string' };\n    }\n}\nSelectAuthenticatorUnlockAccount.remediationName = 'select-authenticator-unlock-account';\n\nexport { SelectAuthenticatorUnlockAccount };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,QAAQ,+BAA+B;AAEnE,MAAMC,gCAAgC,SAASD,mBAAmB,CAAC;EAC/DE,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,GAAG,GAAG;MACPC,UAAU,EAAE,CAAC,UAAU;IAC3B,CAAC;EACL;EACAC,YAAYA,CAAA,EAAG;IACX,MAAMD,UAAU,GAAG,IAAI,CAACE,OAAO,CAAC,YAAY,CAAC;IAC7C,OAAO,CAAC,CAACF,UAAU,IAAI,KAAK,CAACC,YAAY,CAAC,CAAC;EAC/C;EACAE,gBAAgBA,CAACC,gBAAgB,EAAE;IAC/B,IAAIC,EAAE,EAAEC,EAAE,EAAEC,EAAE;IACd,MAAMC,gBAAgB,GAAG,KAAK,CAACL,gBAAgB,CAACC,gBAAgB,CAAC;IACjE,MAAMK,gBAAgB,GAAG,CAACJ,EAAE,GAAG,IAAI,CAACK,cAAc,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,KAAK,CAACC,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAKA,IAAI,KAAK,YAAY,CAAC;IACtJ,MAAMC,eAAe,GAAG,IAAI,CAACC,MAAM,CAACC,UAAU,KACzCR,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACE,KAAK,CAAC,KAAK,CAACJ,EAAE,GAAG,CAACD,EAAE,GAAGG,gBAAgB,KAAK,IAAI,IAAIA,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACS,OAAO,MAAM,IAAI,IAAIZ,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC,CAAC,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,KAAK,CAAC;IACzS,IAAII,eAAe,EAAE;MACjB,OAAOI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEZ,gBAAgB,CAAC,EAAE;QAAES,UAAU,EAAEF;MAAgB,CAAC,CAAC;IAC9F;IACA,OAAOP,gBAAgB;EAC3B;EACAa,gBAAgBA,CAAA,EAAG;IACf,OAAO;MAAEP,IAAI,EAAE,UAAU;MAAEQ,IAAI,EAAE;IAAS,CAAC;EAC/C;AACJ;AACA1B,gCAAgC,CAAC2B,eAAe,GAAG,qCAAqC;AAExF,SAAS3B,gCAAgC","ignoreList":[]},"metadata":{},"sourceType":"module"}