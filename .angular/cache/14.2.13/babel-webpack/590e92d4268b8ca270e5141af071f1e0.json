{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nimport { OktaPassword } from '../authenticator/OktaPassword.js';\nimport '../types/api.js';\nclass EnrollProfile extends Remediator {\n  constructor(remediation, values = {}, options = {}) {\n    super(remediation, values, options);\n    this.authenticator = null;\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({});\n    }\n  }\n  canRemediate() {\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    const userProfileFromRemediation = this.remediation.value.find(({\n      name\n    }) => name === 'userProfile');\n    return userProfileFromRemediation.form.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n  getCredentialsFromRemediation() {\n    return this.remediation.value.find(({\n      name\n    }) => name === 'credentials');\n  }\n  mapUserProfile({\n    form: {\n      value: profileAttributes\n    }\n  }) {\n    const attributeNames = profileAttributes.map(({\n      name\n    }) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => this.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), {\n      [attributeName]: this.values[attributeName]\n    }) : attributeValues, {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}\nEnrollProfile.remediationName = 'enroll-profile';\nexport { EnrollProfile };","map":{"version":3,"names":["Remediator","OktaPassword","EnrollProfile","constructor","remediation","values","options","authenticator","credentials","getCredentialsFromRemediation","canRemediate","canVerify","userProfileFromValues","getData","userProfile","userProfileFromRemediation","value","find","name","form","reduce","curr","required","mapUserProfile","profileAttributes","attributeNames","map","data","attributeValues","attributeName","Object","assign","keys","length","mapCredentials","val","getInputUserProfile","input","getInputCredentials","getErrorMessages","errorRemediation","errors","field","messages","push","message","remediationName"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/EnrollProfile.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nimport { OktaPassword } from '../authenticator/OktaPassword.js';\nimport '../types/api.js';\n\nclass EnrollProfile extends Remediator {\n    constructor(remediation, values = {}, options = {}) {\n        super(remediation, values, options);\n        this.authenticator = null;\n        const credentials = this.getCredentialsFromRemediation();\n        if (credentials) {\n            this.authenticator = this.authenticator = new OktaPassword({});\n        }\n    }\n    canRemediate() {\n        if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n            return false;\n        }\n        const userProfileFromValues = this.getData().userProfile;\n        if (!userProfileFromValues) {\n            return false;\n        }\n        const userProfileFromRemediation = this.remediation.value.find(({ name }) => name === 'userProfile');\n        return userProfileFromRemediation.form.value.reduce((canRemediate, curr) => {\n            if (curr.required) {\n                canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n            }\n            return canRemediate;\n        }, true);\n    }\n    getCredentialsFromRemediation() {\n        return this.remediation.value.find(({ name }) => name === 'credentials');\n    }\n    mapUserProfile({ form: { value: profileAttributes } }) {\n        const attributeNames = profileAttributes.map(({ name }) => name);\n        const data = attributeNames.reduce((attributeValues, attributeName) => (this.values[attributeName] ? Object.assign(Object.assign({}, attributeValues), { [attributeName]: this.values[attributeName] }) : attributeValues), {});\n        if (Object.keys(data).length === 0) {\n            return;\n        }\n        return data;\n    }\n    mapCredentials() {\n        const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n        if (!val) {\n            return;\n        }\n        return val;\n    }\n    getInputUserProfile(input) {\n        return [...input.form.value];\n    }\n    getInputCredentials(input) {\n        return [...input.form.value];\n    }\n    getErrorMessages(errorRemediation) {\n        return errorRemediation.value[0].form.value.reduce((errors, field) => {\n            if (field.messages) {\n                errors.push(field.messages.value[0].message);\n            }\n            return errors;\n        }, []);\n    }\n}\nEnrollProfile.remediationName = 'enroll-profile';\n\nexport { EnrollProfile };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,sBAAsB;AACjD,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,OAAO,iBAAiB;AAExB,MAAMC,aAAa,SAASF,UAAU,CAAC;EACnCG,WAAWA,CAACC,WAAW,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAChD,KAAK,CAACF,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC;IACnC,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,MAAMC,WAAW,GAAG,IAAI,CAACC,6BAA6B,CAAC,CAAC;IACxD,IAAID,WAAW,EAAE;MACb,IAAI,CAACD,aAAa,GAAG,IAAI,CAACA,aAAa,GAAG,IAAIN,YAAY,CAAC,CAAC,CAAC,CAAC;IAClE;EACJ;EACAS,YAAYA,CAAA,EAAG;IACX,IAAI,IAAI,CAACH,aAAa,IAAI,CAAC,IAAI,CAACA,aAAa,CAACI,SAAS,CAAC,IAAI,CAACN,MAAM,CAAC,EAAE;MAClE,OAAO,KAAK;IAChB;IACA,MAAMO,qBAAqB,GAAG,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,WAAW;IACxD,IAAI,CAACF,qBAAqB,EAAE;MACxB,OAAO,KAAK;IAChB;IACA,MAAMG,0BAA0B,GAAG,IAAI,CAACX,WAAW,CAACY,KAAK,CAACC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAKA,IAAI,KAAK,aAAa,CAAC;IACpG,OAAOH,0BAA0B,CAACI,IAAI,CAACH,KAAK,CAACI,MAAM,CAAC,CAACV,YAAY,EAAEW,IAAI,KAAK;MACxE,IAAIA,IAAI,CAACC,QAAQ,EAAE;QACfZ,YAAY,GAAGA,YAAY,IAAI,CAAC,CAACE,qBAAqB,CAACS,IAAI,CAACH,IAAI,CAAC;MACrE;MACA,OAAOR,YAAY;IACvB,CAAC,EAAE,IAAI,CAAC;EACZ;EACAD,6BAA6BA,CAAA,EAAG;IAC5B,OAAO,IAAI,CAACL,WAAW,CAACY,KAAK,CAACC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAKA,IAAI,KAAK,aAAa,CAAC;EAC5E;EACAK,cAAcA,CAAC;IAAEJ,IAAI,EAAE;MAAEH,KAAK,EAAEQ;IAAkB;EAAE,CAAC,EAAE;IACnD,MAAMC,cAAc,GAAGD,iBAAiB,CAACE,GAAG,CAAC,CAAC;MAAER;IAAK,CAAC,KAAKA,IAAI,CAAC;IAChE,MAAMS,IAAI,GAAGF,cAAc,CAACL,MAAM,CAAC,CAACQ,eAAe,EAAEC,aAAa,KAAM,IAAI,CAACxB,MAAM,CAACwB,aAAa,CAAC,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEH,eAAe,CAAC,EAAE;MAAE,CAACC,aAAa,GAAG,IAAI,CAACxB,MAAM,CAACwB,aAAa;IAAE,CAAC,CAAC,GAAGD,eAAgB,EAAE,CAAC,CAAC,CAAC;IAC/N,IAAIE,MAAM,CAACE,IAAI,CAACL,IAAI,CAAC,CAACM,MAAM,KAAK,CAAC,EAAE;MAChC;IACJ;IACA,OAAON,IAAI;EACf;EACAO,cAAcA,CAAA,EAAG;IACb,MAAMC,GAAG,GAAG,IAAI,CAAC5B,aAAa,IAAI,IAAI,CAACA,aAAa,CAAC2B,cAAc,CAAC,IAAI,CAAC7B,MAAM,CAAC;IAChF,IAAI,CAAC8B,GAAG,EAAE;MACN;IACJ;IACA,OAAOA,GAAG;EACd;EACAC,mBAAmBA,CAACC,KAAK,EAAE;IACvB,OAAO,CAAC,GAAGA,KAAK,CAAClB,IAAI,CAACH,KAAK,CAAC;EAChC;EACAsB,mBAAmBA,CAACD,KAAK,EAAE;IACvB,OAAO,CAAC,GAAGA,KAAK,CAAClB,IAAI,CAACH,KAAK,CAAC;EAChC;EACAuB,gBAAgBA,CAACC,gBAAgB,EAAE;IAC/B,OAAOA,gBAAgB,CAACxB,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI,CAACH,KAAK,CAACI,MAAM,CAAC,CAACqB,MAAM,EAAEC,KAAK,KAAK;MAClE,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAChBF,MAAM,CAACG,IAAI,CAACF,KAAK,CAACC,QAAQ,CAAC3B,KAAK,CAAC,CAAC,CAAC,CAAC6B,OAAO,CAAC;MAChD;MACA,OAAOJ,MAAM;IACjB,CAAC,EAAE,EAAE,CAAC;EACV;AACJ;AACAvC,aAAa,CAAC4C,eAAe,GAAG,gBAAgB;AAEhD,SAAS5C,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}