{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar IdxStatus;\n(function (IdxStatus) {\n  IdxStatus[\"SUCCESS\"] = \"SUCCESS\";\n  IdxStatus[\"PENDING\"] = \"PENDING\";\n  IdxStatus[\"FAILURE\"] = \"FAILURE\";\n  IdxStatus[\"TERMINAL\"] = \"TERMINAL\";\n  IdxStatus[\"CANCELED\"] = \"CANCELED\";\n})(IdxStatus || (IdxStatus = {}));\nvar AuthenticatorKey;\n(function (AuthenticatorKey) {\n  AuthenticatorKey[\"OKTA_PASSWORD\"] = \"okta_password\";\n  AuthenticatorKey[\"OKTA_EMAIL\"] = \"okta_email\";\n  AuthenticatorKey[\"PHONE_NUMBER\"] = \"phone_number\";\n  AuthenticatorKey[\"GOOGLE_AUTHENTICATOR\"] = \"google_otp\";\n  AuthenticatorKey[\"SECURITY_QUESTION\"] = \"security_question\";\n  AuthenticatorKey[\"OKTA_VERIFY\"] = \"okta_verify\";\n  AuthenticatorKey[\"WEBAUTHN\"] = \"webauthn\";\n})(AuthenticatorKey || (AuthenticatorKey = {}));\nvar IdxFeature;\n(function (IdxFeature) {\n  IdxFeature[\"PASSWORD_RECOVERY\"] = \"recover-password\";\n  IdxFeature[\"REGISTRATION\"] = \"enroll-profile\";\n  IdxFeature[\"SOCIAL_IDP\"] = \"redirect-idp\";\n  IdxFeature[\"ACCOUNT_UNLOCK\"] = \"unlock-account\";\n})(IdxFeature || (IdxFeature = {}));\nfunction isAuthenticator(obj) {\n  return obj && (obj.key || obj.id);\n}\nexport { AuthenticatorKey, IdxFeature, IdxStatus, isAuthenticator };","map":{"version":3,"names":["IdxStatus","AuthenticatorKey","IdxFeature","isAuthenticator","obj","key","id"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/types/api.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar IdxStatus;\n(function (IdxStatus) {\n    IdxStatus[\"SUCCESS\"] = \"SUCCESS\";\n    IdxStatus[\"PENDING\"] = \"PENDING\";\n    IdxStatus[\"FAILURE\"] = \"FAILURE\";\n    IdxStatus[\"TERMINAL\"] = \"TERMINAL\";\n    IdxStatus[\"CANCELED\"] = \"CANCELED\";\n})(IdxStatus || (IdxStatus = {}));\nvar AuthenticatorKey;\n(function (AuthenticatorKey) {\n    AuthenticatorKey[\"OKTA_PASSWORD\"] = \"okta_password\";\n    AuthenticatorKey[\"OKTA_EMAIL\"] = \"okta_email\";\n    AuthenticatorKey[\"PHONE_NUMBER\"] = \"phone_number\";\n    AuthenticatorKey[\"GOOGLE_AUTHENTICATOR\"] = \"google_otp\";\n    AuthenticatorKey[\"SECURITY_QUESTION\"] = \"security_question\";\n    AuthenticatorKey[\"OKTA_VERIFY\"] = \"okta_verify\";\n    AuthenticatorKey[\"WEBAUTHN\"] = \"webauthn\";\n})(AuthenticatorKey || (AuthenticatorKey = {}));\nvar IdxFeature;\n(function (IdxFeature) {\n    IdxFeature[\"PASSWORD_RECOVERY\"] = \"recover-password\";\n    IdxFeature[\"REGISTRATION\"] = \"enroll-profile\";\n    IdxFeature[\"SOCIAL_IDP\"] = \"redirect-idp\";\n    IdxFeature[\"ACCOUNT_UNLOCK\"] = \"unlock-account\";\n})(IdxFeature || (IdxFeature = {}));\nfunction isAuthenticator(obj) {\n    return obj && (obj.key || obj.id);\n}\n\nexport { AuthenticatorKey, IdxFeature, IdxStatus, isAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,SAAS;AACb,CAAC,UAAUA,SAAS,EAAE;EAClBA,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS;EAChCA,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS;EAChCA,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS;EAChCA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;EAClCA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;AACtC,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AACjC,IAAIC,gBAAgB;AACpB,CAAC,UAAUA,gBAAgB,EAAE;EACzBA,gBAAgB,CAAC,eAAe,CAAC,GAAG,eAAe;EACnDA,gBAAgB,CAAC,YAAY,CAAC,GAAG,YAAY;EAC7CA,gBAAgB,CAAC,cAAc,CAAC,GAAG,cAAc;EACjDA,gBAAgB,CAAC,sBAAsB,CAAC,GAAG,YAAY;EACvDA,gBAAgB,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;EAC3DA,gBAAgB,CAAC,aAAa,CAAC,GAAG,aAAa;EAC/CA,gBAAgB,CAAC,UAAU,CAAC,GAAG,UAAU;AAC7C,CAAC,EAAEA,gBAAgB,KAAKA,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/C,IAAIC,UAAU;AACd,CAAC,UAAUA,UAAU,EAAE;EACnBA,UAAU,CAAC,mBAAmB,CAAC,GAAG,kBAAkB;EACpDA,UAAU,CAAC,cAAc,CAAC,GAAG,gBAAgB;EAC7CA,UAAU,CAAC,YAAY,CAAC,GAAG,cAAc;EACzCA,UAAU,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;AACnD,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC,SAASC,eAAeA,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,KAAKA,GAAG,CAACC,GAAG,IAAID,GAAG,CAACE,EAAE,CAAC;AACrC;AAEA,SAASL,gBAAgB,EAAEC,UAAU,EAAEF,SAAS,EAAEG,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}