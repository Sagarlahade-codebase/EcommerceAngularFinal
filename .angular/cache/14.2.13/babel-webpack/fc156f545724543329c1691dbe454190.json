{"ast":null,"code":"import { loc, createCallout } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { FORMS } from '../../ion/RemediationConstants.js';\nimport '../internals/BaseHeader.js';\nimport '../internals/BaseFooter.js';\nimport BaseForm from '../internals/BaseForm.js';\nimport '../internals/BaseFormWithPolling.js';\nimport '../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../internals/BaseView.js';\nimport { createIdpButtons, createCustomButtons } from '../internals/FormInputFactory.js';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting.js';\nimport IdentifierFooter from '../components/IdentifierFooter.js';\nimport Link from '../components/Link.js';\nimport signInWithIdps from './signin/SignInWithIdps.js';\nimport customButtonsView from './signin/CustomButtons.js';\nimport SignInWithDeviceOption from './signin/SignInWithDeviceOption.js';\nimport signInWithWebAuthn from './signin/SignInWithWebAuthn.js';\nimport { isCustomizedI18nKey } from '../../ion/i18nTransformer.js';\nimport { getForgotPasswordLink } from '../utils/LinksUtil.js';\nimport fn from '../../../util/CookieUtil.js';\nimport CustomAccessDeniedErrorMessage from './shared/CustomAccessDeniedErrorMessage.js';\nconst CUSTOM_ACCESS_DENIED_KEY = 'security.access_denied_custom_message';\nconst Body = BaseForm.extend({\n  title: function () {\n    return loc('primaryauth.title', 'login');\n  },\n  save: function () {\n    return loc('oform.next', 'login');\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    const uiSchema = this.getUISchema();\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    } // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there) \n    // 3. Use value from the \"remember my username\" cookie.\n\n    if (this._shouldAddUsername(uiSchema)) {\n      // Set username/identifier from the config (i.e. config.username)\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      // Use value from cookie if the remediation did not return identifier value.\n      this._applyRememberMyUsername();\n    }\n  },\n  saveForm: function () {\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    } // Before the XHR is made for \"identify\", we'll generate this one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n\n    const fingerprintData = {\n      oktaDomainUrl: this.settings.get('baseUrl'),\n      element: this.$el\n    }; // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    // In the future, this should be handled completely by okta-auth-js OKTA-418160\n\n    DeviceFingerprinting.generateDeviceFingerprint(fingerprintData).then(fingerprint => {\n      this.options.appState.set('deviceFingerprint', fingerprint);\n    }).catch(() => {\n      /* Keep going even if device fingerprint fails */\n    }).finally(() => {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n    });\n  },\n  render: function () {\n    BaseForm.prototype.render.apply(this, arguments); // Launch Device Authenticator\n\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_AUTHENTICATOR)) {\n      this.add(SignInWithDeviceOption, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    }\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_WEBAUTHN_AUTHENTICATOR)) {\n      this.add(signInWithWebAuthn, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    } // add forgot password link and external idps buttons if needed\n\n    const idpButtons = createIdpButtons(this.options);\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n      this._addIdpView(idpButtons);\n    }\n    const customButtons = createCustomButtons(this.options.settings);\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons: customButtons,\n          addSeparateLine: true\n        }\n      });\n    }\n  },\n  postRender: function () {\n    BaseForm.prototype.postRender.apply(this, arguments); // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n\n    this.$el.find('.identifier-container').remove();\n  },\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema: function () {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const {\n      settings: settings\n    } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n    let newSchemas = schemas.map(schema => {\n      let newSchema = {\n        ...schema\n      };\n      if (schema.name === 'identifier') {\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        } // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n\n        newSchema = {\n          ...newSchema,\n          autoComplete: 'identifier'\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = {\n          ...newSchema,\n          autoComplete: 'current-password'\n        };\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = {\n            ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        }\n      }\n      return newSchema;\n    }); // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n    return newSchemas;\n  },\n  showCustomFormErrorCallout: function (error, messages) {\n    var _error$responseJSON, _error$responseJSON$e;\n    if (!(error !== null && error !== void 0 && (_error$responseJSON = error.responseJSON) !== null && _error$responseJSON !== void 0 && (_error$responseJSON$e = _error$responseJSON.errorSummaryKeys) !== null && _error$responseJSON$e !== void 0 && _error$responseJSON$e.includes(CUSTOM_ACCESS_DENIED_KEY))) {\n      return false;\n    }\n    const message = messages.find(message => message.i18n.key === CUSTOM_ACCESS_DENIED_KEY);\n    if (!message) {\n      return false;\n    }\n    const {\n      errorSummary: errorSummary\n    } = error.responseJSON;\n    const options = {\n      type: 'error',\n      content: new CustomAccessDeniedErrorMessage({\n        message: errorSummary,\n        links: message.links\n      })\n    };\n    this.showMessages(createCallout(options));\n    return true;\n  },\n  _addForgotPasswordView: function () {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', {\n        selector: '.o-form-button-bar'\n      });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0]\n      });\n    }\n  },\n  _addIdpView: function (idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons: idpButtons,\n        isPrimaryIdpDisplay: isPrimaryIdpDisplay\n      }\n    });\n  },\n  _shouldAddUsername: function (uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username');\n  },\n  _shouldApplyRememberMyUsername: function (uiSchema) {\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('features.rememberMe') && this.settings.get('features.rememberMyUsernameOnOIE');\n  },\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername: function () {\n    const cookieUsername = fn.getCookieUsername();\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\nvar IdentifierView = BaseView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments); // customize pre-submit form validation inline error messages\n\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n    const validate = attr => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !(attr !== null && attr !== void 0 && attr['identifier']);\n      const isEmptyPassword = props['credentials.passcode'] && !(attr !== null && attr !== void 0 && attr['credentials.passcode']);\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n      return inlineErrors;\n    };\n    return ModelClass.extend({\n      validate: validate\n    });\n  },\n  initialize: function () {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return !this.options.appState.isIdentifierOnlyView() && (!Array.isArray(idpButtons) || idpButtons.length === 0);\n      }\n    });\n  },\n  postRender: function () {\n    BaseView.prototype.postRender.apply(this, arguments); // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function () {\n      appState.trigger('invokeAction', FORMS.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  }\n});\nexport { IdentifierView as default };","map":{"version":3,"names":["loc","createCallout","FORMS","BaseForm","BaseView","createIdpButtons","createCustomButtons","DeviceFingerprinting","IdentifierFooter","Link","signInWithIdps","customButtonsView","SignInWithDeviceOption","signInWithWebAuthn","isCustomizedI18nKey","getForgotPasswordLink","fn","CustomAccessDeniedErrorMessage","CUSTOM_ACCESS_DENIED_KEY","Body","extend","title","save","initialize","prototype","apply","arguments","uiSchema","getUISchema","find","schema","name","_shouldAddUsername","model","set","settings","get","_shouldApplyRememberMyUsername","_applyRememberMyUsername","saveForm","fingerprintData","oktaDomainUrl","element","$el","generateDeviceFingerprint","then","fingerprint","options","appState","catch","finally","render","hasRemediationObject","LAUNCH_AUTHENTICATOR","add","isRequired","LAUNCH_WEBAUTHN_AUTHENTICATOR","idpButtons","Array","isArray","length","_addForgotPasswordView","_addIdpView","customButtons","selector","addSeparateLine","postRender","remove","schemas","identifierExplainLabeli18nKey","passwordExplainLabeli18nKey","newSchemas","map","newSchema","explain","autoComplete","filter","showCustomFormErrorCallout","error","messages","_error$responseJSON","_error$responseJSON$e","responseJSON","errorSummaryKeys","includes","message","i18n","key","errorSummary","type","content","links","showMessages","forgotPasswordLink","idpDisplay","isPrimaryIdpDisplay","toUpperCase","prepend","cookieUsername","getCookieUsername","IdentifierView","createModelClass","ModelClass","identifierRequiredi18nKey","passwordRequiredi18nKey","props","validate","attr","inlineErrors","isEmptyIdentifier","isEmptyPassword","Footer","showForgotPasswordLink","isIdentifierOnlyView","click","trigger","SELECT_ENROLL_PROFILE","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/IdentifierView.js"],"sourcesContent":["import { loc, createCallout } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { FORMS } from '../../ion/RemediationConstants.js';\nimport '../internals/BaseHeader.js';\nimport '../internals/BaseFooter.js';\nimport BaseForm from '../internals/BaseForm.js';\nimport '../internals/BaseFormWithPolling.js';\nimport '../internals/BaseOktaVerifyChallengeView.js';\nimport BaseView from '../internals/BaseView.js';\nimport { createIdpButtons, createCustomButtons } from '../internals/FormInputFactory.js';\nimport DeviceFingerprinting from '../utils/DeviceFingerprinting.js';\nimport IdentifierFooter from '../components/IdentifierFooter.js';\nimport Link from '../components/Link.js';\nimport signInWithIdps from './signin/SignInWithIdps.js';\nimport customButtonsView from './signin/CustomButtons.js';\nimport SignInWithDeviceOption from './signin/SignInWithDeviceOption.js';\nimport signInWithWebAuthn from './signin/SignInWithWebAuthn.js';\nimport { isCustomizedI18nKey } from '../../ion/i18nTransformer.js';\nimport { getForgotPasswordLink } from '../utils/LinksUtil.js';\nimport fn from '../../../util/CookieUtil.js';\nimport CustomAccessDeniedErrorMessage from './shared/CustomAccessDeniedErrorMessage.js';\n\nconst CUSTOM_ACCESS_DENIED_KEY = 'security.access_denied_custom_message';\nconst Body = BaseForm.extend({\n  title: function () {\n    return loc('primaryauth.title', 'login');\n  },\n  save: function () {\n    return loc('oform.next', 'login');\n  },\n  initialize: function () {\n    BaseForm.prototype.initialize.apply(this, arguments);\n    const uiSchema = this.getUISchema();\n\n    if (uiSchema.find(schema => schema.name === 'credentials.passcode')) {\n      this.save = loc('oie.primaryauth.submit', 'login');\n    } // Precedence for pre-filling identifier field:\n    // 1. Use username/identifier from the config.\n    // 2. Use identifier value returned in remediation response (model will have this attr set if it's there) \n    // 3. Use value from the \"remember my username\" cookie.\n\n\n    if (this._shouldAddUsername(uiSchema)) {\n      // Set username/identifier from the config (i.e. config.username)\n      this.model.set('identifier', this.settings.get('username'));\n    } else if (!this.model.get('identifier') && this._shouldApplyRememberMyUsername(uiSchema)) {\n      // Use value from cookie if the remediation did not return identifier value.\n      this._applyRememberMyUsername();\n    }\n  },\n  saveForm: function () {\n    // Ideally this can be added to a \"preSaveForm\" handler - but keeping this here for now.\n    if (!this.settings.get('features.deviceFingerprinting')) {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n      return;\n    } // Before the XHR is made for \"identify\", we'll generate this one-time use fingerprint via\n    // a hidden-iframe (similar to authn/v1 flows)\n\n\n    const fingerprintData = {\n      oktaDomainUrl: this.settings.get('baseUrl'),\n      element: this.$el\n    }; // For certain flows, we need to generate a device fingerprint\n    // to determine if we need to send a \"New Device Sign-on Notification\".\n    // In the future, this should be handled completely by okta-auth-js OKTA-418160\n\n    DeviceFingerprinting.generateDeviceFingerprint(fingerprintData).then(fingerprint => {\n      this.options.appState.set('deviceFingerprint', fingerprint);\n    }).catch(() => {\n      /* Keep going even if device fingerprint fails */\n    }).finally(() => {\n      BaseForm.prototype.saveForm.apply(this, arguments);\n    });\n  },\n  render: function () {\n    BaseForm.prototype.render.apply(this, arguments); // Launch Device Authenticator\n\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_AUTHENTICATOR)) {\n      this.add(SignInWithDeviceOption, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    }\n\n    if (this.options.appState.hasRemediationObject(FORMS.LAUNCH_WEBAUTHN_AUTHENTICATOR)) {\n      this.add(signInWithWebAuthn, '.o-form-fieldset-container', false, true, {\n        isRequired: false\n      });\n    } // add forgot password link and external idps buttons if needed\n\n\n    const idpButtons = createIdpButtons(this.options);\n\n    if (Array.isArray(idpButtons) && idpButtons.length) {\n      // Add the forgot password link before the buttons for multiple IDPs\n      this._addForgotPasswordView();\n\n      this._addIdpView(idpButtons);\n    }\n\n    const customButtons = createCustomButtons(this.options.settings);\n\n    if (Array.isArray(customButtons) && customButtons.length) {\n      this.add(customButtonsView, {\n        selector: '.o-form-button-bar',\n        options: {\n          customButtons: customButtons,\n          addSeparateLine: true\n        }\n      });\n    }\n  },\n  postRender: function () {\n    BaseForm.prototype.postRender.apply(this, arguments); // When a user enters invalid credentials, /introspect returns an error,\n    // along with a user object containing the identifier entered by the user.\n\n    this.$el.find('.identifier-container').remove();\n  },\n\n  /**\n   * Update UI schemas for customization from .widgetrc.js or Admin Customization settings page.\n   * @returns Array\n   */\n  getUISchema: function () {\n    const schemas = BaseForm.prototype.getUISchema.apply(this, arguments);\n    const {\n      settings: settings\n    } = this.options;\n    const identifierExplainLabeli18nKey = 'primaryauth.username.tooltip';\n    const passwordExplainLabeli18nKey = 'primaryauth.password.tooltip';\n    let newSchemas = schemas.map(schema => {\n      let newSchema = { ...schema\n      };\n\n      if (schema.name === 'identifier') {\n        if (isCustomizedI18nKey(identifierExplainLabeli18nKey, settings)) {\n          newSchema = { ...newSchema,\n            explain: loc(identifierExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        } // We enable the browser's autocomplete for the identifier input\n        // because we want to allow the user to choose from previously used identifiers.\n\n\n        newSchema = { ...newSchema,\n          autoComplete: 'identifier'\n        };\n      } else if (schema.name === 'credentials.passcode') {\n        newSchema = { ...newSchema,\n          autoComplete: 'current-password'\n        };\n\n        if (isCustomizedI18nKey(passwordExplainLabeli18nKey, settings)) {\n          newSchema = { ...newSchema,\n            explain: loc(passwordExplainLabeli18nKey, 'login'),\n            'explain-top': true\n          };\n        }\n      }\n\n      return newSchema;\n    }); // If showKeepMeSignedIn is explicitly set to false, we ensure we don't display\n    // the \"Keep me signed in\" checkbox\n\n    if (this.settings.get('features.showKeepMeSignedIn') === false) {\n      newSchemas = newSchemas.filter(schema => schema.name !== 'rememberMe');\n    }\n\n    return newSchemas;\n  },\n  showCustomFormErrorCallout: function (error, messages) {\n    var _error$responseJSON, _error$responseJSON$e;\n\n    if (!(error !== null && error !== void 0 && (_error$responseJSON = error.responseJSON) !== null && _error$responseJSON !== void 0 && (_error$responseJSON$e = _error$responseJSON.errorSummaryKeys) !== null && _error$responseJSON$e !== void 0 && _error$responseJSON$e.includes(CUSTOM_ACCESS_DENIED_KEY))) {\n      return false;\n    }\n\n    const message = messages.find(message => message.i18n.key === CUSTOM_ACCESS_DENIED_KEY);\n\n    if (!message) {\n      return false;\n    }\n\n    const {\n      errorSummary: errorSummary\n    } = error.responseJSON;\n    const options = {\n      type: 'error',\n      content: new CustomAccessDeniedErrorMessage({\n        message: errorSummary,\n        links: message.links\n      })\n    };\n    this.showMessages(createCallout(options));\n    return true;\n  },\n  _addForgotPasswordView: function () {\n    const forgotPasswordLink = getForgotPasswordLink(this.options.appState, this.options.settings);\n\n    if (forgotPasswordLink.length) {\n      this.add('<div class=\"links-primary\"></div>', {\n        selector: '.o-form-button-bar'\n      });\n      this.add(Link, {\n        selector: '.links-primary',\n        options: forgotPasswordLink[0]\n      });\n    }\n  },\n  _addIdpView: function (idpButtons) {\n    // We check the 'idpDisplay' option config to determine whether to render the idp buttons \n    // above or below the login fields\n    const idpDisplay = this.options.settings.get('idpDisplay');\n    const isPrimaryIdpDisplay = idpDisplay && idpDisplay.toUpperCase() === 'PRIMARY';\n    this.add(signInWithIdps, {\n      prepend: isPrimaryIdpDisplay,\n      selector: isPrimaryIdpDisplay ? '.o-form-fieldset-container' : '.o-form-button-bar',\n      options: {\n        idpButtons: idpButtons,\n        isPrimaryIdpDisplay: isPrimaryIdpDisplay\n      }\n    });\n  },\n  _shouldAddUsername: function (uiSchema) {\n    // We pre-populate the identifier/username field only if we're in an identifier\n    // form and if the option is passed in.\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('username');\n  },\n  _shouldApplyRememberMyUsername: function (uiSchema) {\n    return uiSchema.find(schema => schema.name === 'identifier') && this.settings.get('features.rememberMe') && this.settings.get('features.rememberMyUsernameOnOIE');\n  },\n\n  /**\n   * When \"Remember My Username\" is enabled, we pre-fill the identifier\n   * field with the saved userName cookie. The cookie would have been originally\n   * saved when submitting the form previously.\n   */\n  _applyRememberMyUsername: function () {\n    const cookieUsername = fn.getCookieUsername();\n\n    if (cookieUsername) {\n      this.model.set('identifier', cookieUsername);\n    }\n  }\n});\nvar IdentifierView = BaseView.extend({\n  Body: Body,\n  createModelClass: function () {\n    const ModelClass = BaseView.prototype.createModelClass.apply(this, arguments); // customize pre-submit form validation inline error messages\n\n    const identifierRequiredi18nKey = 'error.username.required';\n    const passwordRequiredi18nKey = 'error.password.required';\n    const props = ModelClass.prototype.props;\n\n    const validate = attr => {\n      const inlineErrors = {};\n      const isEmptyIdentifier = props['identifier'] && !(attr !== null && attr !== void 0 && attr['identifier']);\n      const isEmptyPassword = props['credentials.passcode'] && !(attr !== null && attr !== void 0 && attr['credentials.passcode']);\n\n      if (isEmptyIdentifier && isCustomizedI18nKey(identifierRequiredi18nKey, this.settings)) {\n        inlineErrors['identifier'] = loc(identifierRequiredi18nKey, 'login');\n      }\n\n      if (isEmptyPassword && isCustomizedI18nKey(passwordRequiredi18nKey, this.settings)) {\n        inlineErrors['credentials.passcode'] = loc(passwordRequiredi18nKey, 'login');\n      }\n\n      return inlineErrors;\n    };\n\n    return ModelClass.extend({\n      validate: validate\n    });\n  },\n  initialize: function () {\n    // Override Footer by overriding showForgotPasswordLink method\n    this.Footer = IdentifierFooter.extend({\n      showForgotPasswordLink: () => {\n        // We don't add the forgot password link in the footer if SIW renders multi IDPs,\n        // instead in that case we add it before the IDP buttons in IdentifierView as primary links.\n        const idpButtons = createIdpButtons(this.options);\n        return !this.options.appState.isIdentifierOnlyView() && (!Array.isArray(idpButtons) || idpButtons.length === 0);\n      }\n    });\n  },\n  postRender: function () {\n    BaseView.prototype.postRender.apply(this, arguments); // If user entered identifier is not found, API sends back a message with a link to sign up\n    // This is the click handler for that link\n\n    const appState = this.options.appState;\n    this.$el.find('.js-sign-up').click(function () {\n      appState.trigger('invokeAction', FORMS.SELECT_ENROLL_PROFILE);\n      return false;\n    });\n  }\n});\n\nexport { IdentifierView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}