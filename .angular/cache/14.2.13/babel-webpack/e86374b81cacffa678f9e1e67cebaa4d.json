{"ast":null,"code":"import oktaUnderscore from '../../../util/underscore-wrapper.js';\nimport BaseView from '../../BaseView.js';\nimport FormUtil from '../helpers/FormUtil.js';\nconst proto = {\n  className: function () {\n    return 'o-form-button-bar';\n  },\n  buttonOrder: ['previous', 'save', 'cancel'],\n  initialize: function (options) {\n    const buttonConfigs = {\n      previous: {\n        type: 'previous'\n      },\n      save: {\n        type: 'save',\n        text: oktaUnderscore.resultCtx(options, 'save', this),\n        id: oktaUnderscore.resultCtx(options, 'saveId', this),\n        className: oktaUnderscore.resultCtx(options, 'saveClassName', this)\n      },\n      cancel: {\n        type: 'cancel',\n        text: oktaUnderscore.resultCtx(options, 'cancel', this)\n      }\n    };\n    this.__getButtonOrder(options).forEach(buttonName => {\n      this.addButton(buttonConfigs[buttonName]);\n    });\n  },\n  /**\n   * Adds a buttomn to the toolbar\n   * @param {Object} params button parameters\n   * @param {Object} options {@link Okta.View#add} options\n   */\n  addButton: function (params, options) {\n    return this.add(FormUtil.createButton(params), options);\n  },\n  __getButtonOrder: function (options) {\n    const buttonOrder = oktaUnderscore.resultCtx(options, 'buttonOrder', this, this.buttonOrder);\n    const buttonsToSkip = [];\n    if (options.noSubmitButton) {\n      buttonsToSkip.push('save');\n    }\n    if (options.noCancelButton) {\n      buttonsToSkip.push('cancel');\n    }\n    if (!options.hasPrevStep) {\n      buttonsToSkip.push('previous');\n    }\n    return oktaUnderscore.without(buttonOrder, ...buttonsToSkip);\n  }\n};\nvar Toolbar = BaseView.extend(proto);\nexport { Toolbar as default };","map":{"version":3,"names":["oktaUnderscore","BaseView","FormUtil","proto","className","buttonOrder","initialize","options","buttonConfigs","previous","type","save","text","resultCtx","id","cancel","__getButtonOrder","forEach","buttonName","addButton","params","add","createButton","buttonsToSkip","noSubmitButton","push","noCancelButton","hasPrevStep","without","Toolbar","extend","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/views/forms/components/Toolbar.js"],"sourcesContent":["import oktaUnderscore from '../../../util/underscore-wrapper.js';\nimport BaseView from '../../BaseView.js';\nimport FormUtil from '../helpers/FormUtil.js';\n\nconst proto = {\n  className: function () {\n    return 'o-form-button-bar';\n  },\n  buttonOrder: ['previous', 'save', 'cancel'],\n  initialize: function (options) {\n    const buttonConfigs = {\n      previous: {\n        type: 'previous'\n      },\n      save: {\n        type: 'save',\n        text: oktaUnderscore.resultCtx(options, 'save', this),\n        id: oktaUnderscore.resultCtx(options, 'saveId', this),\n        className: oktaUnderscore.resultCtx(options, 'saveClassName', this)\n      },\n      cancel: {\n        type: 'cancel',\n        text: oktaUnderscore.resultCtx(options, 'cancel', this)\n      }\n    };\n\n    this.__getButtonOrder(options).forEach(buttonName => {\n      this.addButton(buttonConfigs[buttonName]);\n    });\n  },\n\n  /**\n   * Adds a buttomn to the toolbar\n   * @param {Object} params button parameters\n   * @param {Object} options {@link Okta.View#add} options\n   */\n  addButton: function (params, options) {\n    return this.add(FormUtil.createButton(params), options);\n  },\n  __getButtonOrder: function (options) {\n    const buttonOrder = oktaUnderscore.resultCtx(options, 'buttonOrder', this, this.buttonOrder);\n    const buttonsToSkip = [];\n\n    if (options.noSubmitButton) {\n      buttonsToSkip.push('save');\n    }\n\n    if (options.noCancelButton) {\n      buttonsToSkip.push('cancel');\n    }\n\n    if (!options.hasPrevStep) {\n      buttonsToSkip.push('previous');\n    }\n\n    return oktaUnderscore.without(buttonOrder, ...buttonsToSkip);\n  }\n};\nvar Toolbar = BaseView.extend(proto);\n\nexport { Toolbar as default };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,qCAAqC;AAChE,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,MAAMC,KAAK,GAAG;EACZC,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,OAAO,mBAAmB;EAC5B,CAAC;EACDC,WAAW,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC;EAC3CC,UAAU,EAAE,SAAAA,CAAUC,OAAO,EAAE;IAC7B,MAAMC,aAAa,GAAG;MACpBC,QAAQ,EAAE;QACRC,IAAI,EAAE;MACR,CAAC;MACDC,IAAI,EAAE;QACJD,IAAI,EAAE,MAAM;QACZE,IAAI,EAAEZ,cAAc,CAACa,SAAS,CAACN,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC;QACrDO,EAAE,EAAEd,cAAc,CAACa,SAAS,CAACN,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC;QACrDH,SAAS,EAAEJ,cAAc,CAACa,SAAS,CAACN,OAAO,EAAE,eAAe,EAAE,IAAI;MACpE,CAAC;MACDQ,MAAM,EAAE;QACNL,IAAI,EAAE,QAAQ;QACdE,IAAI,EAAEZ,cAAc,CAACa,SAAS,CAACN,OAAO,EAAE,QAAQ,EAAE,IAAI;MACxD;IACF,CAAC;IAED,IAAI,CAACS,gBAAgB,CAACT,OAAO,CAAC,CAACU,OAAO,CAACC,UAAU,IAAI;MACnD,IAAI,CAACC,SAAS,CAACX,aAAa,CAACU,UAAU,CAAC,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;AACA;AACA;EACEC,SAAS,EAAE,SAAAA,CAAUC,MAAM,EAAEb,OAAO,EAAE;IACpC,OAAO,IAAI,CAACc,GAAG,CAACnB,QAAQ,CAACoB,YAAY,CAACF,MAAM,CAAC,EAAEb,OAAO,CAAC;EACzD,CAAC;EACDS,gBAAgB,EAAE,SAAAA,CAAUT,OAAO,EAAE;IACnC,MAAMF,WAAW,GAAGL,cAAc,CAACa,SAAS,CAACN,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,CAACF,WAAW,CAAC;IAC5F,MAAMkB,aAAa,GAAG,EAAE;IAExB,IAAIhB,OAAO,CAACiB,cAAc,EAAE;MAC1BD,aAAa,CAACE,IAAI,CAAC,MAAM,CAAC;IAC5B;IAEA,IAAIlB,OAAO,CAACmB,cAAc,EAAE;MAC1BH,aAAa,CAACE,IAAI,CAAC,QAAQ,CAAC;IAC9B;IAEA,IAAI,CAAClB,OAAO,CAACoB,WAAW,EAAE;MACxBJ,aAAa,CAACE,IAAI,CAAC,UAAU,CAAC;IAChC;IAEA,OAAOzB,cAAc,CAAC4B,OAAO,CAACvB,WAAW,EAAE,GAAGkB,aAAa,CAAC;EAC9D;AACF,CAAC;AACD,IAAIM,OAAO,GAAG5B,QAAQ,CAAC6B,MAAM,CAAC3B,KAAK,CAAC;AAEpC,SAAS0B,OAAO,IAAIE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}