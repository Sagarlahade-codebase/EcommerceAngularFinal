{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\nconst getEmails = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (oktaAuth, options) {\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/emails',\n      method: 'GET',\n      accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n      transactionClassName: 'EmailTransaction'\n    });\n    return transaction;\n  });\n  return function getEmails(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst getEmail = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/emails/${id}`,\n      method: 'GET',\n      accessToken,\n      transactionClassName: 'EmailTransaction'\n    });\n    return transaction;\n  });\n  return function getEmail(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nconst addEmail = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      accessToken,\n      payload\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: '/idp/myaccount/emails',\n      method: 'POST',\n      payload,\n      accessToken,\n      transactionClassName: 'EmailTransaction'\n    });\n    return transaction;\n  });\n  return function addEmail(_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nconst deleteEmail = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/emails/${id}`,\n      method: 'DELETE',\n      accessToken\n    });\n    return transaction;\n  });\n  return function deleteEmail(_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nconst sendEmailChallenge = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      id,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/emails/${id}/challenge`,\n      method: 'POST',\n      accessToken,\n      transactionClassName: 'EmailChallengeTransaction'\n    });\n    return transaction;\n  });\n  return function sendEmailChallenge(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nconst getEmailChallenge = /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      emailId,\n      challengeId,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}`,\n      method: 'POST',\n      accessToken,\n      transactionClassName: 'EmailChallengeTransaction'\n    });\n    return transaction;\n  });\n  return function getEmailChallenge(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nconst verifyEmailChallenge = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator(function* (oktaAuth, options) {\n    const {\n      emailId,\n      challengeId,\n      payload,\n      accessToken\n    } = options;\n    const transaction = yield sendRequest(oktaAuth, {\n      url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}/verify`,\n      method: 'POST',\n      payload,\n      accessToken\n    });\n    return transaction;\n  });\n  return function verifyEmailChallenge(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport { addEmail, deleteEmail, getEmail, getEmailChallenge, getEmails, sendEmailChallenge, verifyEmailChallenge };","map":{"version":3,"names":["sendRequest","getEmails","_ref","_asyncToGenerator","oktaAuth","options","transaction","url","method","accessToken","transactionClassName","_x","_x2","apply","arguments","getEmail","_ref2","id","_x3","_x4","addEmail","_ref3","payload","_x5","_x6","deleteEmail","_ref4","_x7","_x8","sendEmailChallenge","_ref5","_x9","_x10","getEmailChallenge","_ref6","emailId","challengeId","_x11","_x12","verifyEmailChallenge","_ref7","_x13","_x14"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/myaccount/emailApi.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { sendRequest } from './request.js';\n\nconst getEmails = async (oktaAuth, options) => {\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/emails',\n        method: 'GET',\n        accessToken: options === null || options === void 0 ? void 0 : options.accessToken,\n        transactionClassName: 'EmailTransaction'\n    });\n    return transaction;\n};\nconst getEmail = async (oktaAuth, options) => {\n    const { id, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/emails/${id}`,\n        method: 'GET',\n        accessToken,\n        transactionClassName: 'EmailTransaction'\n    });\n    return transaction;\n};\nconst addEmail = async (oktaAuth, options) => {\n    const { accessToken, payload } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: '/idp/myaccount/emails',\n        method: 'POST',\n        payload,\n        accessToken,\n        transactionClassName: 'EmailTransaction'\n    });\n    return transaction;\n};\nconst deleteEmail = async (oktaAuth, options) => {\n    const { id, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/emails/${id}`,\n        method: 'DELETE',\n        accessToken\n    });\n    return transaction;\n};\nconst sendEmailChallenge = async (oktaAuth, options) => {\n    const { id, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/emails/${id}/challenge`,\n        method: 'POST',\n        accessToken,\n        transactionClassName: 'EmailChallengeTransaction'\n    });\n    return transaction;\n};\nconst getEmailChallenge = async (oktaAuth, options) => {\n    const { emailId, challengeId, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}`,\n        method: 'POST',\n        accessToken,\n        transactionClassName: 'EmailChallengeTransaction'\n    });\n    return transaction;\n};\nconst verifyEmailChallenge = async (oktaAuth, options) => {\n    const { emailId, challengeId, payload, accessToken } = options;\n    const transaction = await sendRequest(oktaAuth, {\n        url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}/verify`,\n        method: 'POST',\n        payload,\n        accessToken\n    });\n    return transaction;\n};\n\nexport { addEmail, deleteEmail, getEmail, getEmailChallenge, getEmails, sendEmailChallenge, verifyEmailChallenge };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}