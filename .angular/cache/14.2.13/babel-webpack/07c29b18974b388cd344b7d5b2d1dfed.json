{"ast":null,"code":"var is = require('./is');\nvar delegate = require('delegate');\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n  if (!target && !type && !callback) {\n    throw new Error('Missing required arguments');\n  }\n  if (!is.string(type)) {\n    throw new TypeError('Second argument must be a String');\n  }\n  if (!is.fn(callback)) {\n    throw new TypeError('Third argument must be a Function');\n  }\n  if (is.node(target)) {\n    return listenNode(target, type, callback);\n  } else if (is.nodeList(target)) {\n    return listenNodeList(target, type, callback);\n  } else if (is.string(target)) {\n    return listenSelector(target, type, callback);\n  } else {\n    throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n  }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n  node.addEventListener(type, callback);\n  return {\n    destroy: function () {\n      node.removeEventListener(type, callback);\n    }\n  };\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n  Array.prototype.forEach.call(nodeList, function (node) {\n    node.addEventListener(type, callback);\n  });\n  return {\n    destroy: function () {\n      Array.prototype.forEach.call(nodeList, function (node) {\n        node.removeEventListener(type, callback);\n      });\n    }\n  };\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n  return delegate(document.body, selector, type, callback);\n}\nmodule.exports = listen;","map":{"version":3,"names":["is","require","delegate","listen","target","type","callback","Error","string","TypeError","fn","node","listenNode","nodeList","listenNodeList","listenSelector","addEventListener","destroy","removeEventListener","Array","prototype","forEach","call","selector","document","body","module","exports"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/good-listener/src/listen.js"],"sourcesContent":["var is = require('./is');\nvar delegate = require('delegate');\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n"],"mappings":"AAAA,IAAIA,EAAE,GAAGC,OAAO,CAAC,MAAM,CAAC;AACxB,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,MAAMA,CAACC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE;EACpC,IAAI,CAACF,MAAM,IAAI,CAACC,IAAI,IAAI,CAACC,QAAQ,EAAE;IAC/B,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EACjD;EAEA,IAAI,CAACP,EAAE,CAACQ,MAAM,CAACH,IAAI,CAAC,EAAE;IAClB,MAAM,IAAII,SAAS,CAAC,kCAAkC,CAAC;EAC3D;EAEA,IAAI,CAACT,EAAE,CAACU,EAAE,CAACJ,QAAQ,CAAC,EAAE;IAClB,MAAM,IAAIG,SAAS,CAAC,mCAAmC,CAAC;EAC5D;EAEA,IAAIT,EAAE,CAACW,IAAI,CAACP,MAAM,CAAC,EAAE;IACjB,OAAOQ,UAAU,CAACR,MAAM,EAAEC,IAAI,EAAEC,QAAQ,CAAC;EAC7C,CAAC,MACI,IAAIN,EAAE,CAACa,QAAQ,CAACT,MAAM,CAAC,EAAE;IAC1B,OAAOU,cAAc,CAACV,MAAM,EAAEC,IAAI,EAAEC,QAAQ,CAAC;EACjD,CAAC,MACI,IAAIN,EAAE,CAACQ,MAAM,CAACJ,MAAM,CAAC,EAAE;IACxB,OAAOW,cAAc,CAACX,MAAM,EAAEC,IAAI,EAAEC,QAAQ,CAAC;EACjD,CAAC,MACI;IACD,MAAM,IAAIG,SAAS,CAAC,2EAA2E,CAAC;EACpG;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,UAAUA,CAACD,IAAI,EAAEN,IAAI,EAAEC,QAAQ,EAAE;EACtCK,IAAI,CAACK,gBAAgB,CAACX,IAAI,EAAEC,QAAQ,CAAC;EAErC,OAAO;IACHW,OAAO,EAAE,SAAAA,CAAA,EAAW;MAChBN,IAAI,CAACO,mBAAmB,CAACb,IAAI,EAAEC,QAAQ,CAAC;IAC5C;EACJ,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,cAAcA,CAACD,QAAQ,EAAER,IAAI,EAAEC,QAAQ,EAAE;EAC9Ca,KAAK,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAACT,QAAQ,EAAE,UAASF,IAAI,EAAE;IAClDA,IAAI,CAACK,gBAAgB,CAACX,IAAI,EAAEC,QAAQ,CAAC;EACzC,CAAC,CAAC;EAEF,OAAO;IACHW,OAAO,EAAE,SAAAA,CAAA,EAAW;MAChBE,KAAK,CAACC,SAAS,CAACC,OAAO,CAACC,IAAI,CAACT,QAAQ,EAAE,UAASF,IAAI,EAAE;QAClDA,IAAI,CAACO,mBAAmB,CAACb,IAAI,EAAEC,QAAQ,CAAC;MAC5C,CAAC,CAAC;IACN;EACJ,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,cAAcA,CAACQ,QAAQ,EAAElB,IAAI,EAAEC,QAAQ,EAAE;EAC9C,OAAOJ,QAAQ,CAACsB,QAAQ,CAACC,IAAI,EAAEF,QAAQ,EAAElB,IAAI,EAAEC,QAAQ,CAAC;AAC5D;AAEAoB,MAAM,CAACC,OAAO,GAAGxB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script"}