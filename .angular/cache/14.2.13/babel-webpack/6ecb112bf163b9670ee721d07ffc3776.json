{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\nimport { AuthenticatorKey } from '../types/api.js';\nclass SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n  constructor(remediation, values = {}, options = {}) {\n    var _a;\n    super(remediation, values, options);\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = (_a = getAuthenticatorFromRemediation(remediation).options) === null || _a === void 0 ? void 0 : _a.some(({\n      relatesTo\n    }) => (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.key) === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [...(this.values.authenticators || []), {\n        key: AuthenticatorKey.OKTA_PASSWORD\n      }];\n    }\n  }\n}\nSelectAuthenticatorAuthenticate.remediationName = 'select-authenticator-authenticate';\nexport { SelectAuthenticatorAuthenticate };","map":{"version":3,"names":["SelectAuthenticator","getAuthenticatorFromRemediation","AuthenticatorKey","SelectAuthenticatorAuthenticate","constructor","remediation","values","options","_a","isRecoveryFlow","flow","hasPasswordInOptions","some","relatesTo","key","OKTA_PASSWORD","password","authenticators","remediationName"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/SelectAuthenticatorAuthenticate.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { SelectAuthenticator } from './Base/SelectAuthenticator.js';\nimport { getAuthenticatorFromRemediation } from './util.js';\nimport { AuthenticatorKey } from '../types/api.js';\n\nclass SelectAuthenticatorAuthenticate extends SelectAuthenticator {\n    constructor(remediation, values = {}, options = {}) {\n        var _a;\n        super(remediation, values, options);\n        const isRecoveryFlow = this.options.flow === 'recoverPassword';\n        const hasPasswordInOptions = (_a = getAuthenticatorFromRemediation(remediation)\n            .options) === null || _a === void 0 ? void 0 : _a.some(({ relatesTo }) => (relatesTo === null || relatesTo === void 0 ? void 0 : relatesTo.key) === AuthenticatorKey.OKTA_PASSWORD);\n        if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n            this.values.authenticators = [\n                ...this.values.authenticators || [],\n                { key: AuthenticatorKey.OKTA_PASSWORD }\n            ];\n        }\n    }\n}\nSelectAuthenticatorAuthenticate.remediationName = 'select-authenticator-authenticate';\n\nexport { SelectAuthenticatorAuthenticate };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,QAAQ,+BAA+B;AACnE,SAASC,+BAA+B,QAAQ,WAAW;AAC3D,SAASC,gBAAgB,QAAQ,iBAAiB;AAElD,MAAMC,+BAA+B,SAASH,mBAAmB,CAAC;EAC9DI,WAAWA,CAACC,WAAW,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAChD,IAAIC,EAAE;IACN,KAAK,CAACH,WAAW,EAAEC,MAAM,EAAEC,OAAO,CAAC;IACnC,MAAME,cAAc,GAAG,IAAI,CAACF,OAAO,CAACG,IAAI,KAAK,iBAAiB;IAC9D,MAAMC,oBAAoB,GAAG,CAACH,EAAE,GAAGP,+BAA+B,CAACI,WAAW,CAAC,CAC1EE,OAAO,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,IAAI,CAAC,CAAC;MAAEC;IAAU,CAAC,KAAK,CAACA,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACC,GAAG,MAAMZ,gBAAgB,CAACa,aAAa,CAAC;IACvL,IAAIJ,oBAAoB,KAAKF,cAAc,IAAI,IAAI,CAACH,MAAM,CAACU,QAAQ,CAAC,EAAE;MAClE,IAAI,CAACV,MAAM,CAACW,cAAc,GAAG,CACzB,IAAG,IAAI,CAACX,MAAM,CAACW,cAAc,IAAI,EAAE,GACnC;QAAEH,GAAG,EAAEZ,gBAAgB,CAACa;MAAc,CAAC,CAC1C;IACL;EACJ;AACJ;AACAZ,+BAA+B,CAACe,eAAe,GAAG,mCAAmC;AAErF,SAASf,+BAA+B","ignoreList":[]},"metadata":{},"sourceType":"module"}