{"ast":null,"code":"import { loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { HINTS, ATTR_FORMAT } from '../RemediationConstants.js';\nimport fn from '../../../util/CountryUtil.js';\nimport TimeZone from '../../view-builder/utils/TimeZone.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst ionOptionsToUiOptions = options => {\n  const result = {};\n  options.forEach(({\n    value: value,\n    label: label\n  }) => {\n    result[value] = label;\n  });\n  return result;\n};\nconst getPasswordUiSchema = settings => ({\n  type: 'password',\n  params: {\n    showPasswordToggle: settings.get('showPasswordToggle')\n  }\n});\nconst getCaptchaUiSchema = () => {\n  return {\n    type: 'captcha'\n  };\n};\nconst timezoneUISchema = {\n  type: 'select',\n  wide: true\n};\nconst shouldRenderAsRadio = name => name.indexOf('methodType') >= 0 || name.indexOf('channel') >= 0;\nconst optionalType = ['text', 'radio', 'select'];\nconst populateUISchemaForDisplay = (uiSchema, ionField) => {\n  var _ionField$value;\n  const display = ionField === null || ionField === void 0 ? void 0 : (_ionField$value = ionField.value) === null || _ionField$value === void 0 ? void 0 : _ionField$value.value;\n  uiSchema.type = display.inputType;\n  if (display.inputType === 'radio') {\n    uiSchema.options = display.options;\n  } else if (display.inputType === 'select') {\n    uiSchema.wide = true;\n    if (display.format === ATTR_FORMAT.COUNTRY_CODE) {\n      uiSchema.options = Object.assign({\n        '': ''\n      }, fn.getCountryCode());\n    } else {\n      //it will create a placeholder for dropdowns, by default it will show 'Select an Option'\n      uiSchema.options = Object.assign({\n        '': ''\n      }, ionOptionsToUiOptions(display.options));\n    }\n  }\n};\nconst populateUISchemaForRadio = (uiSchema, ionFormField) => {\n  // e.g. { name: 'methodType', options: [ {label: 'sms'} ], type: 'string' | null }\n  uiSchema.type = 'radio'; // set the default value to the first value.\n\n  ionFormField.value = ionFormField.options[0].value;\n};\nconst createUiSchemaForString = (ionFormField, remediationForm, transformedResp, createUISchema, settings) => {\n  const uiSchema = {\n    type: 'text'\n  }; // e.g. { name: 'password', secret: true }\n\n  if (ionFormField.secret === true) {\n    Object.assign(uiSchema, getPasswordUiSchema(settings));\n  }\n  if (ionFormField.hint === HINTS.CAPTCHA) {\n    Object.assign(uiSchema, getCaptchaUiSchema());\n  }\n  if (ionFormField.name === 'userProfile.timezone') {\n    Object.assign(uiSchema, timezoneUISchema);\n    uiSchema.options = Object.assign({\n      '': ''\n    }, TimeZone);\n  }\n  if (Array.isArray(ionFormField.options) && ionFormField.options[0] && ionFormField.options[0].value) {\n    const ionField = ionFormField.options[0];\n    if (ionField.label === 'display') {\n      populateUISchemaForDisplay(uiSchema, ionField);\n    } else if (shouldRenderAsRadio(ionFormField.name)) {\n      populateUISchemaForRadio(uiSchema, ionFormField);\n    } else {\n      // default to select (dropdown). no particular reason (certainly can default to radio.)\n      // e.g. { name: 'questionKey', options: [], type: 'string' | null }\n      uiSchema.type = 'select';\n      uiSchema.wide = true;\n      uiSchema.options = ionOptionsToUiOptions(ionFormField.options);\n    }\n  } // set a label as 'Optional' for supported optional element types\n\n  if (ionFormField.required === false && optionalType.includes(uiSchema.type)) {\n    uiSchema.sublabel = loc('oie.form.field.optional', 'login');\n  }\n  return uiSchema;\n};\nexport { createUiSchemaForString as default };","map":{"version":3,"names":["loc","HINTS","ATTR_FORMAT","fn","TimeZone","ionOptionsToUiOptions","options","result","forEach","value","label","getPasswordUiSchema","settings","type","params","showPasswordToggle","get","getCaptchaUiSchema","timezoneUISchema","wide","shouldRenderAsRadio","name","indexOf","optionalType","populateUISchemaForDisplay","uiSchema","ionField","_ionField$value","display","inputType","format","COUNTRY_CODE","Object","assign","getCountryCode","populateUISchemaForRadio","ionFormField","createUiSchemaForString","remediationForm","transformedResp","createUISchema","secret","hint","CAPTCHA","Array","isArray","required","includes","sublabel","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/ion/ui-schema/ion-string-handler.js"],"sourcesContent":["import { loc } from '../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport { HINTS, ATTR_FORMAT } from '../RemediationConstants.js';\nimport fn from '../../../util/CountryUtil.js';\nimport TimeZone from '../../view-builder/utils/TimeZone.js';\n\n/*!\n * Copyright (c) 2020, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nconst ionOptionsToUiOptions = options => {\n  const result = {};\n  options.forEach(({\n    value: value,\n    label: label\n  }) => {\n    result[value] = label;\n  });\n  return result;\n};\n\nconst getPasswordUiSchema = settings => ({\n  type: 'password',\n  params: {\n    showPasswordToggle: settings.get('showPasswordToggle')\n  }\n});\n\nconst getCaptchaUiSchema = () => {\n  return {\n    type: 'captcha'\n  };\n};\n\nconst timezoneUISchema = {\n  type: 'select',\n  wide: true\n};\n\nconst shouldRenderAsRadio = name => name.indexOf('methodType') >= 0 || name.indexOf('channel') >= 0;\n\nconst optionalType = ['text', 'radio', 'select'];\n\nconst populateUISchemaForDisplay = (uiSchema, ionField) => {\n  var _ionField$value;\n\n  const display = ionField === null || ionField === void 0 ? void 0 : (_ionField$value = ionField.value) === null || _ionField$value === void 0 ? void 0 : _ionField$value.value;\n  uiSchema.type = display.inputType;\n\n  if (display.inputType === 'radio') {\n    uiSchema.options = display.options;\n  } else if (display.inputType === 'select') {\n    uiSchema.wide = true;\n\n    if (display.format === ATTR_FORMAT.COUNTRY_CODE) {\n      uiSchema.options = Object.assign({\n        '': ''\n      }, fn.getCountryCode());\n    } else {\n      //it will create a placeholder for dropdowns, by default it will show 'Select an Option'\n      uiSchema.options = Object.assign({\n        '': ''\n      }, ionOptionsToUiOptions(display.options));\n    }\n  }\n};\n\nconst populateUISchemaForRadio = (uiSchema, ionFormField) => {\n  // e.g. { name: 'methodType', options: [ {label: 'sms'} ], type: 'string' | null }\n  uiSchema.type = 'radio'; // set the default value to the first value.\n\n  ionFormField.value = ionFormField.options[0].value;\n};\n\nconst createUiSchemaForString = (ionFormField, remediationForm, transformedResp, createUISchema, settings) => {\n  const uiSchema = {\n    type: 'text'\n  }; // e.g. { name: 'password', secret: true }\n\n  if (ionFormField.secret === true) {\n    Object.assign(uiSchema, getPasswordUiSchema(settings));\n  }\n\n  if (ionFormField.hint === HINTS.CAPTCHA) {\n    Object.assign(uiSchema, getCaptchaUiSchema());\n  }\n\n  if (ionFormField.name === 'userProfile.timezone') {\n    Object.assign(uiSchema, timezoneUISchema);\n    uiSchema.options = Object.assign({\n      '': ''\n    }, TimeZone);\n  }\n\n  if (Array.isArray(ionFormField.options) && ionFormField.options[0] && ionFormField.options[0].value) {\n    const ionField = ionFormField.options[0];\n\n    if (ionField.label === 'display') {\n      populateUISchemaForDisplay(uiSchema, ionField);\n    } else if (shouldRenderAsRadio(ionFormField.name)) {\n      populateUISchemaForRadio(uiSchema, ionFormField);\n    } else {\n      // default to select (dropdown). no particular reason (certainly can default to radio.)\n      // e.g. { name: 'questionKey', options: [], type: 'string' | null }\n      uiSchema.type = 'select';\n      uiSchema.wide = true;\n      uiSchema.options = ionOptionsToUiOptions(ionFormField.options);\n    }\n  } // set a label as 'Optional' for supported optional element types\n\n\n  if (ionFormField.required === false && optionalType.includes(uiSchema.type)) {\n    uiSchema.sublabel = loc('oie.form.field.optional', 'login');\n  }\n\n  return uiSchema;\n};\n\nexport { createUiSchemaForString as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}