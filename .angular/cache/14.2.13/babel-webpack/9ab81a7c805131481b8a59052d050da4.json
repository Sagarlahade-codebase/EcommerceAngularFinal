{"ast":null,"code":"import config from '../config/config.json.js';\nimport fetch from 'cross-fetch';\nimport country from '../../packages/@okta/i18n/src/json/country.json.js';\nimport login from '../../packages/@okta/i18n/src/json/login.json.js';\nimport Q from 'q';\nimport _ from '../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport fn from './BrowserFeatures.js';\nimport Logger from './Logger.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst STORAGE_KEY = 'osw.languages';\n\n/**\n * Converts options to our internal format, which distinguishes between\n * login and country bundles.\n *\n * Example options.i18n passed in by the developer:\n * {\n *   'en': {\n *     'needhelp': 'need help override',\n *     'primaryauth.title': 'new sign in text',\n *     'country.JP' = 'Japan, Japan'\n *   }\n * }\n *\n * Parsed:\n * {\n *  'en': {\n *    'login': {\n *      'needhelp': 'need help override',\n *      'primaryauth.title': 'new sign in text',\n *    },\n *    'country': {\n *      'JP': 'Japan, Japan'\n *    }\n *  }\n * }\n */\nfunction parseOverrides(i18n) {\n  if (!i18n) {\n    return {};\n  }\n  const i18nWithLowerCaseKeys = {};\n  _.each(_.keys(i18n), function (key) {\n    i18nWithLowerCaseKeys[key.toLowerCase()] = i18n[key];\n  });\n  return _.mapObject(i18nWithLowerCaseKeys, function (props) {\n    const mapped = {\n      login: {},\n      country: {}\n    };\n    if (!_.isObject(props)) {\n      throw new Error('Invalid format for \"i18n\"');\n    }\n    _.each(props, function (val, key) {\n      const split = key.split(/^country\\./);\n      if (split.length > 1) {\n        mapped.country[split[1]] = val;\n      } else {\n        mapped.login[split[0]] = val;\n      }\n    });\n    return mapped;\n  });\n} // Caching: We only bundle English by default in the Sign-In Widget. Other\n// languages are loaded on demand and cached in localStorage. These languages\n// are tied to the version of the widget - when it bumps, we reset the cache.\n\nfunction getCachedLanguages() {\n  let storage = JSON.parse(localStorage.getItem(STORAGE_KEY));\n  if (!storage || storage.version !== config.version) {\n    storage = {\n      version: config.version\n    };\n  }\n  return storage;\n}\nfunction addLanguageToCache(language, loginJson, countryJson) {\n  const current = getCachedLanguages();\n  current[language] = {\n    login: loginJson,\n    country: countryJson\n  };\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(current));\n} // By default, the assets.bundleUrl is tied to the Okta CDN.\n//\n// There are two overrides available for modifying where we load the asset\n// bundles from:\n//\n// 1. assets.baseUrl\n//\n//    This is the base path the OSW pulls assets from, which in this case is\n//    the Okta CDN. Override this config option if you want to host the\n//    files on your own domain, or if you're using a new version of the\n//    widget whose language files haven't been published to the CDN yet.\n//\n// 2. assets.rewrite\n//\n//    This is a function that can be used to modify the path + fileName of\n//    the bundle we're loading, relative to the baseUrl. When called, it\n//    will pass the current path, and expect the new path to be returned.\n//    This is useful, for example, if your build process has an extra\n//    cachebusting step, i.e:\n//\n//    function rewrite(file) {\n//      // file: /labels/json/login_ja.json\n//      return file.replace('.json', '.' + md5file(file) + '.json');\n//    }\n//\n// Note: Most developers will not need to use these overrides - the default\n// is to use the Okta CDN and to use the same path + file structure the\n// widget module publishes by default.\n\nfunction fetchJson(bundle, language, assets) {\n  // Our bundles use _ to separate country and region, i.e:\n  // zh-CN -> zh_CN\n  const languageCode = language.replace('-', '_');\n  const path = assets.rewrite(encodeURI(`/labels/json/${bundle}_${languageCode}.json`));\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'text/plain'\n  };\n  const mode = 'no-cors';\n  return fetch(assets.baseUrl + path, {\n    method: 'GET',\n    headers: headers,\n    mode: mode\n  }).then(res => res.text()).then(txt => JSON.parse(txt));\n}\nfunction getBundles(language, assets, supportedLanguages) {\n  // Two special cases:\n  // 1. Default language is already bundled with the widget\n  // 2. If the language is not in our config file, it means that they've\n  //    probably defined it on their own.\n  if (language === config.defaultLanguage || !_.contains(supportedLanguages, language)) {\n    return Q({});\n  } //local storage does not work correctly with android web views (embeded browers)\n  //so skip the caching and just make the request to get the local info\n\n  const localStorageIsSupported = !fn.localStorageIsNotSupported();\n  if (localStorageIsSupported) {\n    const cached = getCachedLanguages();\n    if (cached[language]) {\n      return Q(cached[language]);\n    }\n  }\n  return Q.all([fetchJson('login', language, assets), fetchJson('country', language, assets)]).spread(function (loginJson, countryJson) {\n    if (localStorageIsSupported) {\n      addLanguageToCache(language, loginJson, countryJson);\n    }\n    return {\n      login: loginJson,\n      country: countryJson\n    };\n  }).catch(function () {\n    // If there is an error, this will default to the bundled language and\n    // we will no longer try to load the language this session.\n    Logger.warn('Unable to load language: ' + language);\n    return {};\n  });\n}\nvar Bundles = {\n  login: login,\n  country: country,\n  // Courage components within the sign in widget point to courage bundle to look\n  // up i18nkeys. Since we dont have courage.properties inside the sign in widget\n  // we are pointing courage bundle to login.\n  courage: login,\n  currentLanguage: null,\n  isLoaded: function (language) {\n    return this.currentLanguage === language;\n  },\n  remove: function () {\n    this.currentLanguage = null;\n  },\n  loadLanguage: function (language, overrides, assets, supportedLanguages) {\n    const parsedOverrides = parseOverrides(overrides);\n    const lowerCaseLanguage = language.toLowerCase();\n    return getBundles(language, assets, supportedLanguages).then(bundles => {\n      // Always extend from the built in defaults in the event that some\n      // properties are not translated\n      this.login = _.extend({}, login, bundles.login);\n      this.country = _.extend({}, country, bundles.country);\n      this.courage = _.extend({}, login, bundles.login);\n      if (parsedOverrides[lowerCaseLanguage]) {\n        _.extend(this.login, parsedOverrides[lowerCaseLanguage]['login']);\n        _.extend(this.country, parsedOverrides[lowerCaseLanguage]['country']);\n        _.extend(this.courage, parsedOverrides[lowerCaseLanguage]['login']);\n      }\n      this.currentLanguage = language;\n    });\n  }\n};\nexport { Bundles as default };","map":{"version":3,"names":["config","fetch","country","login","Q","_","fn","Logger","STORAGE_KEY","parseOverrides","i18n","i18nWithLowerCaseKeys","each","keys","key","toLowerCase","mapObject","props","mapped","isObject","Error","val","split","length","getCachedLanguages","storage","JSON","parse","localStorage","getItem","version","addLanguageToCache","language","loginJson","countryJson","current","setItem","stringify","fetchJson","bundle","assets","languageCode","replace","path","rewrite","encodeURI","headers","Accept","mode","baseUrl","method","then","res","text","txt","getBundles","supportedLanguages","defaultLanguage","contains","localStorageIsSupported","localStorageIsNotSupported","cached","all","spread","catch","warn","Bundles","courage","currentLanguage","isLoaded","remove","loadLanguage","overrides","parsedOverrides","lowerCaseLanguage","bundles","extend","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/Bundles.js"],"sourcesContent":["import config from '../config/config.json.js';\nimport fetch from 'cross-fetch';\nimport country from '../../packages/@okta/i18n/src/json/country.json.js';\nimport login from '../../packages/@okta/i18n/src/json/login.json.js';\nimport Q from 'q';\nimport _ from '../../packages/@okta/courage-dist/esm/lib/underscore/underscore-min.js';\nimport fn from './BrowserFeatures.js';\nimport Logger from './Logger.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst STORAGE_KEY = 'osw.languages';\n\n/**\n * Converts options to our internal format, which distinguishes between\n * login and country bundles.\n *\n * Example options.i18n passed in by the developer:\n * {\n *   'en': {\n *     'needhelp': 'need help override',\n *     'primaryauth.title': 'new sign in text',\n *     'country.JP' = 'Japan, Japan'\n *   }\n * }\n *\n * Parsed:\n * {\n *  'en': {\n *    'login': {\n *      'needhelp': 'need help override',\n *      'primaryauth.title': 'new sign in text',\n *    },\n *    'country': {\n *      'JP': 'Japan, Japan'\n *    }\n *  }\n * }\n */\nfunction parseOverrides(i18n) {\n  if (!i18n) {\n    return {};\n  }\n\n  const i18nWithLowerCaseKeys = {};\n\n  _.each(_.keys(i18n), function (key) {\n    i18nWithLowerCaseKeys[key.toLowerCase()] = i18n[key];\n  });\n\n  return _.mapObject(i18nWithLowerCaseKeys, function (props) {\n    const mapped = {\n      login: {},\n      country: {}\n    };\n\n    if (!_.isObject(props)) {\n      throw new Error('Invalid format for \"i18n\"');\n    }\n\n    _.each(props, function (val, key) {\n      const split = key.split(/^country\\./);\n\n      if (split.length > 1) {\n        mapped.country[split[1]] = val;\n      } else {\n        mapped.login[split[0]] = val;\n      }\n    });\n\n    return mapped;\n  });\n} // Caching: We only bundle English by default in the Sign-In Widget. Other\n// languages are loaded on demand and cached in localStorage. These languages\n// are tied to the version of the widget - when it bumps, we reset the cache.\n\n\nfunction getCachedLanguages() {\n  let storage = JSON.parse(localStorage.getItem(STORAGE_KEY));\n\n  if (!storage || storage.version !== config.version) {\n    storage = {\n      version: config.version\n    };\n  }\n\n  return storage;\n}\n\nfunction addLanguageToCache(language, loginJson, countryJson) {\n  const current = getCachedLanguages();\n  current[language] = {\n    login: loginJson,\n    country: countryJson\n  };\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(current));\n} // By default, the assets.bundleUrl is tied to the Okta CDN.\n//\n// There are two overrides available for modifying where we load the asset\n// bundles from:\n//\n// 1. assets.baseUrl\n//\n//    This is the base path the OSW pulls assets from, which in this case is\n//    the Okta CDN. Override this config option if you want to host the\n//    files on your own domain, or if you're using a new version of the\n//    widget whose language files haven't been published to the CDN yet.\n//\n// 2. assets.rewrite\n//\n//    This is a function that can be used to modify the path + fileName of\n//    the bundle we're loading, relative to the baseUrl. When called, it\n//    will pass the current path, and expect the new path to be returned.\n//    This is useful, for example, if your build process has an extra\n//    cachebusting step, i.e:\n//\n//    function rewrite(file) {\n//      // file: /labels/json/login_ja.json\n//      return file.replace('.json', '.' + md5file(file) + '.json');\n//    }\n//\n// Note: Most developers will not need to use these overrides - the default\n// is to use the Okta CDN and to use the same path + file structure the\n// widget module publishes by default.\n\n\nfunction fetchJson(bundle, language, assets) {\n  // Our bundles use _ to separate country and region, i.e:\n  // zh-CN -> zh_CN\n  const languageCode = language.replace('-', '_');\n  const path = assets.rewrite(encodeURI(`/labels/json/${bundle}_${languageCode}.json`));\n  const headers = {\n    Accept: 'application/json',\n    'Content-Type': 'text/plain'\n  };\n  const mode = 'no-cors';\n  return fetch(assets.baseUrl + path, {\n    method: 'GET',\n    headers: headers,\n    mode: mode\n  }).then(res => res.text()).then(txt => JSON.parse(txt));\n}\n\nfunction getBundles(language, assets, supportedLanguages) {\n  // Two special cases:\n  // 1. Default language is already bundled with the widget\n  // 2. If the language is not in our config file, it means that they've\n  //    probably defined it on their own.\n  if (language === config.defaultLanguage || !_.contains(supportedLanguages, language)) {\n    return Q({});\n  } //local storage does not work correctly with android web views (embeded browers)\n  //so skip the caching and just make the request to get the local info\n\n\n  const localStorageIsSupported = !fn.localStorageIsNotSupported();\n\n  if (localStorageIsSupported) {\n    const cached = getCachedLanguages();\n\n    if (cached[language]) {\n      return Q(cached[language]);\n    }\n  }\n\n  return Q.all([fetchJson('login', language, assets), fetchJson('country', language, assets)]).spread(function (loginJson, countryJson) {\n    if (localStorageIsSupported) {\n      addLanguageToCache(language, loginJson, countryJson);\n    }\n\n    return {\n      login: loginJson,\n      country: countryJson\n    };\n  }).catch(function () {\n    // If there is an error, this will default to the bundled language and\n    // we will no longer try to load the language this session.\n    Logger.warn('Unable to load language: ' + language);\n    return {};\n  });\n}\n\nvar Bundles = {\n  login: login,\n  country: country,\n  // Courage components within the sign in widget point to courage bundle to look\n  // up i18nkeys. Since we dont have courage.properties inside the sign in widget\n  // we are pointing courage bundle to login.\n  courage: login,\n  currentLanguage: null,\n  isLoaded: function (language) {\n    return this.currentLanguage === language;\n  },\n  remove: function () {\n    this.currentLanguage = null;\n  },\n  loadLanguage: function (language, overrides, assets, supportedLanguages) {\n    const parsedOverrides = parseOverrides(overrides);\n    const lowerCaseLanguage = language.toLowerCase();\n    return getBundles(language, assets, supportedLanguages).then(bundles => {\n      // Always extend from the built in defaults in the event that some\n      // properties are not translated\n      this.login = _.extend({}, login, bundles.login);\n      this.country = _.extend({}, country, bundles.country);\n      this.courage = _.extend({}, login, bundles.login);\n\n      if (parsedOverrides[lowerCaseLanguage]) {\n        _.extend(this.login, parsedOverrides[lowerCaseLanguage]['login']);\n\n        _.extend(this.country, parsedOverrides[lowerCaseLanguage]['country']);\n\n        _.extend(this.courage, parsedOverrides[lowerCaseLanguage]['login']);\n      }\n\n      this.currentLanguage = language;\n    });\n  }\n};\n\nexport { Bundles as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}