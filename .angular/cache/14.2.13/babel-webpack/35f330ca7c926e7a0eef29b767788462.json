{"ast":null,"code":"import _Handlebars2 from '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, Collection } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport FactorList from '../views/enroll-choices/FactorList.js';\nimport Footer from '../views/enroll-choices/Footer.js';\nimport RequiredFactorList from '../views/enroll-choices/RequiredFactorList.js';\nimport Enums from '../../util/Enums.js';\nimport FormController from '../util/FormController.js';\nimport fn from '../util/RouterUtil.js';\nconst subtitleTpl = _Handlebars2.template({\n  \"compiler\": [8, \">= 4.3.0\"],\n  \"main\": function (container, depth0, helpers, partials, data) {\n    var stack1,\n      helper,\n      lookupProperty = container.lookupProperty || function (parent, propertyName) {\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n          return parent[propertyName];\n        }\n        return undefined;\n      };\n    return \"<span>\" + ((stack1 = (helper = (helper = lookupProperty(helpers, \"subtitle\") || (depth0 != null ? lookupProperty(depth0, \"subtitle\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n      \"name\": \"subtitle\",\n      \"hash\": {},\n      \"data\": data,\n      \"loc\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 6\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 20\n        }\n      }\n    }) : helper)) != null ? stack1 : \"\") + \"</span>\";\n  },\n  \"useData\": true\n});\nvar EnrollChoicesController = FormController.extend({\n  className: 'enroll-choices',\n  state: {\n    pageType: null\n  },\n  Model: {},\n  Form: {\n    noCancelButton: true,\n    title: oktaUnderscore.partial(loc, 'enroll.choices.title', 'login'),\n    noButtonBar: function () {\n      return this.state.get('pageType') === Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    },\n    subtitle: ' ',\n    getSubtitle: function () {\n      switch (this.state.get('pageType')) {\n        case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n        case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n          return loc('enroll.choices.optional', 'login');\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          {\n            const remainingDays = this.options.appState.get('gracePeriodRemainingDays');\n            return Number.isInteger(remainingDays) && remainingDays >= 0 ? this.getGracePeriodSubtitle(remainingDays) : this.getDefaultSubtitle();\n          }\n        default:\n          return this.getDefaultSubtitle();\n      }\n    },\n    getDefaultSubtitle: function () {\n      return this.settings.get('brandName') ? loc('enroll.choices.description.specific', 'login', [this.settings.get('brandName')]) : loc('enroll.choices.description.generic', 'login');\n    },\n    getGracePeriodSubtitle: function (remainingDays) {\n      return remainingDays >= 1 ? loc('enroll.choices.description.gracePeriod.bold', 'login', [remainingDays]) : loc('enroll.choices.description.gracePeriod.oneDay.bold', 'login');\n    },\n    save: function () {\n      switch (this.state.get('pageType')) {\n        case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n        case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n          return loc('enroll.choices.submit.finish', 'login');\n        case Enums.HAS_REQUIRED_NONE_ENROLLED:\n          return loc('enroll.choices.submit.configure', 'login');\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          return loc('enroll.choices.submit.next', 'login');\n        default:\n          return '';\n      }\n    },\n    initialize: function (options) {\n      this.listenTo(this, 'save', function () {\n        let current;\n        switch (this.state.get('pageType')) {\n          case Enums.HAS_REQUIRED_NONE_ENROLLED:\n          case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n            current = options.appState.get('factors').getFirstUnenrolledRequiredFactor();\n            options.appState.trigger('navigate', fn.createEnrollFactorUrl(current.get('provider'), current.get('factorType')));\n            break;\n          default:\n            return this.model.doTransaction(function (transaction) {\n              return transaction.skip();\n            });\n        }\n      });\n    },\n    preRender: function () {\n      // form subtitle does not support unescaped strings, and we need some html elements\n      // in the subtitle for this form. So instead of a regular subtitle, we add a <span>\n      // with the text we need\n      this.add(subtitleTpl({\n        subtitle: this.getSubtitle()\n      }), 'p.okta-form-subtitle');\n      const factors = this.options.appState.get('factors');\n      switch (this.state.get('pageType')) {\n        case Enums.HAS_REQUIRED_NONE_ENROLLED:\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          this.add(new RequiredFactorList({\n            minimize: true,\n            collection: new Collection(factors.where({\n              required: true\n            })),\n            appState: this.options.appState\n          }));\n          break;\n        case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n        case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n        case Enums.ALL_OPTIONAL_NONE_ENROLLED:\n          {\n            const enrolled = factors.where({\n              enrolled: true\n            });\n            const notEnrolled = factors.filter(function (factor) {\n              // pick factors that are not enrolled or have additional enrollments\n              return !factor.get('enrolled') || factor.get('additionalEnrollment');\n            });\n            let notEnrolledListTitle;\n            if (enrolled.length > 0) {\n              notEnrolledListTitle = loc('enroll.choices.list.optional', 'login');\n              this.add(new FactorList({\n                listTitle: loc('enroll.choices.list.enrolled', 'login'),\n                minimize: true,\n                collection: new Collection(enrolled),\n                appState: this.options.appState\n              }));\n            }\n            this.add(new FactorList({\n              listTitle: notEnrolledListTitle,\n              collection: new Collection(notEnrolled),\n              appState: this.options.appState,\n              showInlineSetupButton: true\n            }));\n            break;\n          }\n      }\n    }\n  },\n  initialize: function (options) {\n    let numRequiredEnrolled = 0;\n    let numRequiredNotEnrolled = 0;\n    let numOptionalEnrolled = 0;\n    let numOptionalNotEnrolled = 0;\n    let hasRequired;\n    let pageType;\n    options.appState.get('factors').each(function (factor) {\n      const required = factor.get('required');\n      const enrolled = factor.get('enrolled');\n      const additionalEnrollment = factor.get('additionalEnrollment');\n      if (required && enrolled) {\n        numRequiredEnrolled++;\n      } else if (required && !enrolled) {\n        numRequiredNotEnrolled++;\n      } else if (!required && enrolled) {\n        numOptionalEnrolled++;\n      } else if (!required && !enrolled) {\n        numOptionalNotEnrolled++;\n      } // If a factor has multiple instances and\n      // additional optional enrollments\n\n      if (enrolled && additionalEnrollment) {\n        numOptionalNotEnrolled++;\n      }\n    });\n    hasRequired = numRequiredEnrolled > 0 || numRequiredNotEnrolled > 0; // There are 5 possible states this screen can be in:\n    // 1. Has required, but none have been enrolled. Wizard start page.\n\n    if (hasRequired && numRequiredEnrolled === 0) {\n      pageType = Enums.HAS_REQUIRED_NONE_ENROLLED;\n    } else if (hasRequired && numRequiredNotEnrolled > 0) {\n      // 2. Has required, and have enrolled at least one. The page layout\n      //    to configure the remaining required factors.\n      pageType = Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED;\n    } else if (hasRequired && numOptionalNotEnrolled > 0) {\n      // 3. Has required, and finished enrolling all required factors. The\n      //    page layout you see to configure any optional factors or skip.\n      pageType = Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED;\n    } else if (numOptionalEnrolled === 0 && numOptionalNotEnrolled > 0) {\n      // 4. Factors are all optional, no factors enrolled.\n      pageType = Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    } else if (numOptionalNotEnrolled > 0) {\n      // 5. Factors are all optional, some factors have already been\n      //    enrolled (can either enroll more or skip).\n      pageType = Enums.ALL_OPTIONAL_SOME_ENROLLED;\n    } else {\n      // 6. Factors are all optional, all factors have already been\n      //    enrolled, among them there is OktaVerify with Push enrolled as totp\n      //    (API return OktaVerify push factor as unenrolled in this case and as we always merge\n      //    push and totp in UI so we redirect to skip link here).\n      this.model.doTransaction(function (transaction) {\n        return transaction.skip();\n      });\n    }\n    this.state.set('pageType', pageType);\n    if (this.options.appState.get('skipLink') && pageType === Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED) {\n      this.add(new Footer(this.toJSON()));\n    }\n  }\n});\nexport { EnrollChoicesController as default };","map":{"version":3,"names":["_Handlebars2","loc","Collection","oktaUnderscore","FactorList","Footer","RequiredFactorList","Enums","FormController","fn","subtitleTpl","template","main","container","depth0","helpers","partials","data","stack1","helper","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","undefined","hooks","helperMissing","nullContext","EnrollChoicesController","extend","className","state","pageType","Model","Form","noCancelButton","title","partial","noButtonBar","get","ALL_OPTIONAL_NONE_ENROLLED","subtitle","getSubtitle","ALL_OPTIONAL_SOME_ENROLLED","HAS_REQUIRED_ALL_REQUIRED_ENROLLED","HAS_REQUIRED_SOME_REQUIRED_ENROLLED","remainingDays","options","appState","Number","isInteger","getGracePeriodSubtitle","getDefaultSubtitle","settings","save","HAS_REQUIRED_NONE_ENROLLED","initialize","listenTo","current","getFirstUnenrolledRequiredFactor","trigger","createEnrollFactorUrl","model","doTransaction","transaction","skip","preRender","add","factors","minimize","collection","where","required","enrolled","notEnrolled","filter","factor","notEnrolledListTitle","length","listTitle","showInlineSetupButton","numRequiredEnrolled","numRequiredNotEnrolled","numOptionalEnrolled","numOptionalNotEnrolled","hasRequired","each","additionalEnrollment","set","toJSON","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/EnrollChoicesController.js"],"sourcesContent":["import _Handlebars2 from '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport { loc, Collection } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport FactorList from '../views/enroll-choices/FactorList.js';\nimport Footer from '../views/enroll-choices/Footer.js';\nimport RequiredFactorList from '../views/enroll-choices/RequiredFactorList.js';\nimport Enums from '../../util/Enums.js';\nimport FormController from '../util/FormController.js';\nimport fn from '../util/RouterUtil.js';\n\nconst subtitleTpl = _Handlebars2.template({\n  \"compiler\": [8, \">= 4.3.0\"],\n  \"main\": function (container, depth0, helpers, partials, data) {\n    var stack1,\n        helper,\n        lookupProperty = container.lookupProperty || function (parent, propertyName) {\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return parent[propertyName];\n      }\n\n      return undefined;\n    };\n\n    return \"<span>\" + ((stack1 = (helper = (helper = lookupProperty(helpers, \"subtitle\") || (depth0 != null ? lookupProperty(depth0, \"subtitle\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n      \"name\": \"subtitle\",\n      \"hash\": {},\n      \"data\": data,\n      \"loc\": {\n        \"start\": {\n          \"line\": 1,\n          \"column\": 6\n        },\n        \"end\": {\n          \"line\": 1,\n          \"column\": 20\n        }\n      }\n    }) : helper)) != null ? stack1 : \"\") + \"</span>\";\n  },\n  \"useData\": true\n});\n\nvar EnrollChoicesController = FormController.extend({\n  className: 'enroll-choices',\n  state: {\n    pageType: null\n  },\n  Model: {},\n  Form: {\n    noCancelButton: true,\n    title: oktaUnderscore.partial(loc, 'enroll.choices.title', 'login'),\n    noButtonBar: function () {\n      return this.state.get('pageType') === Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    },\n    subtitle: ' ',\n    getSubtitle: function () {\n      switch (this.state.get('pageType')) {\n        case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n        case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n          return loc('enroll.choices.optional', 'login');\n\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          {\n            const remainingDays = this.options.appState.get('gracePeriodRemainingDays');\n            return Number.isInteger(remainingDays) && remainingDays >= 0 ? this.getGracePeriodSubtitle(remainingDays) : this.getDefaultSubtitle();\n          }\n\n        default:\n          return this.getDefaultSubtitle();\n      }\n    },\n    getDefaultSubtitle: function () {\n      return this.settings.get('brandName') ? loc('enroll.choices.description.specific', 'login', [this.settings.get('brandName')]) : loc('enroll.choices.description.generic', 'login');\n    },\n    getGracePeriodSubtitle: function (remainingDays) {\n      return remainingDays >= 1 ? loc('enroll.choices.description.gracePeriod.bold', 'login', [remainingDays]) : loc('enroll.choices.description.gracePeriod.oneDay.bold', 'login');\n    },\n    save: function () {\n      switch (this.state.get('pageType')) {\n        case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n        case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n          return loc('enroll.choices.submit.finish', 'login');\n\n        case Enums.HAS_REQUIRED_NONE_ENROLLED:\n          return loc('enroll.choices.submit.configure', 'login');\n\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          return loc('enroll.choices.submit.next', 'login');\n\n        default:\n          return '';\n      }\n    },\n    initialize: function (options) {\n      this.listenTo(this, 'save', function () {\n        let current;\n\n        switch (this.state.get('pageType')) {\n          case Enums.HAS_REQUIRED_NONE_ENROLLED:\n          case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n            current = options.appState.get('factors').getFirstUnenrolledRequiredFactor();\n            options.appState.trigger('navigate', fn.createEnrollFactorUrl(current.get('provider'), current.get('factorType')));\n            break;\n\n          default:\n            return this.model.doTransaction(function (transaction) {\n              return transaction.skip();\n            });\n        }\n      });\n    },\n    preRender: function () {\n      // form subtitle does not support unescaped strings, and we need some html elements\n      // in the subtitle for this form. So instead of a regular subtitle, we add a <span>\n      // with the text we need\n      this.add(subtitleTpl({\n        subtitle: this.getSubtitle()\n      }), 'p.okta-form-subtitle');\n      const factors = this.options.appState.get('factors');\n\n      switch (this.state.get('pageType')) {\n        case Enums.HAS_REQUIRED_NONE_ENROLLED:\n        case Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED:\n          this.add(new RequiredFactorList({\n            minimize: true,\n            collection: new Collection(factors.where({\n              required: true\n            })),\n            appState: this.options.appState\n          }));\n          break;\n\n        case Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED:\n        case Enums.ALL_OPTIONAL_SOME_ENROLLED:\n        case Enums.ALL_OPTIONAL_NONE_ENROLLED:\n          {\n            const enrolled = factors.where({\n              enrolled: true\n            });\n            const notEnrolled = factors.filter(function (factor) {\n              // pick factors that are not enrolled or have additional enrollments\n              return !factor.get('enrolled') || factor.get('additionalEnrollment');\n            });\n            let notEnrolledListTitle;\n\n            if (enrolled.length > 0) {\n              notEnrolledListTitle = loc('enroll.choices.list.optional', 'login');\n              this.add(new FactorList({\n                listTitle: loc('enroll.choices.list.enrolled', 'login'),\n                minimize: true,\n                collection: new Collection(enrolled),\n                appState: this.options.appState\n              }));\n            }\n\n            this.add(new FactorList({\n              listTitle: notEnrolledListTitle,\n              collection: new Collection(notEnrolled),\n              appState: this.options.appState,\n              showInlineSetupButton: true\n            }));\n            break;\n          }\n      }\n    }\n  },\n  initialize: function (options) {\n    let numRequiredEnrolled = 0;\n    let numRequiredNotEnrolled = 0;\n    let numOptionalEnrolled = 0;\n    let numOptionalNotEnrolled = 0;\n    let hasRequired;\n    let pageType;\n    options.appState.get('factors').each(function (factor) {\n      const required = factor.get('required');\n      const enrolled = factor.get('enrolled');\n      const additionalEnrollment = factor.get('additionalEnrollment');\n\n      if (required && enrolled) {\n        numRequiredEnrolled++;\n      } else if (required && !enrolled) {\n        numRequiredNotEnrolled++;\n      } else if (!required && enrolled) {\n        numOptionalEnrolled++;\n      } else if (!required && !enrolled) {\n        numOptionalNotEnrolled++;\n      } // If a factor has multiple instances and\n      // additional optional enrollments\n\n\n      if (enrolled && additionalEnrollment) {\n        numOptionalNotEnrolled++;\n      }\n    });\n    hasRequired = numRequiredEnrolled > 0 || numRequiredNotEnrolled > 0; // There are 5 possible states this screen can be in:\n    // 1. Has required, but none have been enrolled. Wizard start page.\n\n    if (hasRequired && numRequiredEnrolled === 0) {\n      pageType = Enums.HAS_REQUIRED_NONE_ENROLLED;\n    } else if (hasRequired && numRequiredNotEnrolled > 0) {\n      // 2. Has required, and have enrolled at least one. The page layout\n      //    to configure the remaining required factors.\n      pageType = Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED;\n    } else if (hasRequired && numOptionalNotEnrolled > 0) {\n      // 3. Has required, and finished enrolling all required factors. The\n      //    page layout you see to configure any optional factors or skip.\n      pageType = Enums.HAS_REQUIRED_ALL_REQUIRED_ENROLLED;\n    } else if (numOptionalEnrolled === 0 && numOptionalNotEnrolled > 0) {\n      // 4. Factors are all optional, no factors enrolled.\n      pageType = Enums.ALL_OPTIONAL_NONE_ENROLLED;\n    } else if (numOptionalNotEnrolled > 0) {\n      // 5. Factors are all optional, some factors have already been\n      //    enrolled (can either enroll more or skip).\n      pageType = Enums.ALL_OPTIONAL_SOME_ENROLLED;\n    } else {\n      // 6. Factors are all optional, all factors have already been\n      //    enrolled, among them there is OktaVerify with Push enrolled as totp\n      //    (API return OktaVerify push factor as unenrolled in this case and as we always merge\n      //    push and totp in UI so we redirect to skip link here).\n      this.model.doTransaction(function (transaction) {\n        return transaction.skip();\n      });\n    }\n\n    this.state.set('pageType', pageType);\n\n    if (this.options.appState.get('skipLink') && pageType === Enums.HAS_REQUIRED_SOME_REQUIRED_ENROLLED) {\n      this.add(new Footer(this.toJSON()));\n    }\n  }\n});\n\nexport { EnrollChoicesController as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}