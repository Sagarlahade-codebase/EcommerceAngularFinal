{"ast":null,"code":"/*\n * Checking in as there is no npm module to consume. \n * Current version is 2.15.\n * Repo - https://github.com/TypingDNA/TypingDnaRecorder-JavaScript\n */\n\n/**\n * TypingDNA - Typing Biometrics JavaScript API\n * https://api.typingdna.com/scripts/typingdna.js\n * https://typingdna.com/scripts/typingdna.js (alternative)\n *\n * @version 2.15\n * @author Raul Popa\n * @copyright SC TypingDNA SRL, http://typingdna.com\n * @license http://www.apache.org/licenses/LICENSE-2.0\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Typical usage:\n * var tdna = new TypingDNA(); // creates a new TypingDNA object and starts recording\n * var typingPattern = tdna.getTypingPattern({type=1, text=\"Hello5g21?*\"});\n * returns a type 1 typing pattern (and continues recording afterwards)\n *\n * Optional:\n * tdna.stop(); // ends recording and clears history stack (returns recording flag: false)\n * tdna.start(); // restarts the recording after a stop (returns recording flag: true)\n * tdna.reset(); // restarts the recording anytime, clears history stack and starts from scratch (returns nothing)\n * var typingPatternQuality = TypingDNA.getQuality(typingPattern); //returns the quality/strength of any typing pattern\n * (there is no need to initialize the class to do pattern quality checking)\n */\n\n/**\n * Creates a single instance (or a reference) of the TypingDNA class\n * @return {Object} Returns the single instance of the TypingDNA class.\n * @example var tdna = new TypingDNA();\n */\nvar typingdna = function TypingDNA() {\n  if (TypingDNA.initialized != true) {\n    TypingDNA.prototype.start = function () {\n      return TypingDNA.start.apply(this, arguments);\n    };\n    TypingDNA.prototype.stop = function () {\n      return TypingDNA.stop.apply(this, arguments);\n    };\n    TypingDNA.prototype.reset = function () {\n      return TypingDNA.reset.apply(this, arguments);\n    };\n    TypingDNA.prototype.addTarget = function () {\n      return TypingDNA.addTarget.apply(this, arguments);\n    };\n    TypingDNA.prototype.removeTarget = function () {\n      return TypingDNA.removeTarget.apply(this, arguments);\n    };\n    TypingDNA.prototype.getTypingPattern = function () {\n      return TypingDNA.getTypingPattern.apply(this, arguments);\n    };\n    TypingDNA.prototype.get = function () {\n      // still works but will be deprecated in favor of getTypignPattern()\n      return TypingDNA.get.apply(this, arguments);\n    };\n    TypingDNA.prototype.startDiagram = function () {// deprecated in favor of start()\n      //return TypingDNA.startDiagram.apply(this, arguments);\n    };\n    TypingDNA.prototype.stopDiagram = function () {// deprecated in favor of stop()\n      //return TypingDNA.stopDiagram.apply(this, arguments);\n    };\n    TypingDNA.prototype.getDiagram = function () {\n      // still works but will be deprecated in favor of getTypignPattern()\n      return TypingDNA.getDiagram.apply(this, arguments);\n    };\n    TypingDNA.prototype.getExtendedDiagram = function () {\n      // still works but will be deprecated in favor of getTypignPattern()\n      return TypingDNA.getExtendedDiagram.apply(this, arguments);\n    };\n    TypingDNA.prototype.getMouseDiagram = function () {\n      return TypingDNA.getMouseDiagram.apply(this, arguments);\n    };\n    TypingDNA.prototype.startMouse = function () {\n      return TypingDNA.startMouse.apply(this, arguments);\n    };\n    TypingDNA.prototype.stopMouse = function () {\n      return TypingDNA.stopMouse.apply(this, arguments);\n    };\n    TypingDNA.prototype.getQuality = function () {\n      return TypingDNA.getQuality.apply(this, arguments);\n    };\n    TypingDNA.prototype.getLength = function () {\n      return TypingDNA.getLength.apply(this, arguments);\n    };\n    TypingDNA.prototype.isMobile = function () {\n      return TypingDNA.isMobile.apply(this, arguments);\n    };\n    TypingDNA.prototype.getTextId = function () {\n      return TypingDNA.getTextId.apply(this, arguments);\n    };\n    TypingDNA.initialized = true;\n    TypingDNA.prototype.maxHistoryLength = TypingDNA.maxHistoryLength;\n    TypingDNA.prototype.defaultHistoryLength = TypingDNA.defaultHistoryLength;\n    TypingDNA.prototype.maxSeekTime = TypingDNA.maxSeekTime;\n    TypingDNA.prototype.maxPressTime = TypingDNA.maxPressTime;\n    TypingDNA.version = 2.15;\n    TypingDNA.flags = 0;\n    TypingDNA.instance = this;\n    TypingDNA.document = document;\n    TypingDNA.maxHistoryLength = 2000;\n    TypingDNA.maxSeekTime = 1500;\n    TypingDNA.maxPressTime = 300;\n    TypingDNA.defaultHistoryLength = 160;\n    TypingDNA.spKeyCodes = [8, 13, 32];\n    TypingDNA.spKeyCodesObj = {\n      8: 1,\n      13: 1,\n      32: 1\n    };\n    TypingDNA.keyCodes = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 32, 222, 188, 190, 186, 187, 189, 191, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57];\n    TypingDNA.keyCodesObj = {};\n    for (var i in TypingDNA.keyCodes) {\n      TypingDNA.keyCodesObj[TypingDNA.keyCodes[i]] = 1;\n    }\n    TypingDNA.pt1 = TypingDNA.ut1 = new Date().getTime();\n    TypingDNA.wfk = [];\n    TypingDNA.sti = [];\n    TypingDNA.skt = [];\n    TypingDNA.recording = true;\n    TypingDNA.mouseRecording = true;\n    TypingDNA.mouseMoveRecording = false;\n    TypingDNA.spKeyRecording = true;\n    TypingDNA.diagramRecording = true;\n    TypingDNA.dwfk = [];\n    TypingDNA.dsti = [];\n    TypingDNA.dskt = [];\n    TypingDNA.drkc = [];\n    TypingDNA.prevKeyCode = 0;\n    TypingDNA.maxMoveDeltaTime = 600;\n    TypingDNA.maxScrollDeltaTime = 800;\n    TypingDNA.maxStopTime = 1500;\n    TypingDNA.maxClickTime = 600;\n    TypingDNA.maxMouseHistoryLength = 500;\n    TypingDNA.lastMouseMoveTime = TypingDNA.lastMouseDownTime = new Date().getTime();\n    TypingDNA.stopTimes = [];\n    TypingDNA.clickTimes = [];\n    TypingDNA.lastMouseStop = true;\n    TypingDNA.zl = 0.0000001;\n    TypingDNA.isAndroidChrome = false;\n    TypingDNA.ACLastTime = new Date().getTime();\n    TypingDNA.ACSeekTime = 0;\n    TypingDNA.ACPressTime = 0;\n    TypingDNA.ACLastCharCode = 0;\n    TypingDNA.ACLastKeyCode = 0;\n    TypingDNA.ACInputLengths = {\n      inputs: [],\n      lastLength: []\n    };\n    TypingDNA.ACPreviousKeyCode = 0;\n    TypingDNA.targetIds = [];\n    TypingDNA.lastTarget = \"\";\n    TypingDNA.lastTargetFound = false;\n    TypingDNA.replaceMissingKeys = true;\n    TypingDNA.replaceMissingKeysPerc = 7;\n    TypingDNA.keyDown = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n      var keyCode = e.keyCode;\n      if (TypingDNA.wfk[keyCode] == 1 || TypingDNA.dwfk[keyCode] == 1) ;\n      if (keyCode == 229 && TypingDNA.isMobile() && !TypingDNA.isAndroidChrome) {\n        TypingDNA.isAndroidChrome = true;\n        TypingDNA.ACSeekTime = new Date().getTime() - TypingDNA.ACLastTime;\n        TypingDNA.ACLastTime = new Date().getTime();\n        TypingDNA.document.removeEventListener(\"keydown\", TypingDNA.keyDown);\n        TypingDNA.document.removeEventListener(\"keyup\", TypingDNA.keyUp);\n        TypingDNA.document.removeEventListener(\"keypress\", TypingDNA.keyPress); // if android\n\n        TypingDNA.document.addEventListener(\"keydown\", TypingDNA.ACKeyDown);\n        TypingDNA.document.addEventListener(\"keyup\", TypingDNA.ACKeyUp);\n      } else {\n        var t0 = TypingDNA.pt1;\n        TypingDNA.pt1 = new Date().getTime();\n        var seekTotal = TypingDNA.pt1 - t0;\n        var startTime = TypingDNA.pt1;\n        if (TypingDNA.recording == true || TypingDNA.spKeyCodesObj[keyCode] && TypingDNA.spKeyRecording == true) {\n          if (!e.shiftKey || TypingDNA.isMobile()) {\n            TypingDNA.wfk[keyCode] = 1;\n            TypingDNA.skt[keyCode] = seekTotal;\n            TypingDNA.sti[keyCode] = startTime;\n          }\n        }\n        if (TypingDNA.diagramRecording == true) {\n          TypingDNA.dwfk[keyCode] = 1;\n          TypingDNA.dskt[keyCode] = seekTotal;\n          TypingDNA.dsti[keyCode] = startTime;\n          TypingDNA.dlastDownKey = keyCode;\n        }\n      }\n    };\n    TypingDNA.keyPress = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n      if (TypingDNA.diagramRecording == true) {\n        var keyCode = TypingDNA.dlastDownKey;\n        TypingDNA.drkc[keyCode] = e.charCode;\n      }\n    };\n    TypingDNA.keyUp = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n      var ut = new Date().getTime();\n      var keyCode = e.keyCode;\n      if (TypingDNA.recording == true || TypingDNA.spKeyCodesObj[keyCode] && TypingDNA.spKeyRecording == true) {\n        if (!e.shiftKey || TypingDNA.isMobile()) {\n          if (TypingDNA.wfk[keyCode] == 1) {\n            var pressTime = ut - TypingDNA.sti[keyCode];\n            var seekTime = TypingDNA.skt[keyCode];\n            var arr = [keyCode, seekTime, pressTime, TypingDNA.prevKeyCode, ut, e.target.id];\n            TypingDNA.history.add(arr);\n            TypingDNA.prevKeyCode = keyCode;\n          }\n        }\n        TypingDNA.wfk[keyCode] = 0;\n      }\n      if (TypingDNA.diagramRecording == true) {\n        if (TypingDNA.drkc[keyCode] != undefined && TypingDNA.drkc[keyCode] != 0) {\n          if (TypingDNA.dwfk[keyCode] == 1) {\n            var pressTime = ut - TypingDNA.dsti[keyCode];\n            var seekTime = TypingDNA.dskt[keyCode];\n            var realKeyCode = TypingDNA.drkc[keyCode];\n            var arrD = [keyCode, seekTime, pressTime, realKeyCode, ut, e.target.id];\n            TypingDNA.history.addDiagram(arrD);\n          }\n        }\n        TypingDNA.dwfk[keyCode] = 0;\n      }\n    };\n    TypingDNA.mouseScroll = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        if (TypingDNA.mouseMoveRecording == true) {\n          if (TypingDNA.mouse.scrollStarted == true) {\n            var currentTime = new Date().getTime();\n            TypingDNA.mouse.scrollTimes.push(currentTime);\n            TypingDNA.mouse.scrollTopArr.push(TypingDNA.document.body.scrollTop);\n            clearInterval(TypingDNA.scrollInterval);\n            TypingDNA.scrollInterval = setInterval(TypingDNA.mouse.checkScroll, TypingDNA.maxScrollDeltaTime);\n          } else {\n            TypingDNA.mouse.scrollStarted = true;\n          }\n        }\n      }\n    };\n    TypingDNA.mouseMove = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        var currentTime = new Date().getTime();\n        if (TypingDNA.mouseMoveRecording == true) {\n          if (TypingDNA.mouse.started == true) {\n            TypingDNA.mouse.times.push(currentTime);\n            TypingDNA.mouse.xPositions.push(e.screenX);\n            TypingDNA.mouse.yPositions.push(e.screenY);\n            clearInterval(TypingDNA.moveInterval);\n            TypingDNA.moveInterval = setInterval(TypingDNA.mouse.checkMove, TypingDNA.maxMoveDeltaTime);\n          } else {\n            TypingDNA.mouse.started = true;\n          }\n        }\n        TypingDNA.lastMouseMoveTime = currentTime;\n      }\n    };\n    TypingDNA.mouseDown = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        TypingDNA.mouse.checkMove();\n        TypingDNA.mouse.checkScroll();\n        if (e.which == 1) {\n          TypingDNA.lastMouseDownTime = new Date().getTime();\n          var stopTime = TypingDNA.lastMouseDownTime - TypingDNA.lastMouseMoveTime;\n          if (stopTime < TypingDNA.maxStopTime && TypingDNA.lastMouseStop == false) {\n            TypingDNA.stopTimes.push(stopTime);\n            if (TypingDNA.mouseMoveRecording == true) {\n              var eventType = 3;\n              var arr = [eventType, stopTime];\n              TypingDNA.mouse.history.add(arr);\n              TypingDNA.lastMouseStop = true;\n            }\n          }\n        }\n      }\n    };\n    TypingDNA.mouseUp = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        if (e.which == 1) {\n          var clickTime = new Date().getTime() - TypingDNA.lastMouseDownTime;\n          if (clickTime < TypingDNA.maxClickTime && TypingDNA.lastMouseDownTime > TypingDNA.lastMouseMoveTime) {\n            TypingDNA.clickTimes.push(clickTime);\n            if (TypingDNA.mouseMoveRecording == true) {\n              var eventType = 4;\n              var arr = [eventType, clickTime];\n              TypingDNA.mouse.history.add(arr);\n            }\n          }\n        }\n      }\n    };\n    TypingDNA.ACKeyDown = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n      TypingDNA.ACSeekTime = new Date().getTime() - TypingDNA.ACLastTime;\n      TypingDNA.ACLastTime = new Date().getTime();\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n      if (TypingDNA.ACInputLengths.inputs.indexOf(e.target) === -1) {\n        TypingDNA.ACInputLengths.inputs.push(e.target);\n        TypingDNA.ACInputLengths.lastLength.push(0);\n      }\n    };\n    TypingDNA.ACKeyUp = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n      TypingDNA.ACPressTime = new Date().getTime() - TypingDNA.ACLastTime;\n      TypingDNA.ACLastTime = new Date().getTime();\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n      var keyCode = e.keyCode;\n      var targetIndex = TypingDNA.ACInputLengths.inputs.indexOf(e.target);\n      if (targetIndex === -1) {\n        TypingDNA.ACInputLengths.inputs.push(e.target);\n        TypingDNA.ACInputLengths.lastLength.push(0);\n        targetIndex = TypingDNA.ACInputLengths.inputs.indexOf(e.target);\n      }\n      if (keyCode == 229 && e.target.value.length >= TypingDNA.ACInputLengths.lastLength[targetIndex]) {\n        var char = e.target.value.substr(e.target.selectionStart - 1 || 0, 1);\n        keyCode = char.toUpperCase().charCodeAt(0);\n        TypingDNA.ACLastCharCode = char.charCodeAt(0);\n        TypingDNA.ACLastKeyCode = char.toUpperCase().charCodeAt(0);\n      }\n      TypingDNA.ACInputLengths.lastLength[targetIndex] = e.target.value.length;\n      var arr = [keyCode, TypingDNA.ACSeekTime, TypingDNA.ACPressTime, TypingDNA.ACPreviousKeyCode, TypingDNA.ACLastTime];\n      TypingDNA.history.add(arr);\n      TypingDNA.ACPreviousKeyCode = keyCode;\n      if (TypingDNA.diagramRecording == true) {\n        var arrD = [keyCode, TypingDNA.ACSeekTime, TypingDNA.ACPressTime, TypingDNA.ACLastCharCode];\n        TypingDNA.history.addDiagram(arrD);\n      }\n    };\n    TypingDNA.isTarget = function (target) {\n      if (TypingDNA.lastTarget == target && TypingDNA.lastTargetFound) {\n        return true;\n      } else {\n        var targetLength = TypingDNA.targetIds.length;\n        var targetFound = false;\n        if (targetLength > 0) {\n          for (var i = 0; i < targetLength; i++) {\n            if (TypingDNA.targetIds[i] == target) {\n              targetFound = true;\n              break;\n            }\n          }\n          TypingDNA.lastTarget = target;\n          TypingDNA.lastTargetFound = targetFound;\n          return targetFound;\n        } else {\n          TypingDNA.lastTarget = target;\n          TypingDNA.lastTargetFound = true;\n          return true;\n        }\n      }\n    };\n    if (TypingDNA.document.addEventListener) {\n      TypingDNA.document.addEventListener(\"keydown\", TypingDNA.keyDown);\n      TypingDNA.document.addEventListener(\"keyup\", TypingDNA.keyUp);\n      TypingDNA.document.addEventListener(\"keypress\", TypingDNA.keyPress);\n      TypingDNA.document.addEventListener(\"mousemove\", TypingDNA.mouseMove);\n      TypingDNA.document.addEventListener(\"mousedown\", TypingDNA.mouseDown);\n      TypingDNA.document.addEventListener(\"mouseup\", TypingDNA.mouseUp);\n      TypingDNA.document.addEventListener(\"scroll\", TypingDNA.mouseScroll);\n    } else if (TypingDNA.document.attachEvent) {\n      TypingDNA.document.attachEvent(\"onkeydown\", TypingDNA.keyDown);\n      TypingDNA.document.attachEvent(\"onkeyup\", TypingDNA.keyUp);\n      TypingDNA.document.attachEvent(\"onkeypress\", TypingDNA.keyPress);\n      TypingDNA.document.attachEvent(\"onmousemove\", TypingDNA.mouseMove);\n      TypingDNA.document.attachEvent(\"onmousedown\", TypingDNA.mouseDown);\n      TypingDNA.document.attachEvent(\"onmouseup\", TypingDNA.mouseUp);\n      TypingDNA.document.attachEvent(\"onscroll\", TypingDNA.mouseScroll);\n    } else ;\n    TypingDNA.mouse = {};\n    TypingDNA.mouse.times = [];\n    TypingDNA.mouse.xPositions = [];\n    TypingDNA.mouse.yPositions = [];\n    TypingDNA.mouse.scrollTimes = [];\n    TypingDNA.mouse.scrollTopArr = [];\n    TypingDNA.mouse.history = {};\n    TypingDNA.mouse.history.stack = [];\n    TypingDNA.mouse.getDistance = function (a, b) {\n      return Math.sqrt(a * a + b * b);\n    };\n    TypingDNA.mouse.getTotalDistance = function (xPositions, yPositions) {\n      var totalDistance = 0;\n      var length = xPositions.length;\n      for (i = 1; i < length - 1; i++) {\n        var a = xPositions[i] - xPositions[i - 1];\n        var b = yPositions[i] - yPositions[i - 1];\n        totalDistance += TypingDNA.mouse.getDistance(a, b);\n      }\n      return totalDistance;\n    };\n    TypingDNA.mouse.getAngle = function (xPosDelta, yPosDelta) {\n      var angle = 0;\n      var leftRight = xPosDelta >= 0; // 1 if left, 0 if right\n\n      var downUp = yPosDelta < 0; // 1 if down, 0 if up\n\n      if (leftRight) {\n        if (downUp) {\n          angle = 180 + Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251); // 0.01745329251 = pi/180\n        } else {\n          angle = 270 + (90 - Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251));\n        }\n      } else {\n        if (downUp) {\n          angle = 90 + (90 - Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251));\n        } else {\n          angle = Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251);\n        }\n      }\n      return angle;\n    };\n    TypingDNA.mouse.recordMoveAction = function () {\n      var length = TypingDNA.mouse.times.length;\n      if (length < 3) {\n        return;\n      }\n      var deltaTime = TypingDNA.mouse.times[length - 1] - TypingDNA.mouse.times[0];\n      var xPosDelta = TypingDNA.mouse.xPositions[length - 1] - TypingDNA.mouse.xPositions[0];\n      var yPosDelta = TypingDNA.mouse.yPositions[length - 1] - TypingDNA.mouse.yPositions[0];\n      var directDistance = Math.round(TypingDNA.mouse.getDistance(xPosDelta, yPosDelta));\n      var totalDistance = Math.round(TypingDNA.mouse.getTotalDistance(TypingDNA.mouse.xPositions, TypingDNA.mouse.yPositions));\n      var ratioDistance = Math.round(totalDistance * 100 / directDistance);\n      var speed = Math.round(directDistance * 100 / deltaTime);\n      var angle = TypingDNA.mouse.getAngle(xPosDelta, yPosDelta);\n      var eventType = 1;\n      var arr = [eventType, deltaTime, directDistance, speed, angle, ratioDistance];\n      for (i in arr) {\n        if (isNaN(arr[i])) {\n          return;\n        }\n      }\n      TypingDNA.mouse.history.add(arr);\n      TypingDNA.lastMouseStop = false;\n    };\n    TypingDNA.mouse.recordScrollAction = function () {\n      var length = TypingDNA.mouse.scrollTimes.length;\n      if (length < 2) {\n        return;\n      }\n      var deltaTime = TypingDNA.mouse.scrollTimes[length - 1] - TypingDNA.mouse.scrollTimes[0];\n      var directDistance = TypingDNA.mouse.scrollTopArr[length - 1] - TypingDNA.mouse.scrollTopArr[0];\n      var speed = Math.round(directDistance * 100 / deltaTime);\n      var eventType = 2;\n      var arr = [eventType, deltaTime, directDistance, speed];\n      for (i in arr) {\n        if (isNaN(arr[i]) && !isFinite(arr[i])) {\n          return;\n        }\n      }\n      TypingDNA.mouse.history.add(arr);\n    };\n    TypingDNA.mouse.history.add = function (arr) {\n      this.stack.push(arr);\n      if (this.stack.length > TypingDNA.maxMouseHistoryLength) {\n        this.stack.shift();\n      }\n    };\n    TypingDNA.mouse.history.getDiagram = function () {\n      var mouseDiagram = this.stack.join(\"|\");\n      return [String(TypingDNA.isMobile()) + \",\" + String(TypingDNA.version), mouseDiagram].join(\"|\");\n    };\n    TypingDNA.mouse.clearLastMove = function () {\n      TypingDNA.mouse.times = [];\n      TypingDNA.mouse.xPositions = [];\n      TypingDNA.mouse.yPositions = [];\n    };\n    TypingDNA.mouse.checkMove = function () {\n      clearInterval(TypingDNA.moveInterval);\n      if (TypingDNA.mouse.started == true) {\n        TypingDNA.mouse.started = false;\n        TypingDNA.mouse.recordMoveAction();\n        TypingDNA.mouse.clearLastMove();\n      }\n    };\n    TypingDNA.mouse.clearLastScroll = function () {\n      TypingDNA.mouse.scrollTimes = [];\n      TypingDNA.mouse.scrollTopArr = [];\n    };\n    TypingDNA.mouse.checkScroll = function () {\n      clearInterval(TypingDNA.scrollInterval);\n      if (TypingDNA.mouse.scrollStarted == true) {\n        TypingDNA.mouse.scrollStarted = false;\n        TypingDNA.mouse.recordScrollAction();\n        TypingDNA.mouse.clearLastScroll();\n      }\n    };\n    /**\n     * Adds a target to the targetIds array.\n     */\n\n    TypingDNA.addTarget = function (target) {\n      var targetLength = TypingDNA.targetIds.length;\n      var targetFound = false;\n      if (targetLength > 0) {\n        for (var i = 0; i < targetLength; i++) {\n          if (TypingDNA.targetIds[i] == target) {\n            targetFound = true;\n            break;\n          }\n        }\n        if (!targetFound) {\n          TypingDNA.targetIds.push(target);\n        }\n      } else {\n        TypingDNA.targetIds.push(target);\n      }\n    };\n    /**\n     * Adds a target to the targetIds array.\n     */\n\n    TypingDNA.removeTarget = function (target) {\n      var targetLength = TypingDNA.targetIds.length;\n      if (targetLength > 0) {\n        for (var i = 0; i < targetLength; i++) {\n          if (TypingDNA.targetIds[i] == target) {\n            TypingDNA.targetIds.splice(i, 1);\n            break;\n          }\n        }\n      }\n    };\n    /**\n     * Resets the history stack\n     */\n\n    TypingDNA.reset = function (all) {\n      TypingDNA.history.stack = [];\n      TypingDNA.history.stackDiagram = [];\n      TypingDNA.clickTimes = [];\n      TypingDNA.stopTimes = [];\n      TypingDNA.ACInputLengths = {\n        inputs: [],\n        lastLength: []\n      };\n      if (all == true) {\n        TypingDNA.mouse.history.stack = [];\n      }\n    };\n    /**\n     * Automatically called at initilization. It starts the recording of keystrokes.\n     */\n\n    TypingDNA.start = function () {\n      TypingDNA.diagramRecording = true;\n      return TypingDNA.recording = true;\n    };\n    /**\n     * Ends the recording of further keystrokes. To restart recording afterwards you can\n     * either call TypingDNA.start() or create a new TypingDNA object again, not recommended.\n     */\n\n    TypingDNA.stop = function () {\n      TypingDNA.diagramRecording = false;\n      return TypingDNA.recording = false;\n    };\n    /**\n     * Starts the recording of mouse activity.\n     */\n\n    TypingDNA.startMouse = function () {\n      return TypingDNA.mouseRecording = TypingDNA.mouseMoveRecording = true;\n    };\n    /**\n     * Stops the recording of mouse activity.\n     */\n\n    TypingDNA.stopMouse = function () {\n      return TypingDNA.mouseRecording = TypingDNA.mouseMoveRecording = false;\n    };\n    /**\n     * This is the main function that outputs the typing pattern as a String\n     * {type:Number, text:String, textId:Number, length: Number, targetId:String, caseSensitive:Boolean}\n     * @param {Object} obj an object with the following properties\n     * * * @param {String} type 0 for anytext pattern, 1 for sametext pattern (also called diagram pattern)\n     * * * and 2 for extended pattern (most versatile, can replace both anytext and sametext patterns)\n     * * * @param {Number} length (Optional) the length of the text in the history for which you want\n     * * * the typing pattern. length is ignored when text or targetId is set (or both).\n     * * * @param {String} text  (Only for type 1 and type 2) a typed string that you want the typing pattern for\n     * * * @param {Number} textId (Optional, only for type 1 and type 2) a personalized id for the typed text\n     * * * @param {String} targetId (Optional) specifies if pattern is obtain only from text typed in a certain target\n     * * * @param {Boolean} caseSensitive (Optional, default: false) Used if you pass a text for type 1 or type 2\n     * * * DEPRECATED * * * in favor of type = 2 * * *\n     * * * @param {Boolean} extended (Only for type 1) specifies if full information about what was typed is produced,\n     * * * including the actual key pressed, if false, only the order of pressed keys is kept (no actual content)\n     * @return {String} A typing pattern in string form\n     * @example var typingPattern = tdna.getTypingPattern({type=0, length=180});\n     * @example var typingPattern = tdna.getTypingPattern({type=1, text=\"Hello5g21?*\"});\n     * @example var typingPattern = tdna.getTypingPattern({type=2, text=\"example@mail.com\"});\n     */\n\n    TypingDNA.getTypingPattern = function (obj) {\n      if (typeof obj === 'object') {\n        switch (obj.type) {\n          case 0:\n            return TypingDNA.get(obj.length, obj.targetId);\n          case 1:\n            var str = obj.text != undefined ? obj.text : obj.length;\n            return TypingDNA.history.getDiagram(obj.extended, str, obj.textId, obj.targetId, obj.caseSensitive);\n          case 2:\n            var str = obj.text != undefined ? obj.text : obj.length;\n            return TypingDNA.history.getDiagram(true, str, obj.textId, obj.targetId, obj.caseSensitive);\n          default:\n            return TypingDNA.get(obj.length);\n        }\n      } else {\n        return TypingDNA.get();\n      }\n    };\n    TypingDNA.getDiagram = function (str, textId) {\n      return TypingDNA.history.getDiagram(false, str, textId, undefined, false);\n    };\n    TypingDNA.getExtendedDiagram = function (str, textId) {\n      return TypingDNA.history.getDiagram(true, str, textId, undefined, false);\n    };\n    TypingDNA.getMouseDiagram = function () {\n      return TypingDNA.mouse.history.getDiagram();\n    };\n    TypingDNA.get = function (length, targetId) {\n      var historyTotalLength = TypingDNA.history.stack.length;\n      if (length == undefined || length == 0) {\n        length = TypingDNA.defaultHistoryLength;\n      }\n      if (length > historyTotalLength) {\n        length = historyTotalLength;\n      }\n      var obj = {};\n      [obj.arr, targetLength] = TypingDNA.history.get(length, \"\", targetId);\n      if (targetId != undefined && targetId != \"\") {\n        length = targetLength;\n      }\n      var zl = TypingDNA.zl;\n      var histRev = length;\n      var histSktF = TypingDNA.math.fo(TypingDNA.history.get(length, \"seek\", targetId));\n      var histPrtF = TypingDNA.math.fo(TypingDNA.history.get(length, \"press\", targetId));\n      var pressHistMean = Math.round(TypingDNA.math.avg(histPrtF));\n      var seekHistMean = Math.round(TypingDNA.math.avg(histSktF));\n      var pressHistSD = Math.round(TypingDNA.math.sd(histPrtF));\n      var seekHistSD = Math.round(TypingDNA.math.sd(histSktF));\n      var charMeanTime = seekHistMean + pressHistMean;\n      var pressRatio = TypingDNA.math.rd((pressHistMean + zl) / (charMeanTime + zl), 4);\n      var seekToPressRatio = TypingDNA.math.rd((1 - pressRatio) / pressRatio, 4);\n      var pressSDToPressRatio = TypingDNA.math.rd((pressHistSD + zl) / (pressHistMean + zl), 4);\n      var seekSDToPressRatio = TypingDNA.math.rd((seekHistSD + zl) / (pressHistMean + zl), 4);\n      var cpm = Math.round(6E4 / (charMeanTime + zl));\n      if (histRev == 0) {\n        cpm = 0;\n      }\n      for (var i in obj.arr) {\n        var rev = obj.arr[i][1].length;\n        var seekMean = 0;\n        var pressMean = 0;\n        var postMean = 0;\n        var seekSD = 0;\n        var pressSD = 0;\n        var postSD = 0;\n        switch (obj.arr[i][0].length) {\n          case 0:\n            break;\n          case 1:\n            var seekMean = TypingDNA.math.rd((obj.arr[i][0][0] + zl) / (seekHistMean + zl), 4);\n            break;\n          default:\n            var arr = TypingDNA.math.fo(obj.arr[i][0]);\n            seekMean = TypingDNA.math.rd((TypingDNA.math.avg(arr) + zl) / (seekHistMean + zl), 4);\n            seekSD = TypingDNA.math.rd((TypingDNA.math.sd(arr) + zl) / (seekHistSD + zl), 4);\n        }\n        switch (obj.arr[i][1].length) {\n          case 0:\n            break;\n          case 1:\n            var pressMean = TypingDNA.math.rd((obj.arr[i][1][0] + zl) / (pressHistMean + zl), 4);\n            break;\n          default:\n            var arr = TypingDNA.math.fo(obj.arr[i][1]);\n            pressMean = TypingDNA.math.rd((TypingDNA.math.avg(arr) + zl) / (pressHistMean + zl), 4);\n            pressSD = TypingDNA.math.rd((TypingDNA.math.sd(arr) + zl) / (pressHistSD + zl), 4);\n        }\n        switch (obj.arr[i][2].length) {\n          case 0:\n            break;\n          case 1:\n            var postMean = TypingDNA.math.rd((obj.arr[i][2][0] + zl) / (seekHistMean + zl), 4);\n            break;\n          default:\n            var arr = TypingDNA.math.fo(obj.arr[i][2]);\n            postMean = TypingDNA.math.rd((TypingDNA.math.avg(arr) + zl) / (seekHistMean + zl), 4);\n            postSD = TypingDNA.math.rd((TypingDNA.math.sd(arr) + zl) / (seekHistSD + zl), 4);\n        }\n        delete obj.arr[i][2];\n        delete obj.arr[i][1];\n        delete obj.arr[i][0];\n        obj.arr[i][0] = rev;\n        obj.arr[i][1] = seekMean;\n        obj.arr[i][2] = pressMean;\n        obj.arr[i][3] = postMean;\n        obj.arr[i][4] = seekSD;\n        obj.arr[i][5] = pressSD;\n        obj.arr[i][6] = postSD;\n      }\n      var arr = [];\n      TypingDNA.apu(arr, histRev);\n      TypingDNA.apu(arr, cpm);\n      TypingDNA.apu(arr, charMeanTime);\n      TypingDNA.apu(arr, pressRatio);\n      TypingDNA.apu(arr, seekToPressRatio);\n      TypingDNA.apu(arr, pressSDToPressRatio);\n      TypingDNA.apu(arr, seekSDToPressRatio);\n      TypingDNA.apu(arr, pressHistMean);\n      TypingDNA.apu(arr, seekHistMean);\n      TypingDNA.apu(arr, pressHistSD);\n      TypingDNA.apu(arr, seekHistSD);\n      for (var c = 0; c <= 6; c++) {\n        for (var i = 0; i < 44; i++) {\n          var keyCode = TypingDNA.keyCodes[i];\n          var val = obj.arr[keyCode][c];\n          if (val == 0 && c > 0) {\n            val = 1;\n          }\n          TypingDNA.apu(arr, val);\n        }\n      }\n      TypingDNA.apu(arr, TypingDNA.isMobile());\n      TypingDNA.apu(arr, TypingDNA.version);\n      TypingDNA.apu(arr, TypingDNA.flags);\n      arr.push(TypingDNA.history.getSpecialKeys());\n      return arr.join(\",\");\n    };\n    TypingDNA.apu = function (arr, val) {\n      \"NaN\" == String(val) && (val = 0);\n      arr.push(val);\n    };\n    TypingDNA.math = {};\n    TypingDNA.math.rd = function (val, dec) {\n      return Number(val.toFixed(dec));\n    };\n    TypingDNA.math.avg = function (arr) {\n      var len = arr.length;\n      if (len > 0) {\n        var sum = 0;\n        for (var i = 0; i < len; i++) {\n          sum += arr[i];\n        }\n        return this.rd(sum / len, 4);\n      } else {\n        return 0;\n      }\n    };\n    TypingDNA.math.sd = function (arr) {\n      var len = arr.length;\n      if (len < 2) {\n        return 0;\n      } else {\n        var sumVS = 0;\n        var mean = this.avg(arr);\n        for (var i = 0; i < len; i++) {\n          sumVS += (arr[i] - mean) * (arr[i] - mean);\n        }\n        var sd = Math.sqrt(sumVS / len);\n        return sd;\n      }\n    };\n    TypingDNA.math.fo = function (arr) {\n      if (arr.length > 1) {\n        var values = arr.concat();\n        var len = arr.length;\n        values.sort(function (a, b) {\n          return a - b;\n        });\n        var asd = this.sd(values);\n        var aMean = values[Math.ceil(arr.length / 2)];\n        var multiplier = 2;\n        var maxVal = aMean + multiplier * asd;\n        var minVal = aMean - multiplier * asd;\n        if (len < 20) {\n          minVal = 0;\n        }\n        var fVal = [];\n        for (var i = 0; i < len; i++) {\n          var tempval = values[i];\n          if (tempval < maxVal && tempval > minVal) {\n            fVal.push(tempval);\n          }\n        }\n        return fVal;\n      } else {\n        return arr;\n      }\n    }; // Calculate a 32 bit FNV-1a hash\n\n    TypingDNA.math.fnv1aHash = function (str) {\n      if (str == undefined && typeof str !== 'string') {\n        return 0;\n      }\n      str = str.toLowerCase();\n      var i, l;\n      var hval = 0x721b5ad4;\n      for (i = 0, l = str.length; i < l; i++) {\n        hval ^= str.charCodeAt(i);\n        hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\n      }\n      return hval >>> 0;\n    };\n    TypingDNA.history = {};\n    TypingDNA.history.stack = [];\n    TypingDNA.history.stackDiagram = [];\n    TypingDNA.history.add = function (arr) {\n      this.stack.push(arr);\n      if (this.stack.length > TypingDNA.maxHistoryLength) {\n        this.stack.shift();\n      }\n    };\n    TypingDNA.history.addDiagram = function (arr) {\n      this.stackDiagram.push(arr);\n    };\n    TypingDNA.history.getDiagram = function (extended, str, textId, targetId, caseSensitive) {\n      var caseSensitive = caseSensitive != undefined ? caseSensitive : str == undefined || str == \"\";\n      var returnArr = [];\n      var diagramType = extended == true ? 1 : 0;\n      var stackDiagram = this.stackDiagram;\n      if (targetId != undefined && targetId != \"\" && stackDiagram.length > 0) {\n        stackDiagram = TypingDNA.sliceStackByTargetId(stackDiagram, targetId);\n        if (str == undefined || str == \"\") {\n          var element = TypingDNA.document.getElementById(targetId);\n          if (element != null) {\n            str = element.value;\n          }\n        }\n      } else {\n        var targetLength = TypingDNA.targetIds.length;\n        if (str == undefined || str == \"\") {\n          if (targetLength > 0) {\n            str = \"\";\n            for (var i = 0; i < targetLength; i++) {\n              var element = TypingDNA.document.getElementById(TypingDNA.targetIds[i]);\n              if (element != null) {\n                str += element.value;\n              }\n            }\n          }\n        }\n      }\n      var missingCount = 0;\n      var diagramHistoryLength = stackDiagram.length;\n      var strLength = diagramHistoryLength;\n      if (typeof str === 'string') {\n        strLength = str.length;\n      } else if (typeof str === 'number' && str < diagramHistoryLength) {\n        strLength = str;\n      }\n      var returnTextId = 0;\n      if (textId != undefined) {\n        if (isNaN(parseInt(textId))) {\n          returnTextId = TypingDNA.math.fnv1aHash(textId);\n        } else {\n          returnTextId = parseInt(textId);\n        }\n      } else {\n        if (typeof str === 'string') {\n          returnTextId = TypingDNA.math.fnv1aHash(str);\n        }\n      }\n      returnArr.push([TypingDNA.isMobile(), TypingDNA.version, TypingDNA.flags, diagramType, strLength, returnTextId, TypingDNA.history.getSpecialKeys()]);\n      if (str != undefined && str.length > 0 && typeof str === 'string') {\n        var strLower = str.toLowerCase();\n        var strUpper = str.toUpperCase();\n        var lastFoundPos = [];\n        var lastPos = 0;\n        var strUpperCharCode;\n        var currentSensitiveCharCode;\n        for (var i = 0; i < str.length; i++) {\n          var currentCharCode = str.charCodeAt(i);\n          if (!caseSensitive) {\n            strUpperCharCode = strUpper.charCodeAt(i);\n            currentSensitiveCharCode = strUpperCharCode != currentCharCode ? strUpperCharCode : strLower.charCodeAt(i);\n          }\n          var startPos = lastPos;\n          var finishPos = diagramHistoryLength;\n          var found = false;\n          while (found == false) {\n            for (var j = startPos; j < finishPos; j++) {\n              var arr = stackDiagram[j];\n              var charCode = arr[3];\n              if (charCode == currentCharCode || !caseSensitive && charCode == currentSensitiveCharCode) {\n                found = true;\n                if (j == lastPos) {\n                  lastPos++;\n                  lastFoundPos = [];\n                } else {\n                  lastFoundPos.push(j);\n                  var len = lastFoundPos.length;\n                  if (len > 1 && lastFoundPos[len - 1] == lastFoundPos[len - 2] + 1) {\n                    lastPos = j + 1;\n                    lastFoundPos = [];\n                  }\n                }\n                var keyCode = arr[0];\n                var seekTime = arr[1];\n                var pressTime = arr[2];\n                if (extended) {\n                  returnArr.push([charCode, seekTime, pressTime, keyCode]);\n                } else {\n                  returnArr.push([seekTime, pressTime]);\n                }\n                break;\n              }\n            }\n            if (found == false) {\n              if (startPos != 0) {\n                startPos = 0;\n                finishPos = lastPos;\n              } else {\n                found = true;\n                if (TypingDNA.replaceMissingKeys) {\n                  missingCount++;\n                  if (typeof TypingDNA.savedMissingAvgValues !== 'object' || TypingDNA.savedMissingAvgValues.historyLength != diagramHistoryLength) {\n                    var histSktF = TypingDNA.math.fo(TypingDNA.history.get(0, \"seek\"));\n                    var histPrtF = TypingDNA.math.fo(TypingDNA.history.get(0, \"press\"));\n                    var seekTime = Math.round(TypingDNA.math.avg(histSktF));\n                    var pressTime = Math.round(TypingDNA.math.avg(histPrtF));\n                    TypingDNA.savedMissingAvgValues = {\n                      seekTime: seekTime,\n                      pressTime: pressTime,\n                      historyLength: diagramHistoryLength\n                    };\n                  } else {\n                    var seekTime = TypingDNA.savedMissingAvgValues.seekTime;\n                    var pressTime = TypingDNA.savedMissingAvgValues.pressTime;\n                  }\n                  var missing = 1;\n                  if (extended) {\n                    returnArr.push([currentCharCode, seekTime, pressTime, currentCharCode, missing]);\n                  } else {\n                    returnArr.push([seekTime, pressTime, missing]);\n                  }\n                  break;\n                }\n              }\n            }\n          }\n          if (TypingDNA.replaceMissingKeysPerc < missingCount * 100 / strLength) {\n            return null;\n          }\n        }\n      } else {\n        var startCount = 0;\n        if (typeof str === 'number') {\n          startCount = diagramHistoryLength - str;\n        }\n        if (startCount < 0) {\n          startCount = 0;\n        }\n        for (var i = startCount; i < diagramHistoryLength; i++) {\n          var arr = stackDiagram[i];\n          var keyCode = arr[0];\n          var seekTime = arr[1];\n          var pressTime = arr[2];\n          if (extended) {\n            var charCode = arr[3];\n            returnArr.push([charCode, seekTime, pressTime, keyCode]);\n          } else {\n            returnArr.push([seekTime, pressTime]);\n          }\n        }\n      }\n      return returnArr.join(\"|\");\n    };\n    TypingDNA.sliceStackByTargetId = function (stack, targetId) {\n      var length = stack.length;\n      var newStack = [];\n      for (i = 0; i < length; i++) {\n        var arr = stack[i];\n        if (arr[5] == targetId) {\n          newStack.push(arr);\n        }\n      }\n      return newStack;\n    };\n    TypingDNA.history.get = function (length, type, targetId) {\n      var stack = this.stack;\n      if (targetId != undefined && targetId != \"\" && stack.length > 0) {\n        stack = TypingDNA.sliceStackByTargetId(stack, targetId);\n      }\n      var historyTotalLength = stack.length;\n      if (length == 0 || length == undefined) {\n        length = TypingDNA.defaultHistoryLength;\n      }\n      if (length > historyTotalLength) {\n        length = historyTotalLength;\n      }\n      switch (type) {\n        case \"seek\":\n          var seekArr = [];\n          for (i = 1; i <= length; i++) {\n            var seekTime = stack[historyTotalLength - i][1];\n            if (seekTime <= TypingDNA.maxSeekTime) {\n              seekArr.push(seekTime);\n            }\n          }\n          return seekArr;\n        case \"press\":\n          var pressArr = [];\n          for (i = 1; i <= length; i++) {\n            var pressTime = stack[historyTotalLength - i][2];\n            if (pressTime <= TypingDNA.maxPressTime) {\n              pressArr.push(pressTime);\n            }\n          }\n          return pressArr;\n        default:\n          var historyStackObj = {};\n          for (var i in TypingDNA.keyCodes) {\n            historyStackObj[TypingDNA.keyCodes[i]] = [[], [], []];\n          }\n          for (i = 1; i <= length; i++) {\n            var arr = stack[historyTotalLength - i];\n            var keyCode = arr[0];\n            var seekTime = arr[1];\n            var pressTime = arr[2];\n            var prevKeyCode = arr[3];\n            if (TypingDNA.keyCodesObj[keyCode]) {\n              if (seekTime <= TypingDNA.maxSeekTime) {\n                historyStackObj[keyCode][0].push(seekTime);\n                if (prevKeyCode != 0 && TypingDNA.keyCodesObj[prevKeyCode]) {\n                  historyStackObj[prevKeyCode][2].push(seekTime);\n                }\n              }\n              if (pressTime <= TypingDNA.maxPressTime) {\n                historyStackObj[keyCode][1].push(pressTime);\n              }\n            }\n          }\n          return [historyStackObj, length];\n      }\n    };\n    TypingDNA.history.getSpecialKeys = function () {\n      var returnArr = [];\n      var length = this.stack.length;\n      var historyStackObj = {};\n      for (var i in TypingDNA.spKeyCodes) {\n        historyStackObj[TypingDNA.spKeyCodes[i]] = [[]];\n      }\n      for (i = 1; i <= length; i++) {\n        var arr = this.stack[length - i];\n        if (TypingDNA.spKeyCodesObj[arr[0]]) {\n          var keyCode = arr[0];\n          var pressTime = arr[2];\n          if (pressTime <= TypingDNA.maxPressTime) {\n            historyStackObj[keyCode][0].push(pressTime);\n          }\n        }\n      }\n      for (var i in TypingDNA.spKeyCodes) {\n        var arr = TypingDNA.math.fo(historyStackObj[TypingDNA.spKeyCodes[i]][0]);\n        var arrLen = arr.length;\n        returnArr.push(arrLen);\n        if (arrLen > 1) {\n          returnArr.push(Math.round(TypingDNA.math.avg(arr)));\n          returnArr.push(Math.round(TypingDNA.math.sd(arr)));\n        } else if (arrLen == 1) {\n          returnArr.push([arr[0], -1]);\n        } else {\n          returnArr.push([-1, -1]);\n        }\n      }\n      var clicksArrLen = TypingDNA.clickTimes.length;\n      returnArr.push(clicksArrLen);\n      if (clicksArrLen > 1) {\n        returnArr.push(Math.round(TypingDNA.math.avg(TypingDNA.clickTimes)));\n        returnArr.push(Math.round(TypingDNA.math.sd(TypingDNA.clickTimes)));\n      } else if (clicksArrLen == 1) {\n        returnArr.push(TypingDNA.clickTimes[0], -1);\n      } else {\n        returnArr.push([-1, -1]);\n      }\n      var stopArrLen = TypingDNA.stopTimes.length;\n      returnArr.push(stopArrLen);\n      if (stopArrLen > 1) {\n        returnArr.push(Math.round(TypingDNA.math.avg(TypingDNA.stopTimes)));\n        returnArr.push(Math.round(TypingDNA.math.sd(TypingDNA.stopTimes)));\n      } else if (stopArrLen == 1) {\n        returnArr.push(TypingDNA.stopTimes[0], -1);\n      } else {\n        returnArr.push([-1, -1]);\n      }\n      return returnArr;\n    };\n    /**\n     * Checks the quality of a typing pattern, how well it is revelated, how useful the\n     * information will be for matching applications. It returns a value between 0 and 1.\n     * Values over 0.3 are acceptable, however a value over 0.7 shows good pattern strength.\n     * @param  {String} typingPattern The typing pattern string returned by the get() function.\n     * @return {Number} A real number between 0 and 1. A close to 1 value means a stronger pattern.\n     * @example var quality = tdna.getQuality(typingPattern);\n     */\n\n    TypingDNA.getQuality = function (typingPattern) {\n      var obj = typingPattern.split(\",\");\n      for (i = 0; i < obj.length; i++) {\n        obj[i] = Number(obj[i]);\n      }\n      obj[0];\n      var acc = rec = avgAcc = 0;\n      var avg = TypingDNA.math.avg(obj);\n      var revs = obj.slice(11, 55);\n      for (var i in revs) {\n        rec += Number(revs[i] > 0);\n        acc += Number(revs[i] > 4);\n        avgAcc += Number(revs[i] > avg);\n      }\n      var tReturn = Math.sqrt(rec * acc * avgAcc) / 80;\n      return tReturn > 1 ? 1 : tReturn;\n    };\n    /**\n     * Checks the validity of a typing pattern if recorded on mobile.\n     * @param  {String} typingPattern The typing pattern string returned by the get() function.\n     * @return {Number} A real number between 0 and 1. A number larger than 0.7 usually means a valid pattern.\n     * @example var quality = tdna.checkMobileValidity(typingPattern);\n     */\n\n    TypingDNA.checkMobileValidity = function (typingPattern) {\n      var obj = typingPattern.split(\",\");\n      var totalEvents = obj[0];\n      if (totalEvents == 0) {\n        return 0;\n      }\n      var rec = 0;\n      var revs = obj.slice(11, 55);\n      for (var i in revs) {\n        rec += Number(revs[i]);\n      }\n      return rec / totalEvents;\n    };\n    TypingDNA.getLength = function (typingPattern) {\n      return Number(typingPattern.split(\",\")[1]);\n    };\n    TypingDNA.isMobile = function () {\n      if (TypingDNA.mobile != undefined) {\n        return TypingDNA.mobile;\n      } else {\n        var check = 0;\n        (function (a) {\n          if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n            check = 1;\n          }\n        })(navigator.userAgent || navigator.vendor || window.opera);\n        TypingDNA.mobile = check;\n        return check;\n      }\n    };\n    TypingDNA.getTextId = function (str) {\n      return TypingDNA.math.fnv1aHash(str);\n    };\n  } else {\n    // TypingDNA is a static class, currently doesn't support actual multiple instances (Singleton implementation)\n    return TypingDNA.instance;\n  }\n};\nexport { typingdna as default };","map":{"version":3,"names":["typingdna","TypingDNA","initialized","prototype","start","apply","arguments","stop","reset","addTarget","removeTarget","getTypingPattern","get","startDiagram","stopDiagram","getDiagram","getExtendedDiagram","getMouseDiagram","startMouse","stopMouse","getQuality","getLength","isMobile","getTextId","maxHistoryLength","defaultHistoryLength","maxSeekTime","maxPressTime","version","flags","instance","document","spKeyCodes","spKeyCodesObj","keyCodes","keyCodesObj","i","pt1","ut1","Date","getTime","wfk","sti","skt","recording","mouseRecording","mouseMoveRecording","spKeyRecording","diagramRecording","dwfk","dsti","dskt","drkc","prevKeyCode","maxMoveDeltaTime","maxScrollDeltaTime","maxStopTime","maxClickTime","maxMouseHistoryLength","lastMouseMoveTime","lastMouseDownTime","stopTimes","clickTimes","lastMouseStop","zl","isAndroidChrome","ACLastTime","ACSeekTime","ACPressTime","ACLastCharCode","ACLastKeyCode","ACInputLengths","inputs","lastLength","ACPreviousKeyCode","targetIds","lastTarget","lastTargetFound","replaceMissingKeys","replaceMissingKeysPerc","keyDown","e","isTarget","target","id","keyCode","removeEventListener","keyUp","keyPress","addEventListener","ACKeyDown","ACKeyUp","t0","seekTotal","startTime","shiftKey","dlastDownKey","charCode","ut","pressTime","seekTime","arr","history","add","undefined","realKeyCode","arrD","addDiagram","mouseScroll","mouse","scrollStarted","currentTime","scrollTimes","push","scrollTopArr","body","scrollTop","clearInterval","scrollInterval","setInterval","checkScroll","mouseMove","started","times","xPositions","screenX","yPositions","screenY","moveInterval","checkMove","mouseDown","which","stopTime","eventType","mouseUp","clickTime","indexOf","targetIndex","value","length","char","substr","selectionStart","toUpperCase","charCodeAt","targetLength","targetFound","attachEvent","stack","getDistance","a","b","Math","sqrt","getTotalDistance","totalDistance","getAngle","xPosDelta","yPosDelta","angle","leftRight","downUp","round","atan","abs","recordMoveAction","deltaTime","directDistance","ratioDistance","speed","isNaN","recordScrollAction","isFinite","shift","mouseDiagram","join","String","clearLastMove","clearLastScroll","splice","all","stackDiagram","obj","type","targetId","str","text","extended","textId","caseSensitive","historyTotalLength","histRev","histSktF","math","fo","histPrtF","pressHistMean","avg","seekHistMean","pressHistSD","sd","seekHistSD","charMeanTime","pressRatio","rd","seekToPressRatio","pressSDToPressRatio","seekSDToPressRatio","cpm","rev","seekMean","pressMean","postMean","seekSD","pressSD","postSD","apu","c","val","getSpecialKeys","dec","Number","toFixed","len","sum","sumVS","mean","values","concat","sort","asd","aMean","ceil","multiplier","maxVal","minVal","fVal","tempval","fnv1aHash","toLowerCase","l","hval","returnArr","diagramType","sliceStackByTargetId","element","getElementById","missingCount","diagramHistoryLength","strLength","returnTextId","parseInt","strLower","strUpper","lastFoundPos","lastPos","strUpperCharCode","currentSensitiveCharCode","currentCharCode","startPos","finishPos","found","j","savedMissingAvgValues","historyLength","missing","startCount","newStack","seekArr","pressArr","historyStackObj","arrLen","clicksArrLen","stopArrLen","typingPattern","split","acc","rec","avgAcc","revs","slice","tReturn","checkMobileValidity","totalEvents","mobile","check","test","navigator","userAgent","vendor","window","opera","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/vendor/TypingDnaRecorder-JavaScript/typingdna.js"],"sourcesContent":["/*\n * Checking in as there is no npm module to consume. \n * Current version is 2.15.\n * Repo - https://github.com/TypingDNA/TypingDnaRecorder-JavaScript\n */\n\n/**\n * TypingDNA - Typing Biometrics JavaScript API\n * https://api.typingdna.com/scripts/typingdna.js\n * https://typingdna.com/scripts/typingdna.js (alternative)\n *\n * @version 2.15\n * @author Raul Popa\n * @copyright SC TypingDNA SRL, http://typingdna.com\n * @license http://www.apache.org/licenses/LICENSE-2.0\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Typical usage:\n * var tdna = new TypingDNA(); // creates a new TypingDNA object and starts recording\n * var typingPattern = tdna.getTypingPattern({type=1, text=\"Hello5g21?*\"});\n * returns a type 1 typing pattern (and continues recording afterwards)\n *\n * Optional:\n * tdna.stop(); // ends recording and clears history stack (returns recording flag: false)\n * tdna.start(); // restarts the recording after a stop (returns recording flag: true)\n * tdna.reset(); // restarts the recording anytime, clears history stack and starts from scratch (returns nothing)\n * var typingPatternQuality = TypingDNA.getQuality(typingPattern); //returns the quality/strength of any typing pattern\n * (there is no need to initialize the class to do pattern quality checking)\n */\n\n/**\n * Creates a single instance (or a reference) of the TypingDNA class\n * @return {Object} Returns the single instance of the TypingDNA class.\n * @example var tdna = new TypingDNA();\n */\nvar typingdna = function TypingDNA() {\n  if (TypingDNA.initialized != true) {\n    TypingDNA.prototype.start = function () {\n      return TypingDNA.start.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.stop = function () {\n      return TypingDNA.stop.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.reset = function () {\n      return TypingDNA.reset.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.addTarget = function () {\n      return TypingDNA.addTarget.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.removeTarget = function () {\n      return TypingDNA.removeTarget.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getTypingPattern = function () {\n      return TypingDNA.getTypingPattern.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.get = function () {\n      // still works but will be deprecated in favor of getTypignPattern()\n      return TypingDNA.get.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.startDiagram = function () {// deprecated in favor of start()\n      //return TypingDNA.startDiagram.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.stopDiagram = function () {// deprecated in favor of stop()\n      //return TypingDNA.stopDiagram.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getDiagram = function () {\n      // still works but will be deprecated in favor of getTypignPattern()\n      return TypingDNA.getDiagram.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getExtendedDiagram = function () {\n      // still works but will be deprecated in favor of getTypignPattern()\n      return TypingDNA.getExtendedDiagram.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getMouseDiagram = function () {\n      return TypingDNA.getMouseDiagram.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.startMouse = function () {\n      return TypingDNA.startMouse.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.stopMouse = function () {\n      return TypingDNA.stopMouse.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getQuality = function () {\n      return TypingDNA.getQuality.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getLength = function () {\n      return TypingDNA.getLength.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.isMobile = function () {\n      return TypingDNA.isMobile.apply(this, arguments);\n    };\n\n    TypingDNA.prototype.getTextId = function () {\n      return TypingDNA.getTextId.apply(this, arguments);\n    };\n\n    TypingDNA.initialized = true;\n    TypingDNA.prototype.maxHistoryLength = TypingDNA.maxHistoryLength;\n    TypingDNA.prototype.defaultHistoryLength = TypingDNA.defaultHistoryLength;\n    TypingDNA.prototype.maxSeekTime = TypingDNA.maxSeekTime;\n    TypingDNA.prototype.maxPressTime = TypingDNA.maxPressTime;\n    TypingDNA.version = 2.15;\n    TypingDNA.flags = 0;\n    TypingDNA.instance = this;\n    TypingDNA.document = document;\n    TypingDNA.maxHistoryLength = 2000;\n    TypingDNA.maxSeekTime = 1500;\n    TypingDNA.maxPressTime = 300;\n    TypingDNA.defaultHistoryLength = 160;\n    TypingDNA.spKeyCodes = [8, 13, 32];\n    TypingDNA.spKeyCodesObj = {\n      8: 1,\n      13: 1,\n      32: 1\n    };\n    TypingDNA.keyCodes = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 32, 222, 188, 190, 186, 187, 189, 191, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57];\n    TypingDNA.keyCodesObj = {};\n\n    for (var i in TypingDNA.keyCodes) {\n      TypingDNA.keyCodesObj[TypingDNA.keyCodes[i]] = 1;\n    }\n\n    TypingDNA.pt1 = TypingDNA.ut1 = new Date().getTime();\n    TypingDNA.wfk = [];\n    TypingDNA.sti = [];\n    TypingDNA.skt = [];\n    TypingDNA.recording = true;\n    TypingDNA.mouseRecording = true;\n    TypingDNA.mouseMoveRecording = false;\n    TypingDNA.spKeyRecording = true;\n    TypingDNA.diagramRecording = true;\n    TypingDNA.dwfk = [];\n    TypingDNA.dsti = [];\n    TypingDNA.dskt = [];\n    TypingDNA.drkc = [];\n    TypingDNA.prevKeyCode = 0;\n    TypingDNA.maxMoveDeltaTime = 600;\n    TypingDNA.maxScrollDeltaTime = 800;\n    TypingDNA.maxStopTime = 1500;\n    TypingDNA.maxClickTime = 600;\n    TypingDNA.maxMouseHistoryLength = 500;\n    TypingDNA.lastMouseMoveTime = TypingDNA.lastMouseDownTime = new Date().getTime();\n    TypingDNA.stopTimes = [];\n    TypingDNA.clickTimes = [];\n    TypingDNA.lastMouseStop = true;\n    TypingDNA.zl = 0.0000001;\n    TypingDNA.isAndroidChrome = false;\n    TypingDNA.ACLastTime = new Date().getTime();\n    TypingDNA.ACSeekTime = 0;\n    TypingDNA.ACPressTime = 0;\n    TypingDNA.ACLastCharCode = 0;\n    TypingDNA.ACLastKeyCode = 0;\n    TypingDNA.ACInputLengths = {\n      inputs: [],\n      lastLength: []\n    };\n    TypingDNA.ACPreviousKeyCode = 0;\n    TypingDNA.targetIds = [];\n    TypingDNA.lastTarget = \"\";\n    TypingDNA.lastTargetFound = false;\n    TypingDNA.replaceMissingKeys = true;\n    TypingDNA.replaceMissingKeysPerc = 7;\n\n    TypingDNA.keyDown = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n\n      var keyCode = e.keyCode;\n\n      if (TypingDNA.wfk[keyCode] == 1 || TypingDNA.dwfk[keyCode] == 1) ;\n\n      if (keyCode == 229 && TypingDNA.isMobile() && !TypingDNA.isAndroidChrome) {\n        TypingDNA.isAndroidChrome = true;\n        TypingDNA.ACSeekTime = new Date().getTime() - TypingDNA.ACLastTime;\n        TypingDNA.ACLastTime = new Date().getTime();\n        TypingDNA.document.removeEventListener(\"keydown\", TypingDNA.keyDown);\n        TypingDNA.document.removeEventListener(\"keyup\", TypingDNA.keyUp);\n        TypingDNA.document.removeEventListener(\"keypress\", TypingDNA.keyPress); // if android\n\n        TypingDNA.document.addEventListener(\"keydown\", TypingDNA.ACKeyDown);\n        TypingDNA.document.addEventListener(\"keyup\", TypingDNA.ACKeyUp);\n      } else {\n        var t0 = TypingDNA.pt1;\n        TypingDNA.pt1 = new Date().getTime();\n        var seekTotal = TypingDNA.pt1 - t0;\n        var startTime = TypingDNA.pt1;\n\n        if (TypingDNA.recording == true || TypingDNA.spKeyCodesObj[keyCode] && TypingDNA.spKeyRecording == true) {\n          if (!e.shiftKey || TypingDNA.isMobile()) {\n            TypingDNA.wfk[keyCode] = 1;\n            TypingDNA.skt[keyCode] = seekTotal;\n            TypingDNA.sti[keyCode] = startTime;\n          }\n        }\n\n        if (TypingDNA.diagramRecording == true) {\n          TypingDNA.dwfk[keyCode] = 1;\n          TypingDNA.dskt[keyCode] = seekTotal;\n          TypingDNA.dsti[keyCode] = startTime;\n          TypingDNA.dlastDownKey = keyCode;\n        }\n      }\n    };\n\n    TypingDNA.keyPress = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n\n      if (TypingDNA.diagramRecording == true) {\n        var keyCode = TypingDNA.dlastDownKey;\n        TypingDNA.drkc[keyCode] = e.charCode;\n      }\n    };\n\n    TypingDNA.keyUp = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n\n      var ut = new Date().getTime();\n      var keyCode = e.keyCode;\n\n      if (TypingDNA.recording == true || TypingDNA.spKeyCodesObj[keyCode] && TypingDNA.spKeyRecording == true) {\n        if (!e.shiftKey || TypingDNA.isMobile()) {\n          if (TypingDNA.wfk[keyCode] == 1) {\n            var pressTime = ut - TypingDNA.sti[keyCode];\n            var seekTime = TypingDNA.skt[keyCode];\n            var arr = [keyCode, seekTime, pressTime, TypingDNA.prevKeyCode, ut, e.target.id];\n            TypingDNA.history.add(arr);\n            TypingDNA.prevKeyCode = keyCode;\n          }\n        }\n\n        TypingDNA.wfk[keyCode] = 0;\n      }\n\n      if (TypingDNA.diagramRecording == true) {\n        if (TypingDNA.drkc[keyCode] != undefined && TypingDNA.drkc[keyCode] != 0) {\n          if (TypingDNA.dwfk[keyCode] == 1) {\n            var pressTime = ut - TypingDNA.dsti[keyCode];\n            var seekTime = TypingDNA.dskt[keyCode];\n            var realKeyCode = TypingDNA.drkc[keyCode];\n            var arrD = [keyCode, seekTime, pressTime, realKeyCode, ut, e.target.id];\n            TypingDNA.history.addDiagram(arrD);\n          }\n        }\n\n        TypingDNA.dwfk[keyCode] = 0;\n      }\n    };\n\n    TypingDNA.mouseScroll = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        if (TypingDNA.mouseMoveRecording == true) {\n          if (TypingDNA.mouse.scrollStarted == true) {\n            var currentTime = new Date().getTime();\n            TypingDNA.mouse.scrollTimes.push(currentTime);\n            TypingDNA.mouse.scrollTopArr.push(TypingDNA.document.body.scrollTop);\n            clearInterval(TypingDNA.scrollInterval);\n            TypingDNA.scrollInterval = setInterval(TypingDNA.mouse.checkScroll, TypingDNA.maxScrollDeltaTime);\n          } else {\n            TypingDNA.mouse.scrollStarted = true;\n          }\n        }\n      }\n    };\n\n    TypingDNA.mouseMove = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        var currentTime = new Date().getTime();\n\n        if (TypingDNA.mouseMoveRecording == true) {\n          if (TypingDNA.mouse.started == true) {\n            TypingDNA.mouse.times.push(currentTime);\n            TypingDNA.mouse.xPositions.push(e.screenX);\n            TypingDNA.mouse.yPositions.push(e.screenY);\n            clearInterval(TypingDNA.moveInterval);\n            TypingDNA.moveInterval = setInterval(TypingDNA.mouse.checkMove, TypingDNA.maxMoveDeltaTime);\n          } else {\n            TypingDNA.mouse.started = true;\n          }\n        }\n\n        TypingDNA.lastMouseMoveTime = currentTime;\n      }\n    };\n\n    TypingDNA.mouseDown = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        TypingDNA.mouse.checkMove();\n        TypingDNA.mouse.checkScroll();\n\n        if (e.which == 1) {\n          TypingDNA.lastMouseDownTime = new Date().getTime();\n          var stopTime = TypingDNA.lastMouseDownTime - TypingDNA.lastMouseMoveTime;\n\n          if (stopTime < TypingDNA.maxStopTime && TypingDNA.lastMouseStop == false) {\n            TypingDNA.stopTimes.push(stopTime);\n\n            if (TypingDNA.mouseMoveRecording == true) {\n              var eventType = 3;\n              var arr = [eventType, stopTime];\n              TypingDNA.mouse.history.add(arr);\n              TypingDNA.lastMouseStop = true;\n            }\n          }\n        }\n      }\n    };\n\n    TypingDNA.mouseUp = function (e) {\n      if (TypingDNA.mouseRecording == true) {\n        if (e.which == 1) {\n          var clickTime = new Date().getTime() - TypingDNA.lastMouseDownTime;\n\n          if (clickTime < TypingDNA.maxClickTime && TypingDNA.lastMouseDownTime > TypingDNA.lastMouseMoveTime) {\n            TypingDNA.clickTimes.push(clickTime);\n\n            if (TypingDNA.mouseMoveRecording == true) {\n              var eventType = 4;\n              var arr = [eventType, clickTime];\n              TypingDNA.mouse.history.add(arr);\n            }\n          }\n        }\n      }\n    };\n\n    TypingDNA.ACKeyDown = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n\n      TypingDNA.ACSeekTime = new Date().getTime() - TypingDNA.ACLastTime;\n      TypingDNA.ACLastTime = new Date().getTime();\n\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n\n      if (TypingDNA.ACInputLengths.inputs.indexOf(e.target) === -1) {\n        TypingDNA.ACInputLengths.inputs.push(e.target);\n        TypingDNA.ACInputLengths.lastLength.push(0);\n      }\n    };\n\n    TypingDNA.ACKeyUp = function (e) {\n      if (!TypingDNA.recording && !TypingDNA.diagramRecording) {\n        return;\n      }\n\n      TypingDNA.ACPressTime = new Date().getTime() - TypingDNA.ACLastTime;\n      TypingDNA.ACLastTime = new Date().getTime();\n\n      if (!TypingDNA.isTarget(e.target.id)) {\n        return;\n      }\n\n      var keyCode = e.keyCode;\n      var targetIndex = TypingDNA.ACInputLengths.inputs.indexOf(e.target);\n\n      if (targetIndex === -1) {\n        TypingDNA.ACInputLengths.inputs.push(e.target);\n        TypingDNA.ACInputLengths.lastLength.push(0);\n        targetIndex = TypingDNA.ACInputLengths.inputs.indexOf(e.target);\n      }\n\n      if (keyCode == 229 && e.target.value.length >= TypingDNA.ACInputLengths.lastLength[targetIndex]) {\n        var char = e.target.value.substr(e.target.selectionStart - 1 || 0, 1);\n        keyCode = char.toUpperCase().charCodeAt(0);\n        TypingDNA.ACLastCharCode = char.charCodeAt(0);\n        TypingDNA.ACLastKeyCode = char.toUpperCase().charCodeAt(0);\n      }\n\n      TypingDNA.ACInputLengths.lastLength[targetIndex] = e.target.value.length;\n      var arr = [keyCode, TypingDNA.ACSeekTime, TypingDNA.ACPressTime, TypingDNA.ACPreviousKeyCode, TypingDNA.ACLastTime];\n      TypingDNA.history.add(arr);\n      TypingDNA.ACPreviousKeyCode = keyCode;\n\n      if (TypingDNA.diagramRecording == true) {\n        var arrD = [keyCode, TypingDNA.ACSeekTime, TypingDNA.ACPressTime, TypingDNA.ACLastCharCode];\n        TypingDNA.history.addDiagram(arrD);\n      }\n    };\n\n    TypingDNA.isTarget = function (target) {\n      if (TypingDNA.lastTarget == target && TypingDNA.lastTargetFound) {\n        return true;\n      } else {\n        var targetLength = TypingDNA.targetIds.length;\n        var targetFound = false;\n\n        if (targetLength > 0) {\n          for (var i = 0; i < targetLength; i++) {\n            if (TypingDNA.targetIds[i] == target) {\n              targetFound = true;\n              break;\n            }\n          }\n\n          TypingDNA.lastTarget = target;\n          TypingDNA.lastTargetFound = targetFound;\n          return targetFound;\n        } else {\n          TypingDNA.lastTarget = target;\n          TypingDNA.lastTargetFound = true;\n          return true;\n        }\n      }\n    };\n\n    if (TypingDNA.document.addEventListener) {\n      TypingDNA.document.addEventListener(\"keydown\", TypingDNA.keyDown);\n      TypingDNA.document.addEventListener(\"keyup\", TypingDNA.keyUp);\n      TypingDNA.document.addEventListener(\"keypress\", TypingDNA.keyPress);\n      TypingDNA.document.addEventListener(\"mousemove\", TypingDNA.mouseMove);\n      TypingDNA.document.addEventListener(\"mousedown\", TypingDNA.mouseDown);\n      TypingDNA.document.addEventListener(\"mouseup\", TypingDNA.mouseUp);\n      TypingDNA.document.addEventListener(\"scroll\", TypingDNA.mouseScroll);\n    } else if (TypingDNA.document.attachEvent) {\n      TypingDNA.document.attachEvent(\"onkeydown\", TypingDNA.keyDown);\n      TypingDNA.document.attachEvent(\"onkeyup\", TypingDNA.keyUp);\n      TypingDNA.document.attachEvent(\"onkeypress\", TypingDNA.keyPress);\n      TypingDNA.document.attachEvent(\"onmousemove\", TypingDNA.mouseMove);\n      TypingDNA.document.attachEvent(\"onmousedown\", TypingDNA.mouseDown);\n      TypingDNA.document.attachEvent(\"onmouseup\", TypingDNA.mouseUp);\n      TypingDNA.document.attachEvent(\"onscroll\", TypingDNA.mouseScroll);\n    } else ;\n\n    TypingDNA.mouse = {};\n    TypingDNA.mouse.times = [];\n    TypingDNA.mouse.xPositions = [];\n    TypingDNA.mouse.yPositions = [];\n    TypingDNA.mouse.scrollTimes = [];\n    TypingDNA.mouse.scrollTopArr = [];\n    TypingDNA.mouse.history = {};\n    TypingDNA.mouse.history.stack = [];\n\n    TypingDNA.mouse.getDistance = function (a, b) {\n      return Math.sqrt(a * a + b * b);\n    };\n\n    TypingDNA.mouse.getTotalDistance = function (xPositions, yPositions) {\n      var totalDistance = 0;\n      var length = xPositions.length;\n\n      for (i = 1; i < length - 1; i++) {\n        var a = xPositions[i] - xPositions[i - 1];\n        var b = yPositions[i] - yPositions[i - 1];\n        totalDistance += TypingDNA.mouse.getDistance(a, b);\n      }\n\n      return totalDistance;\n    };\n\n    TypingDNA.mouse.getAngle = function (xPosDelta, yPosDelta) {\n      var angle = 0;\n      var leftRight = xPosDelta >= 0; // 1 if left, 0 if right\n\n      var downUp = yPosDelta < 0; // 1 if down, 0 if up\n\n      if (leftRight) {\n        if (downUp) {\n          angle = 180 + Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251); // 0.01745329251 = pi/180\n        } else {\n          angle = 270 + (90 - Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251));\n        }\n      } else {\n        if (downUp) {\n          angle = 90 + (90 - Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251));\n        } else {\n          angle = Math.round(Math.atan(Math.abs(xPosDelta) / (Math.abs(yPosDelta) + 0.0000001)) / 0.01745329251);\n        }\n      }\n\n      return angle;\n    };\n\n    TypingDNA.mouse.recordMoveAction = function () {\n      var length = TypingDNA.mouse.times.length;\n\n      if (length < 3) {\n        return;\n      }\n\n      var deltaTime = TypingDNA.mouse.times[length - 1] - TypingDNA.mouse.times[0];\n      var xPosDelta = TypingDNA.mouse.xPositions[length - 1] - TypingDNA.mouse.xPositions[0];\n      var yPosDelta = TypingDNA.mouse.yPositions[length - 1] - TypingDNA.mouse.yPositions[0];\n      var directDistance = Math.round(TypingDNA.mouse.getDistance(xPosDelta, yPosDelta));\n      var totalDistance = Math.round(TypingDNA.mouse.getTotalDistance(TypingDNA.mouse.xPositions, TypingDNA.mouse.yPositions));\n      var ratioDistance = Math.round(totalDistance * 100 / directDistance);\n      var speed = Math.round(directDistance * 100 / deltaTime);\n      var angle = TypingDNA.mouse.getAngle(xPosDelta, yPosDelta);\n      var eventType = 1;\n      var arr = [eventType, deltaTime, directDistance, speed, angle, ratioDistance];\n\n      for (i in arr) {\n        if (isNaN(arr[i])) {\n          return;\n        }\n      }\n\n      TypingDNA.mouse.history.add(arr);\n      TypingDNA.lastMouseStop = false;\n    };\n\n    TypingDNA.mouse.recordScrollAction = function () {\n      var length = TypingDNA.mouse.scrollTimes.length;\n\n      if (length < 2) {\n        return;\n      }\n\n      var deltaTime = TypingDNA.mouse.scrollTimes[length - 1] - TypingDNA.mouse.scrollTimes[0];\n      var directDistance = TypingDNA.mouse.scrollTopArr[length - 1] - TypingDNA.mouse.scrollTopArr[0];\n      var speed = Math.round(directDistance * 100 / deltaTime);\n      var eventType = 2;\n      var arr = [eventType, deltaTime, directDistance, speed];\n\n      for (i in arr) {\n        if (isNaN(arr[i]) && !isFinite(arr[i])) {\n          return;\n        }\n      }\n\n      TypingDNA.mouse.history.add(arr);\n    };\n\n    TypingDNA.mouse.history.add = function (arr) {\n      this.stack.push(arr);\n\n      if (this.stack.length > TypingDNA.maxMouseHistoryLength) {\n        this.stack.shift();\n      }\n    };\n\n    TypingDNA.mouse.history.getDiagram = function () {\n      var mouseDiagram = this.stack.join(\"|\");\n      return [String(TypingDNA.isMobile()) + \",\" + String(TypingDNA.version), mouseDiagram].join(\"|\");\n    };\n\n    TypingDNA.mouse.clearLastMove = function () {\n      TypingDNA.mouse.times = [];\n      TypingDNA.mouse.xPositions = [];\n      TypingDNA.mouse.yPositions = [];\n    };\n\n    TypingDNA.mouse.checkMove = function () {\n      clearInterval(TypingDNA.moveInterval);\n\n      if (TypingDNA.mouse.started == true) {\n        TypingDNA.mouse.started = false;\n        TypingDNA.mouse.recordMoveAction();\n        TypingDNA.mouse.clearLastMove();\n      }\n    };\n\n    TypingDNA.mouse.clearLastScroll = function () {\n      TypingDNA.mouse.scrollTimes = [];\n      TypingDNA.mouse.scrollTopArr = [];\n    };\n\n    TypingDNA.mouse.checkScroll = function () {\n      clearInterval(TypingDNA.scrollInterval);\n\n      if (TypingDNA.mouse.scrollStarted == true) {\n        TypingDNA.mouse.scrollStarted = false;\n        TypingDNA.mouse.recordScrollAction();\n        TypingDNA.mouse.clearLastScroll();\n      }\n    };\n    /**\n     * Adds a target to the targetIds array.\n     */\n\n\n    TypingDNA.addTarget = function (target) {\n      var targetLength = TypingDNA.targetIds.length;\n      var targetFound = false;\n\n      if (targetLength > 0) {\n        for (var i = 0; i < targetLength; i++) {\n          if (TypingDNA.targetIds[i] == target) {\n            targetFound = true;\n            break;\n          }\n        }\n\n        if (!targetFound) {\n          TypingDNA.targetIds.push(target);\n        }\n      } else {\n        TypingDNA.targetIds.push(target);\n      }\n    };\n    /**\n     * Adds a target to the targetIds array.\n     */\n\n\n    TypingDNA.removeTarget = function (target) {\n      var targetLength = TypingDNA.targetIds.length;\n\n      if (targetLength > 0) {\n        for (var i = 0; i < targetLength; i++) {\n          if (TypingDNA.targetIds[i] == target) {\n            TypingDNA.targetIds.splice(i, 1);\n            break;\n          }\n        }\n      }\n    };\n    /**\n     * Resets the history stack\n     */\n\n\n    TypingDNA.reset = function (all) {\n      TypingDNA.history.stack = [];\n      TypingDNA.history.stackDiagram = [];\n      TypingDNA.clickTimes = [];\n      TypingDNA.stopTimes = [];\n      TypingDNA.ACInputLengths = {\n        inputs: [],\n        lastLength: []\n      };\n\n      if (all == true) {\n        TypingDNA.mouse.history.stack = [];\n      }\n    };\n    /**\n     * Automatically called at initilization. It starts the recording of keystrokes.\n     */\n\n\n    TypingDNA.start = function () {\n      TypingDNA.diagramRecording = true;\n      return TypingDNA.recording = true;\n    };\n    /**\n     * Ends the recording of further keystrokes. To restart recording afterwards you can\n     * either call TypingDNA.start() or create a new TypingDNA object again, not recommended.\n     */\n\n\n    TypingDNA.stop = function () {\n      TypingDNA.diagramRecording = false;\n      return TypingDNA.recording = false;\n    };\n    /**\n     * Starts the recording of mouse activity.\n     */\n\n\n    TypingDNA.startMouse = function () {\n      return TypingDNA.mouseRecording = TypingDNA.mouseMoveRecording = true;\n    };\n    /**\n     * Stops the recording of mouse activity.\n     */\n\n\n    TypingDNA.stopMouse = function () {\n      return TypingDNA.mouseRecording = TypingDNA.mouseMoveRecording = false;\n    };\n    /**\n     * This is the main function that outputs the typing pattern as a String\n     * {type:Number, text:String, textId:Number, length: Number, targetId:String, caseSensitive:Boolean}\n     * @param {Object} obj an object with the following properties\n     * * * @param {String} type 0 for anytext pattern, 1 for sametext pattern (also called diagram pattern)\n     * * * and 2 for extended pattern (most versatile, can replace both anytext and sametext patterns)\n     * * * @param {Number} length (Optional) the length of the text in the history for which you want\n     * * * the typing pattern. length is ignored when text or targetId is set (or both).\n     * * * @param {String} text  (Only for type 1 and type 2) a typed string that you want the typing pattern for\n     * * * @param {Number} textId (Optional, only for type 1 and type 2) a personalized id for the typed text\n     * * * @param {String} targetId (Optional) specifies if pattern is obtain only from text typed in a certain target\n     * * * @param {Boolean} caseSensitive (Optional, default: false) Used if you pass a text for type 1 or type 2\n     * * * DEPRECATED * * * in favor of type = 2 * * *\n     * * * @param {Boolean} extended (Only for type 1) specifies if full information about what was typed is produced,\n     * * * including the actual key pressed, if false, only the order of pressed keys is kept (no actual content)\n     * @return {String} A typing pattern in string form\n     * @example var typingPattern = tdna.getTypingPattern({type=0, length=180});\n     * @example var typingPattern = tdna.getTypingPattern({type=1, text=\"Hello5g21?*\"});\n     * @example var typingPattern = tdna.getTypingPattern({type=2, text=\"example@mail.com\"});\n     */\n\n\n    TypingDNA.getTypingPattern = function (obj) {\n      if (typeof obj === 'object') {\n        switch (obj.type) {\n          case 0:\n            return TypingDNA.get(obj.length, obj.targetId);\n\n          case 1:\n            var str = obj.text != undefined ? obj.text : obj.length;\n            return TypingDNA.history.getDiagram(obj.extended, str, obj.textId, obj.targetId, obj.caseSensitive);\n\n          case 2:\n            var str = obj.text != undefined ? obj.text : obj.length;\n            return TypingDNA.history.getDiagram(true, str, obj.textId, obj.targetId, obj.caseSensitive);\n\n          default:\n            return TypingDNA.get(obj.length);\n        }\n      } else {\n        return TypingDNA.get();\n      }\n    };\n\n    TypingDNA.getDiagram = function (str, textId) {\n      return TypingDNA.history.getDiagram(false, str, textId, undefined, false);\n    };\n\n    TypingDNA.getExtendedDiagram = function (str, textId) {\n      return TypingDNA.history.getDiagram(true, str, textId, undefined, false);\n    };\n\n    TypingDNA.getMouseDiagram = function () {\n      return TypingDNA.mouse.history.getDiagram();\n    };\n\n    TypingDNA.get = function (length, targetId) {\n      var historyTotalLength = TypingDNA.history.stack.length;\n\n      if (length == undefined || length == 0) {\n        length = TypingDNA.defaultHistoryLength;\n      }\n\n      if (length > historyTotalLength) {\n        length = historyTotalLength;\n      }\n\n      var obj = {};\n      [obj.arr, targetLength] = TypingDNA.history.get(length, \"\", targetId);\n\n      if (targetId != undefined && targetId != \"\") {\n        length = targetLength;\n      }\n\n      var zl = TypingDNA.zl;\n      var histRev = length;\n      var histSktF = TypingDNA.math.fo(TypingDNA.history.get(length, \"seek\", targetId));\n      var histPrtF = TypingDNA.math.fo(TypingDNA.history.get(length, \"press\", targetId));\n      var pressHistMean = Math.round(TypingDNA.math.avg(histPrtF));\n      var seekHistMean = Math.round(TypingDNA.math.avg(histSktF));\n      var pressHistSD = Math.round(TypingDNA.math.sd(histPrtF));\n      var seekHistSD = Math.round(TypingDNA.math.sd(histSktF));\n      var charMeanTime = seekHistMean + pressHistMean;\n      var pressRatio = TypingDNA.math.rd((pressHistMean + zl) / (charMeanTime + zl), 4);\n      var seekToPressRatio = TypingDNA.math.rd((1 - pressRatio) / pressRatio, 4);\n      var pressSDToPressRatio = TypingDNA.math.rd((pressHistSD + zl) / (pressHistMean + zl), 4);\n      var seekSDToPressRatio = TypingDNA.math.rd((seekHistSD + zl) / (pressHistMean + zl), 4);\n      var cpm = Math.round(6E4 / (charMeanTime + zl));\n\n      if (histRev == 0) {\n        cpm = 0;\n      }\n\n      for (var i in obj.arr) {\n        var rev = obj.arr[i][1].length;\n        var seekMean = 0;\n        var pressMean = 0;\n        var postMean = 0;\n        var seekSD = 0;\n        var pressSD = 0;\n        var postSD = 0;\n\n        switch (obj.arr[i][0].length) {\n          case 0:\n            break;\n\n          case 1:\n            var seekMean = TypingDNA.math.rd((obj.arr[i][0][0] + zl) / (seekHistMean + zl), 4);\n            break;\n\n          default:\n            var arr = TypingDNA.math.fo(obj.arr[i][0]);\n            seekMean = TypingDNA.math.rd((TypingDNA.math.avg(arr) + zl) / (seekHistMean + zl), 4);\n            seekSD = TypingDNA.math.rd((TypingDNA.math.sd(arr) + zl) / (seekHistSD + zl), 4);\n        }\n\n        switch (obj.arr[i][1].length) {\n          case 0:\n            break;\n\n          case 1:\n            var pressMean = TypingDNA.math.rd((obj.arr[i][1][0] + zl) / (pressHistMean + zl), 4);\n            break;\n\n          default:\n            var arr = TypingDNA.math.fo(obj.arr[i][1]);\n            pressMean = TypingDNA.math.rd((TypingDNA.math.avg(arr) + zl) / (pressHistMean + zl), 4);\n            pressSD = TypingDNA.math.rd((TypingDNA.math.sd(arr) + zl) / (pressHistSD + zl), 4);\n        }\n\n        switch (obj.arr[i][2].length) {\n          case 0:\n            break;\n\n          case 1:\n            var postMean = TypingDNA.math.rd((obj.arr[i][2][0] + zl) / (seekHistMean + zl), 4);\n            break;\n\n          default:\n            var arr = TypingDNA.math.fo(obj.arr[i][2]);\n            postMean = TypingDNA.math.rd((TypingDNA.math.avg(arr) + zl) / (seekHistMean + zl), 4);\n            postSD = TypingDNA.math.rd((TypingDNA.math.sd(arr) + zl) / (seekHistSD + zl), 4);\n        }\n\n        delete obj.arr[i][2];\n        delete obj.arr[i][1];\n        delete obj.arr[i][0];\n        obj.arr[i][0] = rev;\n        obj.arr[i][1] = seekMean;\n        obj.arr[i][2] = pressMean;\n        obj.arr[i][3] = postMean;\n        obj.arr[i][4] = seekSD;\n        obj.arr[i][5] = pressSD;\n        obj.arr[i][6] = postSD;\n      }\n\n      var arr = [];\n      TypingDNA.apu(arr, histRev);\n      TypingDNA.apu(arr, cpm);\n      TypingDNA.apu(arr, charMeanTime);\n      TypingDNA.apu(arr, pressRatio);\n      TypingDNA.apu(arr, seekToPressRatio);\n      TypingDNA.apu(arr, pressSDToPressRatio);\n      TypingDNA.apu(arr, seekSDToPressRatio);\n      TypingDNA.apu(arr, pressHistMean);\n      TypingDNA.apu(arr, seekHistMean);\n      TypingDNA.apu(arr, pressHistSD);\n      TypingDNA.apu(arr, seekHistSD);\n\n      for (var c = 0; c <= 6; c++) {\n        for (var i = 0; i < 44; i++) {\n          var keyCode = TypingDNA.keyCodes[i];\n          var val = obj.arr[keyCode][c];\n\n          if (val == 0 && c > 0) {\n            val = 1;\n          }\n\n          TypingDNA.apu(arr, val);\n        }\n      }\n\n      TypingDNA.apu(arr, TypingDNA.isMobile());\n      TypingDNA.apu(arr, TypingDNA.version);\n      TypingDNA.apu(arr, TypingDNA.flags);\n      arr.push(TypingDNA.history.getSpecialKeys());\n      return arr.join(\",\");\n    };\n\n    TypingDNA.apu = function (arr, val) {\n      \"NaN\" == String(val) && (val = 0);\n      arr.push(val);\n    };\n\n    TypingDNA.math = {};\n\n    TypingDNA.math.rd = function (val, dec) {\n      return Number(val.toFixed(dec));\n    };\n\n    TypingDNA.math.avg = function (arr) {\n      var len = arr.length;\n\n      if (len > 0) {\n        var sum = 0;\n\n        for (var i = 0; i < len; i++) {\n          sum += arr[i];\n        }\n\n        return this.rd(sum / len, 4);\n      } else {\n        return 0;\n      }\n    };\n\n    TypingDNA.math.sd = function (arr) {\n      var len = arr.length;\n\n      if (len < 2) {\n        return 0;\n      } else {\n        var sumVS = 0;\n        var mean = this.avg(arr);\n\n        for (var i = 0; i < len; i++) {\n          sumVS += (arr[i] - mean) * (arr[i] - mean);\n        }\n\n        var sd = Math.sqrt(sumVS / len);\n        return sd;\n      }\n    };\n\n    TypingDNA.math.fo = function (arr) {\n      if (arr.length > 1) {\n        var values = arr.concat();\n        var len = arr.length;\n        values.sort(function (a, b) {\n          return a - b;\n        });\n        var asd = this.sd(values);\n        var aMean = values[Math.ceil(arr.length / 2)];\n        var multiplier = 2;\n        var maxVal = aMean + multiplier * asd;\n        var minVal = aMean - multiplier * asd;\n\n        if (len < 20) {\n          minVal = 0;\n        }\n\n        var fVal = [];\n\n        for (var i = 0; i < len; i++) {\n          var tempval = values[i];\n\n          if (tempval < maxVal && tempval > minVal) {\n            fVal.push(tempval);\n          }\n        }\n\n        return fVal;\n      } else {\n        return arr;\n      }\n    }; // Calculate a 32 bit FNV-1a hash\n\n\n    TypingDNA.math.fnv1aHash = function (str) {\n      if (str == undefined && typeof str !== 'string') {\n        return 0;\n      }\n\n      str = str.toLowerCase();\n      var i, l;\n      var hval = 0x721b5ad4;\n\n      for (i = 0, l = str.length; i < l; i++) {\n        hval ^= str.charCodeAt(i);\n        hval += (hval << 1) + (hval << 4) + (hval << 7) + (hval << 8) + (hval << 24);\n      }\n\n      return hval >>> 0;\n    };\n\n    TypingDNA.history = {};\n    TypingDNA.history.stack = [];\n    TypingDNA.history.stackDiagram = [];\n\n    TypingDNA.history.add = function (arr) {\n      this.stack.push(arr);\n\n      if (this.stack.length > TypingDNA.maxHistoryLength) {\n        this.stack.shift();\n      }\n    };\n\n    TypingDNA.history.addDiagram = function (arr) {\n      this.stackDiagram.push(arr);\n    };\n\n    TypingDNA.history.getDiagram = function (extended, str, textId, targetId, caseSensitive) {\n      var caseSensitive = caseSensitive != undefined ? caseSensitive : str == undefined || str == \"\";\n      var returnArr = [];\n      var diagramType = extended == true ? 1 : 0;\n      var stackDiagram = this.stackDiagram;\n\n      if (targetId != undefined && targetId != \"\" && stackDiagram.length > 0) {\n        stackDiagram = TypingDNA.sliceStackByTargetId(stackDiagram, targetId);\n\n        if (str == undefined || str == \"\") {\n          var element = TypingDNA.document.getElementById(targetId);\n\n          if (element != null) {\n            str = element.value;\n          }\n        }\n      } else {\n        var targetLength = TypingDNA.targetIds.length;\n\n        if (str == undefined || str == \"\") {\n          if (targetLength > 0) {\n            str = \"\";\n\n            for (var i = 0; i < targetLength; i++) {\n              var element = TypingDNA.document.getElementById(TypingDNA.targetIds[i]);\n\n              if (element != null) {\n                str += element.value;\n              }\n            }\n          }\n        }\n      }\n\n      var missingCount = 0;\n      var diagramHistoryLength = stackDiagram.length;\n      var strLength = diagramHistoryLength;\n\n      if (typeof str === 'string') {\n        strLength = str.length;\n      } else if (typeof str === 'number' && str < diagramHistoryLength) {\n        strLength = str;\n      }\n\n      var returnTextId = 0;\n\n      if (textId != undefined) {\n        if (isNaN(parseInt(textId))) {\n          returnTextId = TypingDNA.math.fnv1aHash(textId);\n        } else {\n          returnTextId = parseInt(textId);\n        }\n      } else {\n        if (typeof str === 'string') {\n          returnTextId = TypingDNA.math.fnv1aHash(str);\n        }\n      }\n\n      returnArr.push([TypingDNA.isMobile(), TypingDNA.version, TypingDNA.flags, diagramType, strLength, returnTextId, TypingDNA.history.getSpecialKeys()]);\n\n      if (str != undefined && str.length > 0 && typeof str === 'string') {\n        var strLower = str.toLowerCase();\n        var strUpper = str.toUpperCase();\n        var lastFoundPos = [];\n        var lastPos = 0;\n        var strUpperCharCode;\n        var currentSensitiveCharCode;\n\n        for (var i = 0; i < str.length; i++) {\n          var currentCharCode = str.charCodeAt(i);\n\n          if (!caseSensitive) {\n            strUpperCharCode = strUpper.charCodeAt(i);\n            currentSensitiveCharCode = strUpperCharCode != currentCharCode ? strUpperCharCode : strLower.charCodeAt(i);\n          }\n\n          var startPos = lastPos;\n          var finishPos = diagramHistoryLength;\n          var found = false;\n\n          while (found == false) {\n            for (var j = startPos; j < finishPos; j++) {\n              var arr = stackDiagram[j];\n              var charCode = arr[3];\n\n              if (charCode == currentCharCode || !caseSensitive && charCode == currentSensitiveCharCode) {\n                found = true;\n\n                if (j == lastPos) {\n                  lastPos++;\n                  lastFoundPos = [];\n                } else {\n                  lastFoundPos.push(j);\n                  var len = lastFoundPos.length;\n\n                  if (len > 1 && lastFoundPos[len - 1] == lastFoundPos[len - 2] + 1) {\n                    lastPos = j + 1;\n                    lastFoundPos = [];\n                  }\n                }\n\n                var keyCode = arr[0];\n                var seekTime = arr[1];\n                var pressTime = arr[2];\n\n                if (extended) {\n                  returnArr.push([charCode, seekTime, pressTime, keyCode]);\n                } else {\n                  returnArr.push([seekTime, pressTime]);\n                }\n\n                break;\n              }\n            }\n\n            if (found == false) {\n              if (startPos != 0) {\n                startPos = 0;\n                finishPos = lastPos;\n              } else {\n                found = true;\n\n                if (TypingDNA.replaceMissingKeys) {\n                  missingCount++;\n\n                  if (typeof TypingDNA.savedMissingAvgValues !== 'object' || TypingDNA.savedMissingAvgValues.historyLength != diagramHistoryLength) {\n                    var histSktF = TypingDNA.math.fo(TypingDNA.history.get(0, \"seek\"));\n                    var histPrtF = TypingDNA.math.fo(TypingDNA.history.get(0, \"press\"));\n                    var seekTime = Math.round(TypingDNA.math.avg(histSktF));\n                    var pressTime = Math.round(TypingDNA.math.avg(histPrtF));\n                    TypingDNA.savedMissingAvgValues = {\n                      seekTime: seekTime,\n                      pressTime: pressTime,\n                      historyLength: diagramHistoryLength\n                    };\n                  } else {\n                    var seekTime = TypingDNA.savedMissingAvgValues.seekTime;\n                    var pressTime = TypingDNA.savedMissingAvgValues.pressTime;\n                  }\n\n                  var missing = 1;\n\n                  if (extended) {\n                    returnArr.push([currentCharCode, seekTime, pressTime, currentCharCode, missing]);\n                  } else {\n                    returnArr.push([seekTime, pressTime, missing]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          }\n\n          if (TypingDNA.replaceMissingKeysPerc < missingCount * 100 / strLength) {\n            return null;\n          }\n        }\n      } else {\n        var startCount = 0;\n\n        if (typeof str === 'number') {\n          startCount = diagramHistoryLength - str;\n        }\n\n        if (startCount < 0) {\n          startCount = 0;\n        }\n\n        for (var i = startCount; i < diagramHistoryLength; i++) {\n          var arr = stackDiagram[i];\n          var keyCode = arr[0];\n          var seekTime = arr[1];\n          var pressTime = arr[2];\n\n          if (extended) {\n            var charCode = arr[3];\n            returnArr.push([charCode, seekTime, pressTime, keyCode]);\n          } else {\n            returnArr.push([seekTime, pressTime]);\n          }\n        }\n      }\n\n      return returnArr.join(\"|\");\n    };\n\n    TypingDNA.sliceStackByTargetId = function (stack, targetId) {\n      var length = stack.length;\n      var newStack = [];\n\n      for (i = 0; i < length; i++) {\n        var arr = stack[i];\n\n        if (arr[5] == targetId) {\n          newStack.push(arr);\n        }\n      }\n\n      return newStack;\n    };\n\n    TypingDNA.history.get = function (length, type, targetId) {\n      var stack = this.stack;\n\n      if (targetId != undefined && targetId != \"\" && stack.length > 0) {\n        stack = TypingDNA.sliceStackByTargetId(stack, targetId);\n      }\n\n      var historyTotalLength = stack.length;\n\n      if (length == 0 || length == undefined) {\n        length = TypingDNA.defaultHistoryLength;\n      }\n\n      if (length > historyTotalLength) {\n        length = historyTotalLength;\n      }\n\n      switch (type) {\n        case \"seek\":\n          var seekArr = [];\n\n          for (i = 1; i <= length; i++) {\n            var seekTime = stack[historyTotalLength - i][1];\n\n            if (seekTime <= TypingDNA.maxSeekTime) {\n              seekArr.push(seekTime);\n            }\n          }\n          return seekArr;\n\n        case \"press\":\n          var pressArr = [];\n\n          for (i = 1; i <= length; i++) {\n            var pressTime = stack[historyTotalLength - i][2];\n\n            if (pressTime <= TypingDNA.maxPressTime) {\n              pressArr.push(pressTime);\n            }\n          }\n          return pressArr;\n\n        default:\n          var historyStackObj = {};\n\n          for (var i in TypingDNA.keyCodes) {\n            historyStackObj[TypingDNA.keyCodes[i]] = [[], [], []];\n          }\n\n          for (i = 1; i <= length; i++) {\n            var arr = stack[historyTotalLength - i];\n            var keyCode = arr[0];\n            var seekTime = arr[1];\n            var pressTime = arr[2];\n            var prevKeyCode = arr[3];\n\n            if (TypingDNA.keyCodesObj[keyCode]) {\n              if (seekTime <= TypingDNA.maxSeekTime) {\n                historyStackObj[keyCode][0].push(seekTime);\n\n                if (prevKeyCode != 0 && TypingDNA.keyCodesObj[prevKeyCode]) {\n                  historyStackObj[prevKeyCode][2].push(seekTime);\n                }\n              }\n\n              if (pressTime <= TypingDNA.maxPressTime) {\n                historyStackObj[keyCode][1].push(pressTime);\n              }\n            }\n          }\n          return [historyStackObj, length];\n      }\n    };\n\n    TypingDNA.history.getSpecialKeys = function () {\n      var returnArr = [];\n      var length = this.stack.length;\n      var historyStackObj = {};\n\n      for (var i in TypingDNA.spKeyCodes) {\n        historyStackObj[TypingDNA.spKeyCodes[i]] = [[]];\n      }\n\n      for (i = 1; i <= length; i++) {\n        var arr = this.stack[length - i];\n\n        if (TypingDNA.spKeyCodesObj[arr[0]]) {\n          var keyCode = arr[0];\n          var pressTime = arr[2];\n\n          if (pressTime <= TypingDNA.maxPressTime) {\n            historyStackObj[keyCode][0].push(pressTime);\n          }\n        }\n      }\n\n      for (var i in TypingDNA.spKeyCodes) {\n        var arr = TypingDNA.math.fo(historyStackObj[TypingDNA.spKeyCodes[i]][0]);\n        var arrLen = arr.length;\n        returnArr.push(arrLen);\n\n        if (arrLen > 1) {\n          returnArr.push(Math.round(TypingDNA.math.avg(arr)));\n          returnArr.push(Math.round(TypingDNA.math.sd(arr)));\n        } else if (arrLen == 1) {\n          returnArr.push([arr[0], -1]);\n        } else {\n          returnArr.push([-1, -1]);\n        }\n      }\n\n      var clicksArrLen = TypingDNA.clickTimes.length;\n      returnArr.push(clicksArrLen);\n\n      if (clicksArrLen > 1) {\n        returnArr.push(Math.round(TypingDNA.math.avg(TypingDNA.clickTimes)));\n        returnArr.push(Math.round(TypingDNA.math.sd(TypingDNA.clickTimes)));\n      } else if (clicksArrLen == 1) {\n        returnArr.push(TypingDNA.clickTimes[0], -1);\n      } else {\n        returnArr.push([-1, -1]);\n      }\n\n      var stopArrLen = TypingDNA.stopTimes.length;\n      returnArr.push(stopArrLen);\n\n      if (stopArrLen > 1) {\n        returnArr.push(Math.round(TypingDNA.math.avg(TypingDNA.stopTimes)));\n        returnArr.push(Math.round(TypingDNA.math.sd(TypingDNA.stopTimes)));\n      } else if (stopArrLen == 1) {\n        returnArr.push(TypingDNA.stopTimes[0], -1);\n      } else {\n        returnArr.push([-1, -1]);\n      }\n\n      return returnArr;\n    };\n    /**\n     * Checks the quality of a typing pattern, how well it is revelated, how useful the\n     * information will be for matching applications. It returns a value between 0 and 1.\n     * Values over 0.3 are acceptable, however a value over 0.7 shows good pattern strength.\n     * @param  {String} typingPattern The typing pattern string returned by the get() function.\n     * @return {Number} A real number between 0 and 1. A close to 1 value means a stronger pattern.\n     * @example var quality = tdna.getQuality(typingPattern);\n     */\n\n\n    TypingDNA.getQuality = function (typingPattern) {\n      var obj = typingPattern.split(\",\");\n\n      for (i = 0; i < obj.length; i++) {\n        obj[i] = Number(obj[i]);\n      }\n\n      obj[0];\n      var acc = rec = avgAcc = 0;\n      var avg = TypingDNA.math.avg(obj);\n      var revs = obj.slice(11, 55);\n\n      for (var i in revs) {\n        rec += Number(revs[i] > 0);\n        acc += Number(revs[i] > 4);\n        avgAcc += Number(revs[i] > avg);\n      }\n\n      var tReturn = Math.sqrt(rec * acc * avgAcc) / 80;\n      return tReturn > 1 ? 1 : tReturn;\n    };\n    /**\n     * Checks the validity of a typing pattern if recorded on mobile.\n     * @param  {String} typingPattern The typing pattern string returned by the get() function.\n     * @return {Number} A real number between 0 and 1. A number larger than 0.7 usually means a valid pattern.\n     * @example var quality = tdna.checkMobileValidity(typingPattern);\n     */\n\n\n    TypingDNA.checkMobileValidity = function (typingPattern) {\n      var obj = typingPattern.split(\",\");\n      var totalEvents = obj[0];\n\n      if (totalEvents == 0) {\n        return 0;\n      }\n\n      var rec = 0;\n      var revs = obj.slice(11, 55);\n\n      for (var i in revs) {\n        rec += Number(revs[i]);\n      }\n\n      return rec / totalEvents;\n    };\n\n    TypingDNA.getLength = function (typingPattern) {\n      return Number(typingPattern.split(\",\")[1]);\n    };\n\n    TypingDNA.isMobile = function () {\n      if (TypingDNA.mobile != undefined) {\n        return TypingDNA.mobile;\n      } else {\n        var check = 0;\n\n        (function (a) {\n          if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n            check = 1;\n          }\n        })(navigator.userAgent || navigator.vendor || window.opera);\n\n        TypingDNA.mobile = check;\n        return check;\n      }\n    };\n\n    TypingDNA.getTextId = function (str) {\n      return TypingDNA.math.fnv1aHash(str);\n    };\n  } else {\n    // TypingDNA is a static class, currently doesn't support actual multiple instances (Singleton implementation)\n    return TypingDNA.instance;\n  }\n};\n\nexport { typingdna as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,SAASC,SAASA,CAAA,EAAG;EACnC,IAAIA,SAAS,CAACC,WAAW,IAAI,IAAI,EAAE;IACjCD,SAAS,CAACE,SAAS,CAACC,KAAK,GAAG,YAAY;MACtC,OAAOH,SAAS,CAACG,KAAK,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC/C,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACI,IAAI,GAAG,YAAY;MACrC,OAAON,SAAS,CAACM,IAAI,CAACF,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC9C,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACK,KAAK,GAAG,YAAY;MACtC,OAAOP,SAAS,CAACO,KAAK,CAACH,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC/C,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACM,SAAS,GAAG,YAAY;MAC1C,OAAOR,SAAS,CAACQ,SAAS,CAACJ,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACnD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACO,YAAY,GAAG,YAAY;MAC7C,OAAOT,SAAS,CAACS,YAAY,CAACL,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACtD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACQ,gBAAgB,GAAG,YAAY;MACjD,OAAOV,SAAS,CAACU,gBAAgB,CAACN,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC1D,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACS,GAAG,GAAG,YAAY;MACpC;MACA,OAAOX,SAAS,CAACW,GAAG,CAACP,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC7C,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACU,YAAY,GAAG,YAAY,CAAC;MAC9C;IAAA,CACD;IAEDZ,SAAS,CAACE,SAAS,CAACW,WAAW,GAAG,YAAY,CAAC;MAC7C;IAAA,CACD;IAEDb,SAAS,CAACE,SAAS,CAACY,UAAU,GAAG,YAAY;MAC3C;MACA,OAAOd,SAAS,CAACc,UAAU,CAACV,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACa,kBAAkB,GAAG,YAAY;MACnD;MACA,OAAOf,SAAS,CAACe,kBAAkB,CAACX,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAC5D,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACc,eAAe,GAAG,YAAY;MAChD,OAAOhB,SAAS,CAACgB,eAAe,CAACZ,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACzD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACe,UAAU,GAAG,YAAY;MAC3C,OAAOjB,SAAS,CAACiB,UAAU,CAACb,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACgB,SAAS,GAAG,YAAY;MAC1C,OAAOlB,SAAS,CAACkB,SAAS,CAACd,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACnD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACiB,UAAU,GAAG,YAAY;MAC3C,OAAOnB,SAAS,CAACmB,UAAU,CAACf,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACkB,SAAS,GAAG,YAAY;MAC1C,OAAOpB,SAAS,CAACoB,SAAS,CAAChB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACnD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACmB,QAAQ,GAAG,YAAY;MACzC,OAAOrB,SAAS,CAACqB,QAAQ,CAACjB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IAClD,CAAC;IAEDL,SAAS,CAACE,SAAS,CAACoB,SAAS,GAAG,YAAY;MAC1C,OAAOtB,SAAS,CAACsB,SAAS,CAAClB,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACnD,CAAC;IAEDL,SAAS,CAACC,WAAW,GAAG,IAAI;IAC5BD,SAAS,CAACE,SAAS,CAACqB,gBAAgB,GAAGvB,SAAS,CAACuB,gBAAgB;IACjEvB,SAAS,CAACE,SAAS,CAACsB,oBAAoB,GAAGxB,SAAS,CAACwB,oBAAoB;IACzExB,SAAS,CAACE,SAAS,CAACuB,WAAW,GAAGzB,SAAS,CAACyB,WAAW;IACvDzB,SAAS,CAACE,SAAS,CAACwB,YAAY,GAAG1B,SAAS,CAAC0B,YAAY;IACzD1B,SAAS,CAAC2B,OAAO,GAAG,IAAI;IACxB3B,SAAS,CAAC4B,KAAK,GAAG,CAAC;IACnB5B,SAAS,CAAC6B,QAAQ,GAAG,IAAI;IACzB7B,SAAS,CAAC8B,QAAQ,GAAGA,QAAQ;IAC7B9B,SAAS,CAACuB,gBAAgB,GAAG,IAAI;IACjCvB,SAAS,CAACyB,WAAW,GAAG,IAAI;IAC5BzB,SAAS,CAAC0B,YAAY,GAAG,GAAG;IAC5B1B,SAAS,CAACwB,oBAAoB,GAAG,GAAG;IACpCxB,SAAS,CAAC+B,UAAU,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClC/B,SAAS,CAACgC,aAAa,GAAG;MACxB,CAAC,EAAE,CAAC;MACJ,EAAE,EAAE,CAAC;MACL,EAAE,EAAE;IACN,CAAC;IACDhC,SAAS,CAACiC,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5MjC,SAAS,CAACkC,WAAW,GAAG,CAAC,CAAC;IAE1B,KAAK,IAAIC,CAAC,IAAInC,SAAS,CAACiC,QAAQ,EAAE;MAChCjC,SAAS,CAACkC,WAAW,CAAClC,SAAS,CAACiC,QAAQ,CAACE,CAAC,CAAC,CAAC,GAAG,CAAC;IAClD;IAEAnC,SAAS,CAACoC,GAAG,GAAGpC,SAAS,CAACqC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACpDvC,SAAS,CAACwC,GAAG,GAAG,EAAE;IAClBxC,SAAS,CAACyC,GAAG,GAAG,EAAE;IAClBzC,SAAS,CAAC0C,GAAG,GAAG,EAAE;IAClB1C,SAAS,CAAC2C,SAAS,GAAG,IAAI;IAC1B3C,SAAS,CAAC4C,cAAc,GAAG,IAAI;IAC/B5C,SAAS,CAAC6C,kBAAkB,GAAG,KAAK;IACpC7C,SAAS,CAAC8C,cAAc,GAAG,IAAI;IAC/B9C,SAAS,CAAC+C,gBAAgB,GAAG,IAAI;IACjC/C,SAAS,CAACgD,IAAI,GAAG,EAAE;IACnBhD,SAAS,CAACiD,IAAI,GAAG,EAAE;IACnBjD,SAAS,CAACkD,IAAI,GAAG,EAAE;IACnBlD,SAAS,CAACmD,IAAI,GAAG,EAAE;IACnBnD,SAAS,CAACoD,WAAW,GAAG,CAAC;IACzBpD,SAAS,CAACqD,gBAAgB,GAAG,GAAG;IAChCrD,SAAS,CAACsD,kBAAkB,GAAG,GAAG;IAClCtD,SAAS,CAACuD,WAAW,GAAG,IAAI;IAC5BvD,SAAS,CAACwD,YAAY,GAAG,GAAG;IAC5BxD,SAAS,CAACyD,qBAAqB,GAAG,GAAG;IACrCzD,SAAS,CAAC0D,iBAAiB,GAAG1D,SAAS,CAAC2D,iBAAiB,GAAG,IAAIrB,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAChFvC,SAAS,CAAC4D,SAAS,GAAG,EAAE;IACxB5D,SAAS,CAAC6D,UAAU,GAAG,EAAE;IACzB7D,SAAS,CAAC8D,aAAa,GAAG,IAAI;IAC9B9D,SAAS,CAAC+D,EAAE,GAAG,SAAS;IACxB/D,SAAS,CAACgE,eAAe,GAAG,KAAK;IACjChE,SAAS,CAACiE,UAAU,GAAG,IAAI3B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAC3CvC,SAAS,CAACkE,UAAU,GAAG,CAAC;IACxBlE,SAAS,CAACmE,WAAW,GAAG,CAAC;IACzBnE,SAAS,CAACoE,cAAc,GAAG,CAAC;IAC5BpE,SAAS,CAACqE,aAAa,GAAG,CAAC;IAC3BrE,SAAS,CAACsE,cAAc,GAAG;MACzBC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE;IACd,CAAC;IACDxE,SAAS,CAACyE,iBAAiB,GAAG,CAAC;IAC/BzE,SAAS,CAAC0E,SAAS,GAAG,EAAE;IACxB1E,SAAS,CAAC2E,UAAU,GAAG,EAAE;IACzB3E,SAAS,CAAC4E,eAAe,GAAG,KAAK;IACjC5E,SAAS,CAAC6E,kBAAkB,GAAG,IAAI;IACnC7E,SAAS,CAAC8E,sBAAsB,GAAG,CAAC;IAEpC9E,SAAS,CAAC+E,OAAO,GAAG,UAAUC,CAAC,EAAE;MAC/B,IAAI,CAAChF,SAAS,CAAC2C,SAAS,IAAI,CAAC3C,SAAS,CAAC+C,gBAAgB,EAAE;QACvD;MACF;MAEA,IAAI,CAAC/C,SAAS,CAACiF,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,EAAE;QACpC;MACF;MAEA,IAAIC,OAAO,GAAGJ,CAAC,CAACI,OAAO;MAEvB,IAAIpF,SAAS,CAACwC,GAAG,CAAC4C,OAAO,CAAC,IAAI,CAAC,IAAIpF,SAAS,CAACgD,IAAI,CAACoC,OAAO,CAAC,IAAI,CAAC,EAAE;MAEjE,IAAIA,OAAO,IAAI,GAAG,IAAIpF,SAAS,CAACqB,QAAQ,CAAC,CAAC,IAAI,CAACrB,SAAS,CAACgE,eAAe,EAAE;QACxEhE,SAAS,CAACgE,eAAe,GAAG,IAAI;QAChChE,SAAS,CAACkE,UAAU,GAAG,IAAI5B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGvC,SAAS,CAACiE,UAAU;QAClEjE,SAAS,CAACiE,UAAU,GAAG,IAAI3B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QAC3CvC,SAAS,CAAC8B,QAAQ,CAACuD,mBAAmB,CAAC,SAAS,EAAErF,SAAS,CAAC+E,OAAO,CAAC;QACpE/E,SAAS,CAAC8B,QAAQ,CAACuD,mBAAmB,CAAC,OAAO,EAAErF,SAAS,CAACsF,KAAK,CAAC;QAChEtF,SAAS,CAAC8B,QAAQ,CAACuD,mBAAmB,CAAC,UAAU,EAAErF,SAAS,CAACuF,QAAQ,CAAC,CAAC,CAAC;;QAExEvF,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,SAAS,EAAExF,SAAS,CAACyF,SAAS,CAAC;QACnEzF,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,OAAO,EAAExF,SAAS,CAAC0F,OAAO,CAAC;MACjE,CAAC,MAAM;QACL,IAAIC,EAAE,GAAG3F,SAAS,CAACoC,GAAG;QACtBpC,SAAS,CAACoC,GAAG,GAAG,IAAIE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QACpC,IAAIqD,SAAS,GAAG5F,SAAS,CAACoC,GAAG,GAAGuD,EAAE;QAClC,IAAIE,SAAS,GAAG7F,SAAS,CAACoC,GAAG;QAE7B,IAAIpC,SAAS,CAAC2C,SAAS,IAAI,IAAI,IAAI3C,SAAS,CAACgC,aAAa,CAACoD,OAAO,CAAC,IAAIpF,SAAS,CAAC8C,cAAc,IAAI,IAAI,EAAE;UACvG,IAAI,CAACkC,CAAC,CAACc,QAAQ,IAAI9F,SAAS,CAACqB,QAAQ,CAAC,CAAC,EAAE;YACvCrB,SAAS,CAACwC,GAAG,CAAC4C,OAAO,CAAC,GAAG,CAAC;YAC1BpF,SAAS,CAAC0C,GAAG,CAAC0C,OAAO,CAAC,GAAGQ,SAAS;YAClC5F,SAAS,CAACyC,GAAG,CAAC2C,OAAO,CAAC,GAAGS,SAAS;UACpC;QACF;QAEA,IAAI7F,SAAS,CAAC+C,gBAAgB,IAAI,IAAI,EAAE;UACtC/C,SAAS,CAACgD,IAAI,CAACoC,OAAO,CAAC,GAAG,CAAC;UAC3BpF,SAAS,CAACkD,IAAI,CAACkC,OAAO,CAAC,GAAGQ,SAAS;UACnC5F,SAAS,CAACiD,IAAI,CAACmC,OAAO,CAAC,GAAGS,SAAS;UACnC7F,SAAS,CAAC+F,YAAY,GAAGX,OAAO;QAClC;MACF;IACF,CAAC;IAEDpF,SAAS,CAACuF,QAAQ,GAAG,UAAUP,CAAC,EAAE;MAChC,IAAI,CAAChF,SAAS,CAAC2C,SAAS,IAAI,CAAC3C,SAAS,CAAC+C,gBAAgB,EAAE;QACvD;MACF;MAEA,IAAI,CAAC/C,SAAS,CAACiF,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,EAAE;QACpC;MACF;MAEA,IAAInF,SAAS,CAAC+C,gBAAgB,IAAI,IAAI,EAAE;QACtC,IAAIqC,OAAO,GAAGpF,SAAS,CAAC+F,YAAY;QACpC/F,SAAS,CAACmD,IAAI,CAACiC,OAAO,CAAC,GAAGJ,CAAC,CAACgB,QAAQ;MACtC;IACF,CAAC;IAEDhG,SAAS,CAACsF,KAAK,GAAG,UAAUN,CAAC,EAAE;MAC7B,IAAI,CAAChF,SAAS,CAAC2C,SAAS,IAAI,CAAC3C,SAAS,CAAC+C,gBAAgB,EAAE;QACvD;MACF;MAEA,IAAI,CAAC/C,SAAS,CAACiF,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,EAAE;QACpC;MACF;MAEA,IAAIc,EAAE,GAAG,IAAI3D,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAC7B,IAAI6C,OAAO,GAAGJ,CAAC,CAACI,OAAO;MAEvB,IAAIpF,SAAS,CAAC2C,SAAS,IAAI,IAAI,IAAI3C,SAAS,CAACgC,aAAa,CAACoD,OAAO,CAAC,IAAIpF,SAAS,CAAC8C,cAAc,IAAI,IAAI,EAAE;QACvG,IAAI,CAACkC,CAAC,CAACc,QAAQ,IAAI9F,SAAS,CAACqB,QAAQ,CAAC,CAAC,EAAE;UACvC,IAAIrB,SAAS,CAACwC,GAAG,CAAC4C,OAAO,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAIc,SAAS,GAAGD,EAAE,GAAGjG,SAAS,CAACyC,GAAG,CAAC2C,OAAO,CAAC;YAC3C,IAAIe,QAAQ,GAAGnG,SAAS,CAAC0C,GAAG,CAAC0C,OAAO,CAAC;YACrC,IAAIgB,GAAG,GAAG,CAAChB,OAAO,EAAEe,QAAQ,EAAED,SAAS,EAAElG,SAAS,CAACoD,WAAW,EAAE6C,EAAE,EAAEjB,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC;YAChFnF,SAAS,CAACqG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;YAC1BpG,SAAS,CAACoD,WAAW,GAAGgC,OAAO;UACjC;QACF;QAEApF,SAAS,CAACwC,GAAG,CAAC4C,OAAO,CAAC,GAAG,CAAC;MAC5B;MAEA,IAAIpF,SAAS,CAAC+C,gBAAgB,IAAI,IAAI,EAAE;QACtC,IAAI/C,SAAS,CAACmD,IAAI,CAACiC,OAAO,CAAC,IAAImB,SAAS,IAAIvG,SAAS,CAACmD,IAAI,CAACiC,OAAO,CAAC,IAAI,CAAC,EAAE;UACxE,IAAIpF,SAAS,CAACgD,IAAI,CAACoC,OAAO,CAAC,IAAI,CAAC,EAAE;YAChC,IAAIc,SAAS,GAAGD,EAAE,GAAGjG,SAAS,CAACiD,IAAI,CAACmC,OAAO,CAAC;YAC5C,IAAIe,QAAQ,GAAGnG,SAAS,CAACkD,IAAI,CAACkC,OAAO,CAAC;YACtC,IAAIoB,WAAW,GAAGxG,SAAS,CAACmD,IAAI,CAACiC,OAAO,CAAC;YACzC,IAAIqB,IAAI,GAAG,CAACrB,OAAO,EAAEe,QAAQ,EAAED,SAAS,EAAEM,WAAW,EAAEP,EAAE,EAAEjB,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC;YACvEnF,SAAS,CAACqG,OAAO,CAACK,UAAU,CAACD,IAAI,CAAC;UACpC;QACF;QAEAzG,SAAS,CAACgD,IAAI,CAACoC,OAAO,CAAC,GAAG,CAAC;MAC7B;IACF,CAAC;IAEDpF,SAAS,CAAC2G,WAAW,GAAG,UAAU3B,CAAC,EAAE;MACnC,IAAIhF,SAAS,CAAC4C,cAAc,IAAI,IAAI,EAAE;QACpC,IAAI5C,SAAS,CAAC6C,kBAAkB,IAAI,IAAI,EAAE;UACxC,IAAI7C,SAAS,CAAC4G,KAAK,CAACC,aAAa,IAAI,IAAI,EAAE;YACzC,IAAIC,WAAW,GAAG,IAAIxE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;YACtCvC,SAAS,CAAC4G,KAAK,CAACG,WAAW,CAACC,IAAI,CAACF,WAAW,CAAC;YAC7C9G,SAAS,CAAC4G,KAAK,CAACK,YAAY,CAACD,IAAI,CAAChH,SAAS,CAAC8B,QAAQ,CAACoF,IAAI,CAACC,SAAS,CAAC;YACpEC,aAAa,CAACpH,SAAS,CAACqH,cAAc,CAAC;YACvCrH,SAAS,CAACqH,cAAc,GAAGC,WAAW,CAACtH,SAAS,CAAC4G,KAAK,CAACW,WAAW,EAAEvH,SAAS,CAACsD,kBAAkB,CAAC;UACnG,CAAC,MAAM;YACLtD,SAAS,CAAC4G,KAAK,CAACC,aAAa,GAAG,IAAI;UACtC;QACF;MACF;IACF,CAAC;IAED7G,SAAS,CAACwH,SAAS,GAAG,UAAUxC,CAAC,EAAE;MACjC,IAAIhF,SAAS,CAAC4C,cAAc,IAAI,IAAI,EAAE;QACpC,IAAIkE,WAAW,GAAG,IAAIxE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QAEtC,IAAIvC,SAAS,CAAC6C,kBAAkB,IAAI,IAAI,EAAE;UACxC,IAAI7C,SAAS,CAAC4G,KAAK,CAACa,OAAO,IAAI,IAAI,EAAE;YACnCzH,SAAS,CAAC4G,KAAK,CAACc,KAAK,CAACV,IAAI,CAACF,WAAW,CAAC;YACvC9G,SAAS,CAAC4G,KAAK,CAACe,UAAU,CAACX,IAAI,CAAChC,CAAC,CAAC4C,OAAO,CAAC;YAC1C5H,SAAS,CAAC4G,KAAK,CAACiB,UAAU,CAACb,IAAI,CAAChC,CAAC,CAAC8C,OAAO,CAAC;YAC1CV,aAAa,CAACpH,SAAS,CAAC+H,YAAY,CAAC;YACrC/H,SAAS,CAAC+H,YAAY,GAAGT,WAAW,CAACtH,SAAS,CAAC4G,KAAK,CAACoB,SAAS,EAAEhI,SAAS,CAACqD,gBAAgB,CAAC;UAC7F,CAAC,MAAM;YACLrD,SAAS,CAAC4G,KAAK,CAACa,OAAO,GAAG,IAAI;UAChC;QACF;QAEAzH,SAAS,CAAC0D,iBAAiB,GAAGoD,WAAW;MAC3C;IACF,CAAC;IAED9G,SAAS,CAACiI,SAAS,GAAG,UAAUjD,CAAC,EAAE;MACjC,IAAIhF,SAAS,CAAC4C,cAAc,IAAI,IAAI,EAAE;QACpC5C,SAAS,CAAC4G,KAAK,CAACoB,SAAS,CAAC,CAAC;QAC3BhI,SAAS,CAAC4G,KAAK,CAACW,WAAW,CAAC,CAAC;QAE7B,IAAIvC,CAAC,CAACkD,KAAK,IAAI,CAAC,EAAE;UAChBlI,SAAS,CAAC2D,iBAAiB,GAAG,IAAIrB,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;UAClD,IAAI4F,QAAQ,GAAGnI,SAAS,CAAC2D,iBAAiB,GAAG3D,SAAS,CAAC0D,iBAAiB;UAExE,IAAIyE,QAAQ,GAAGnI,SAAS,CAACuD,WAAW,IAAIvD,SAAS,CAAC8D,aAAa,IAAI,KAAK,EAAE;YACxE9D,SAAS,CAAC4D,SAAS,CAACoD,IAAI,CAACmB,QAAQ,CAAC;YAElC,IAAInI,SAAS,CAAC6C,kBAAkB,IAAI,IAAI,EAAE;cACxC,IAAIuF,SAAS,GAAG,CAAC;cACjB,IAAIhC,GAAG,GAAG,CAACgC,SAAS,EAAED,QAAQ,CAAC;cAC/BnI,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;cAChCpG,SAAS,CAAC8D,aAAa,GAAG,IAAI;YAChC;UACF;QACF;MACF;IACF,CAAC;IAED9D,SAAS,CAACqI,OAAO,GAAG,UAAUrD,CAAC,EAAE;MAC/B,IAAIhF,SAAS,CAAC4C,cAAc,IAAI,IAAI,EAAE;QACpC,IAAIoC,CAAC,CAACkD,KAAK,IAAI,CAAC,EAAE;UAChB,IAAII,SAAS,GAAG,IAAIhG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGvC,SAAS,CAAC2D,iBAAiB;UAElE,IAAI2E,SAAS,GAAGtI,SAAS,CAACwD,YAAY,IAAIxD,SAAS,CAAC2D,iBAAiB,GAAG3D,SAAS,CAAC0D,iBAAiB,EAAE;YACnG1D,SAAS,CAAC6D,UAAU,CAACmD,IAAI,CAACsB,SAAS,CAAC;YAEpC,IAAItI,SAAS,CAAC6C,kBAAkB,IAAI,IAAI,EAAE;cACxC,IAAIuF,SAAS,GAAG,CAAC;cACjB,IAAIhC,GAAG,GAAG,CAACgC,SAAS,EAAEE,SAAS,CAAC;cAChCtI,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;YAClC;UACF;QACF;MACF;IACF,CAAC;IAEDpG,SAAS,CAACyF,SAAS,GAAG,UAAUT,CAAC,EAAE;MACjC,IAAI,CAAChF,SAAS,CAAC2C,SAAS,IAAI,CAAC3C,SAAS,CAAC+C,gBAAgB,EAAE;QACvD;MACF;MAEA/C,SAAS,CAACkE,UAAU,GAAG,IAAI5B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGvC,SAAS,CAACiE,UAAU;MAClEjE,SAAS,CAACiE,UAAU,GAAG,IAAI3B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAE3C,IAAI,CAACvC,SAAS,CAACiF,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,EAAE;QACpC;MACF;MAEA,IAAInF,SAAS,CAACsE,cAAc,CAACC,MAAM,CAACgE,OAAO,CAACvD,CAAC,CAACE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5DlF,SAAS,CAACsE,cAAc,CAACC,MAAM,CAACyC,IAAI,CAAChC,CAAC,CAACE,MAAM,CAAC;QAC9ClF,SAAS,CAACsE,cAAc,CAACE,UAAU,CAACwC,IAAI,CAAC,CAAC,CAAC;MAC7C;IACF,CAAC;IAEDhH,SAAS,CAAC0F,OAAO,GAAG,UAAUV,CAAC,EAAE;MAC/B,IAAI,CAAChF,SAAS,CAAC2C,SAAS,IAAI,CAAC3C,SAAS,CAAC+C,gBAAgB,EAAE;QACvD;MACF;MAEA/C,SAAS,CAACmE,WAAW,GAAG,IAAI7B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGvC,SAAS,CAACiE,UAAU;MACnEjE,SAAS,CAACiE,UAAU,GAAG,IAAI3B,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MAE3C,IAAI,CAACvC,SAAS,CAACiF,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,EAAE,CAAC,EAAE;QACpC;MACF;MAEA,IAAIC,OAAO,GAAGJ,CAAC,CAACI,OAAO;MACvB,IAAIoD,WAAW,GAAGxI,SAAS,CAACsE,cAAc,CAACC,MAAM,CAACgE,OAAO,CAACvD,CAAC,CAACE,MAAM,CAAC;MAEnE,IAAIsD,WAAW,KAAK,CAAC,CAAC,EAAE;QACtBxI,SAAS,CAACsE,cAAc,CAACC,MAAM,CAACyC,IAAI,CAAChC,CAAC,CAACE,MAAM,CAAC;QAC9ClF,SAAS,CAACsE,cAAc,CAACE,UAAU,CAACwC,IAAI,CAAC,CAAC,CAAC;QAC3CwB,WAAW,GAAGxI,SAAS,CAACsE,cAAc,CAACC,MAAM,CAACgE,OAAO,CAACvD,CAAC,CAACE,MAAM,CAAC;MACjE;MAEA,IAAIE,OAAO,IAAI,GAAG,IAAIJ,CAAC,CAACE,MAAM,CAACuD,KAAK,CAACC,MAAM,IAAI1I,SAAS,CAACsE,cAAc,CAACE,UAAU,CAACgE,WAAW,CAAC,EAAE;QAC/F,IAAIG,IAAI,GAAG3D,CAAC,CAACE,MAAM,CAACuD,KAAK,CAACG,MAAM,CAAC5D,CAAC,CAACE,MAAM,CAAC2D,cAAc,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrEzD,OAAO,GAAGuD,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;QAC1C/I,SAAS,CAACoE,cAAc,GAAGuE,IAAI,CAACI,UAAU,CAAC,CAAC,CAAC;QAC7C/I,SAAS,CAACqE,aAAa,GAAGsE,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;MAC5D;MAEA/I,SAAS,CAACsE,cAAc,CAACE,UAAU,CAACgE,WAAW,CAAC,GAAGxD,CAAC,CAACE,MAAM,CAACuD,KAAK,CAACC,MAAM;MACxE,IAAItC,GAAG,GAAG,CAAChB,OAAO,EAAEpF,SAAS,CAACkE,UAAU,EAAElE,SAAS,CAACmE,WAAW,EAAEnE,SAAS,CAACyE,iBAAiB,EAAEzE,SAAS,CAACiE,UAAU,CAAC;MACnHjE,SAAS,CAACqG,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAC1BpG,SAAS,CAACyE,iBAAiB,GAAGW,OAAO;MAErC,IAAIpF,SAAS,CAAC+C,gBAAgB,IAAI,IAAI,EAAE;QACtC,IAAI0D,IAAI,GAAG,CAACrB,OAAO,EAAEpF,SAAS,CAACkE,UAAU,EAAElE,SAAS,CAACmE,WAAW,EAAEnE,SAAS,CAACoE,cAAc,CAAC;QAC3FpE,SAAS,CAACqG,OAAO,CAACK,UAAU,CAACD,IAAI,CAAC;MACpC;IACF,CAAC;IAEDzG,SAAS,CAACiF,QAAQ,GAAG,UAAUC,MAAM,EAAE;MACrC,IAAIlF,SAAS,CAAC2E,UAAU,IAAIO,MAAM,IAAIlF,SAAS,CAAC4E,eAAe,EAAE;QAC/D,OAAO,IAAI;MACb,CAAC,MAAM;QACL,IAAIoE,YAAY,GAAGhJ,SAAS,CAAC0E,SAAS,CAACgE,MAAM;QAC7C,IAAIO,WAAW,GAAG,KAAK;QAEvB,IAAID,YAAY,GAAG,CAAC,EAAE;UACpB,KAAK,IAAI7G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6G,YAAY,EAAE7G,CAAC,EAAE,EAAE;YACrC,IAAInC,SAAS,CAAC0E,SAAS,CAACvC,CAAC,CAAC,IAAI+C,MAAM,EAAE;cACpC+D,WAAW,GAAG,IAAI;cAClB;YACF;UACF;UAEAjJ,SAAS,CAAC2E,UAAU,GAAGO,MAAM;UAC7BlF,SAAS,CAAC4E,eAAe,GAAGqE,WAAW;UACvC,OAAOA,WAAW;QACpB,CAAC,MAAM;UACLjJ,SAAS,CAAC2E,UAAU,GAAGO,MAAM;UAC7BlF,SAAS,CAAC4E,eAAe,GAAG,IAAI;UAChC,OAAO,IAAI;QACb;MACF;IACF,CAAC;IAED,IAAI5E,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,EAAE;MACvCxF,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,SAAS,EAAExF,SAAS,CAAC+E,OAAO,CAAC;MACjE/E,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,OAAO,EAAExF,SAAS,CAACsF,KAAK,CAAC;MAC7DtF,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,UAAU,EAAExF,SAAS,CAACuF,QAAQ,CAAC;MACnEvF,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,WAAW,EAAExF,SAAS,CAACwH,SAAS,CAAC;MACrExH,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,WAAW,EAAExF,SAAS,CAACiI,SAAS,CAAC;MACrEjI,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,SAAS,EAAExF,SAAS,CAACqI,OAAO,CAAC;MACjErI,SAAS,CAAC8B,QAAQ,CAAC0D,gBAAgB,CAAC,QAAQ,EAAExF,SAAS,CAAC2G,WAAW,CAAC;IACtE,CAAC,MAAM,IAAI3G,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,EAAE;MACzClJ,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,WAAW,EAAElJ,SAAS,CAAC+E,OAAO,CAAC;MAC9D/E,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,SAAS,EAAElJ,SAAS,CAACsF,KAAK,CAAC;MAC1DtF,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,YAAY,EAAElJ,SAAS,CAACuF,QAAQ,CAAC;MAChEvF,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,aAAa,EAAElJ,SAAS,CAACwH,SAAS,CAAC;MAClExH,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,aAAa,EAAElJ,SAAS,CAACiI,SAAS,CAAC;MAClEjI,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,WAAW,EAAElJ,SAAS,CAACqI,OAAO,CAAC;MAC9DrI,SAAS,CAAC8B,QAAQ,CAACoH,WAAW,CAAC,UAAU,EAAElJ,SAAS,CAAC2G,WAAW,CAAC;IACnE,CAAC,MAAM;IAEP3G,SAAS,CAAC4G,KAAK,GAAG,CAAC,CAAC;IACpB5G,SAAS,CAAC4G,KAAK,CAACc,KAAK,GAAG,EAAE;IAC1B1H,SAAS,CAAC4G,KAAK,CAACe,UAAU,GAAG,EAAE;IAC/B3H,SAAS,CAAC4G,KAAK,CAACiB,UAAU,GAAG,EAAE;IAC/B7H,SAAS,CAAC4G,KAAK,CAACG,WAAW,GAAG,EAAE;IAChC/G,SAAS,CAAC4G,KAAK,CAACK,YAAY,GAAG,EAAE;IACjCjH,SAAS,CAAC4G,KAAK,CAACP,OAAO,GAAG,CAAC,CAAC;IAC5BrG,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAAC8C,KAAK,GAAG,EAAE;IAElCnJ,SAAS,CAAC4G,KAAK,CAACwC,WAAW,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;MAC5C,OAAOC,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC;IACjC,CAAC;IAEDtJ,SAAS,CAAC4G,KAAK,CAAC6C,gBAAgB,GAAG,UAAU9B,UAAU,EAAEE,UAAU,EAAE;MACnE,IAAI6B,aAAa,GAAG,CAAC;MACrB,IAAIhB,MAAM,GAAGf,UAAU,CAACe,MAAM;MAE9B,KAAKvG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuG,MAAM,GAAG,CAAC,EAAEvG,CAAC,EAAE,EAAE;QAC/B,IAAIkH,CAAC,GAAG1B,UAAU,CAACxF,CAAC,CAAC,GAAGwF,UAAU,CAACxF,CAAC,GAAG,CAAC,CAAC;QACzC,IAAImH,CAAC,GAAGzB,UAAU,CAAC1F,CAAC,CAAC,GAAG0F,UAAU,CAAC1F,CAAC,GAAG,CAAC,CAAC;QACzCuH,aAAa,IAAI1J,SAAS,CAAC4G,KAAK,CAACwC,WAAW,CAACC,CAAC,EAAEC,CAAC,CAAC;MACpD;MAEA,OAAOI,aAAa;IACtB,CAAC;IAED1J,SAAS,CAAC4G,KAAK,CAAC+C,QAAQ,GAAG,UAAUC,SAAS,EAAEC,SAAS,EAAE;MACzD,IAAIC,KAAK,GAAG,CAAC;MACb,IAAIC,SAAS,GAAGH,SAAS,IAAI,CAAC,CAAC,CAAC;;MAEhC,IAAII,MAAM,GAAGH,SAAS,GAAG,CAAC,CAAC,CAAC;;MAE5B,IAAIE,SAAS,EAAE;QACb,IAAIC,MAAM,EAAE;UACVF,KAAK,GAAG,GAAG,GAAGP,IAAI,CAACU,KAAK,CAACV,IAAI,CAACW,IAAI,CAACX,IAAI,CAACY,GAAG,CAACP,SAAS,CAAC,IAAIL,IAAI,CAACY,GAAG,CAACN,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;QAChH,CAAC,MAAM;UACLC,KAAK,GAAG,GAAG,IAAI,EAAE,GAAGP,IAAI,CAACU,KAAK,CAACV,IAAI,CAACW,IAAI,CAACX,IAAI,CAACY,GAAG,CAACP,SAAS,CAAC,IAAIL,IAAI,CAACY,GAAG,CAACN,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;QACrH;MACF,CAAC,MAAM;QACL,IAAIG,MAAM,EAAE;UACVF,KAAK,GAAG,EAAE,IAAI,EAAE,GAAGP,IAAI,CAACU,KAAK,CAACV,IAAI,CAACW,IAAI,CAACX,IAAI,CAACY,GAAG,CAACP,SAAS,CAAC,IAAIL,IAAI,CAACY,GAAG,CAACN,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC;QACpH,CAAC,MAAM;UACLC,KAAK,GAAGP,IAAI,CAACU,KAAK,CAACV,IAAI,CAACW,IAAI,CAACX,IAAI,CAACY,GAAG,CAACP,SAAS,CAAC,IAAIL,IAAI,CAACY,GAAG,CAACN,SAAS,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,aAAa,CAAC;QACxG;MACF;MAEA,OAAOC,KAAK;IACd,CAAC;IAED9J,SAAS,CAAC4G,KAAK,CAACwD,gBAAgB,GAAG,YAAY;MAC7C,IAAI1B,MAAM,GAAG1I,SAAS,CAAC4G,KAAK,CAACc,KAAK,CAACgB,MAAM;MAEzC,IAAIA,MAAM,GAAG,CAAC,EAAE;QACd;MACF;MAEA,IAAI2B,SAAS,GAAGrK,SAAS,CAAC4G,KAAK,CAACc,KAAK,CAACgB,MAAM,GAAG,CAAC,CAAC,GAAG1I,SAAS,CAAC4G,KAAK,CAACc,KAAK,CAAC,CAAC,CAAC;MAC5E,IAAIkC,SAAS,GAAG5J,SAAS,CAAC4G,KAAK,CAACe,UAAU,CAACe,MAAM,GAAG,CAAC,CAAC,GAAG1I,SAAS,CAAC4G,KAAK,CAACe,UAAU,CAAC,CAAC,CAAC;MACtF,IAAIkC,SAAS,GAAG7J,SAAS,CAAC4G,KAAK,CAACiB,UAAU,CAACa,MAAM,GAAG,CAAC,CAAC,GAAG1I,SAAS,CAAC4G,KAAK,CAACiB,UAAU,CAAC,CAAC,CAAC;MACtF,IAAIyC,cAAc,GAAGf,IAAI,CAACU,KAAK,CAACjK,SAAS,CAAC4G,KAAK,CAACwC,WAAW,CAACQ,SAAS,EAAEC,SAAS,CAAC,CAAC;MAClF,IAAIH,aAAa,GAAGH,IAAI,CAACU,KAAK,CAACjK,SAAS,CAAC4G,KAAK,CAAC6C,gBAAgB,CAACzJ,SAAS,CAAC4G,KAAK,CAACe,UAAU,EAAE3H,SAAS,CAAC4G,KAAK,CAACiB,UAAU,CAAC,CAAC;MACxH,IAAI0C,aAAa,GAAGhB,IAAI,CAACU,KAAK,CAACP,aAAa,GAAG,GAAG,GAAGY,cAAc,CAAC;MACpE,IAAIE,KAAK,GAAGjB,IAAI,CAACU,KAAK,CAACK,cAAc,GAAG,GAAG,GAAGD,SAAS,CAAC;MACxD,IAAIP,KAAK,GAAG9J,SAAS,CAAC4G,KAAK,CAAC+C,QAAQ,CAACC,SAAS,EAAEC,SAAS,CAAC;MAC1D,IAAIzB,SAAS,GAAG,CAAC;MACjB,IAAIhC,GAAG,GAAG,CAACgC,SAAS,EAAEiC,SAAS,EAAEC,cAAc,EAAEE,KAAK,EAAEV,KAAK,EAAES,aAAa,CAAC;MAE7E,KAAKpI,CAAC,IAAIiE,GAAG,EAAE;QACb,IAAIqE,KAAK,CAACrE,GAAG,CAACjE,CAAC,CAAC,CAAC,EAAE;UACjB;QACF;MACF;MAEAnC,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChCpG,SAAS,CAAC8D,aAAa,GAAG,KAAK;IACjC,CAAC;IAED9D,SAAS,CAAC4G,KAAK,CAAC8D,kBAAkB,GAAG,YAAY;MAC/C,IAAIhC,MAAM,GAAG1I,SAAS,CAAC4G,KAAK,CAACG,WAAW,CAAC2B,MAAM;MAE/C,IAAIA,MAAM,GAAG,CAAC,EAAE;QACd;MACF;MAEA,IAAI2B,SAAS,GAAGrK,SAAS,CAAC4G,KAAK,CAACG,WAAW,CAAC2B,MAAM,GAAG,CAAC,CAAC,GAAG1I,SAAS,CAAC4G,KAAK,CAACG,WAAW,CAAC,CAAC,CAAC;MACxF,IAAIuD,cAAc,GAAGtK,SAAS,CAAC4G,KAAK,CAACK,YAAY,CAACyB,MAAM,GAAG,CAAC,CAAC,GAAG1I,SAAS,CAAC4G,KAAK,CAACK,YAAY,CAAC,CAAC,CAAC;MAC/F,IAAIuD,KAAK,GAAGjB,IAAI,CAACU,KAAK,CAACK,cAAc,GAAG,GAAG,GAAGD,SAAS,CAAC;MACxD,IAAIjC,SAAS,GAAG,CAAC;MACjB,IAAIhC,GAAG,GAAG,CAACgC,SAAS,EAAEiC,SAAS,EAAEC,cAAc,EAAEE,KAAK,CAAC;MAEvD,KAAKrI,CAAC,IAAIiE,GAAG,EAAE;QACb,IAAIqE,KAAK,CAACrE,GAAG,CAACjE,CAAC,CAAC,CAAC,IAAI,CAACwI,QAAQ,CAACvE,GAAG,CAACjE,CAAC,CAAC,CAAC,EAAE;UACtC;QACF;MACF;MAEAnC,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClC,CAAC;IAEDpG,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACC,GAAG,GAAG,UAAUF,GAAG,EAAE;MAC3C,IAAI,CAAC+C,KAAK,CAACnC,IAAI,CAACZ,GAAG,CAAC;MAEpB,IAAI,IAAI,CAAC+C,KAAK,CAACT,MAAM,GAAG1I,SAAS,CAACyD,qBAAqB,EAAE;QACvD,IAAI,CAAC0F,KAAK,CAACyB,KAAK,CAAC,CAAC;MACpB;IACF,CAAC;IAED5K,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACvF,UAAU,GAAG,YAAY;MAC/C,IAAI+J,YAAY,GAAG,IAAI,CAAC1B,KAAK,CAAC2B,IAAI,CAAC,GAAG,CAAC;MACvC,OAAO,CAACC,MAAM,CAAC/K,SAAS,CAACqB,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG0J,MAAM,CAAC/K,SAAS,CAAC2B,OAAO,CAAC,EAAEkJ,YAAY,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACjG,CAAC;IAED9K,SAAS,CAAC4G,KAAK,CAACoE,aAAa,GAAG,YAAY;MAC1ChL,SAAS,CAAC4G,KAAK,CAACc,KAAK,GAAG,EAAE;MAC1B1H,SAAS,CAAC4G,KAAK,CAACe,UAAU,GAAG,EAAE;MAC/B3H,SAAS,CAAC4G,KAAK,CAACiB,UAAU,GAAG,EAAE;IACjC,CAAC;IAED7H,SAAS,CAAC4G,KAAK,CAACoB,SAAS,GAAG,YAAY;MACtCZ,aAAa,CAACpH,SAAS,CAAC+H,YAAY,CAAC;MAErC,IAAI/H,SAAS,CAAC4G,KAAK,CAACa,OAAO,IAAI,IAAI,EAAE;QACnCzH,SAAS,CAAC4G,KAAK,CAACa,OAAO,GAAG,KAAK;QAC/BzH,SAAS,CAAC4G,KAAK,CAACwD,gBAAgB,CAAC,CAAC;QAClCpK,SAAS,CAAC4G,KAAK,CAACoE,aAAa,CAAC,CAAC;MACjC;IACF,CAAC;IAEDhL,SAAS,CAAC4G,KAAK,CAACqE,eAAe,GAAG,YAAY;MAC5CjL,SAAS,CAAC4G,KAAK,CAACG,WAAW,GAAG,EAAE;MAChC/G,SAAS,CAAC4G,KAAK,CAACK,YAAY,GAAG,EAAE;IACnC,CAAC;IAEDjH,SAAS,CAAC4G,KAAK,CAACW,WAAW,GAAG,YAAY;MACxCH,aAAa,CAACpH,SAAS,CAACqH,cAAc,CAAC;MAEvC,IAAIrH,SAAS,CAAC4G,KAAK,CAACC,aAAa,IAAI,IAAI,EAAE;QACzC7G,SAAS,CAAC4G,KAAK,CAACC,aAAa,GAAG,KAAK;QACrC7G,SAAS,CAAC4G,KAAK,CAAC8D,kBAAkB,CAAC,CAAC;QACpC1K,SAAS,CAAC4G,KAAK,CAACqE,eAAe,CAAC,CAAC;MACnC;IACF,CAAC;IACD;AACJ;AACA;;IAGIjL,SAAS,CAACQ,SAAS,GAAG,UAAU0E,MAAM,EAAE;MACtC,IAAI8D,YAAY,GAAGhJ,SAAS,CAAC0E,SAAS,CAACgE,MAAM;MAC7C,IAAIO,WAAW,GAAG,KAAK;MAEvB,IAAID,YAAY,GAAG,CAAC,EAAE;QACpB,KAAK,IAAI7G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6G,YAAY,EAAE7G,CAAC,EAAE,EAAE;UACrC,IAAInC,SAAS,CAAC0E,SAAS,CAACvC,CAAC,CAAC,IAAI+C,MAAM,EAAE;YACpC+D,WAAW,GAAG,IAAI;YAClB;UACF;QACF;QAEA,IAAI,CAACA,WAAW,EAAE;UAChBjJ,SAAS,CAAC0E,SAAS,CAACsC,IAAI,CAAC9B,MAAM,CAAC;QAClC;MACF,CAAC,MAAM;QACLlF,SAAS,CAAC0E,SAAS,CAACsC,IAAI,CAAC9B,MAAM,CAAC;MAClC;IACF,CAAC;IACD;AACJ;AACA;;IAGIlF,SAAS,CAACS,YAAY,GAAG,UAAUyE,MAAM,EAAE;MACzC,IAAI8D,YAAY,GAAGhJ,SAAS,CAAC0E,SAAS,CAACgE,MAAM;MAE7C,IAAIM,YAAY,GAAG,CAAC,EAAE;QACpB,KAAK,IAAI7G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6G,YAAY,EAAE7G,CAAC,EAAE,EAAE;UACrC,IAAInC,SAAS,CAAC0E,SAAS,CAACvC,CAAC,CAAC,IAAI+C,MAAM,EAAE;YACpClF,SAAS,CAAC0E,SAAS,CAACwG,MAAM,CAAC/I,CAAC,EAAE,CAAC,CAAC;YAChC;UACF;QACF;MACF;IACF,CAAC;IACD;AACJ;AACA;;IAGInC,SAAS,CAACO,KAAK,GAAG,UAAU4K,GAAG,EAAE;MAC/BnL,SAAS,CAACqG,OAAO,CAAC8C,KAAK,GAAG,EAAE;MAC5BnJ,SAAS,CAACqG,OAAO,CAAC+E,YAAY,GAAG,EAAE;MACnCpL,SAAS,CAAC6D,UAAU,GAAG,EAAE;MACzB7D,SAAS,CAAC4D,SAAS,GAAG,EAAE;MACxB5D,SAAS,CAACsE,cAAc,GAAG;QACzBC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE;MACd,CAAC;MAED,IAAI2G,GAAG,IAAI,IAAI,EAAE;QACfnL,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAAC8C,KAAK,GAAG,EAAE;MACpC;IACF,CAAC;IACD;AACJ;AACA;;IAGInJ,SAAS,CAACG,KAAK,GAAG,YAAY;MAC5BH,SAAS,CAAC+C,gBAAgB,GAAG,IAAI;MACjC,OAAO/C,SAAS,CAAC2C,SAAS,GAAG,IAAI;IACnC,CAAC;IACD;AACJ;AACA;AACA;;IAGI3C,SAAS,CAACM,IAAI,GAAG,YAAY;MAC3BN,SAAS,CAAC+C,gBAAgB,GAAG,KAAK;MAClC,OAAO/C,SAAS,CAAC2C,SAAS,GAAG,KAAK;IACpC,CAAC;IACD;AACJ;AACA;;IAGI3C,SAAS,CAACiB,UAAU,GAAG,YAAY;MACjC,OAAOjB,SAAS,CAAC4C,cAAc,GAAG5C,SAAS,CAAC6C,kBAAkB,GAAG,IAAI;IACvE,CAAC;IACD;AACJ;AACA;;IAGI7C,SAAS,CAACkB,SAAS,GAAG,YAAY;MAChC,OAAOlB,SAAS,CAAC4C,cAAc,GAAG5C,SAAS,CAAC6C,kBAAkB,GAAG,KAAK;IACxE,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGI7C,SAAS,CAACU,gBAAgB,GAAG,UAAU2K,GAAG,EAAE;MAC1C,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAC3B,QAAQA,GAAG,CAACC,IAAI;UACd,KAAK,CAAC;YACJ,OAAOtL,SAAS,CAACW,GAAG,CAAC0K,GAAG,CAAC3C,MAAM,EAAE2C,GAAG,CAACE,QAAQ,CAAC;UAEhD,KAAK,CAAC;YACJ,IAAIC,GAAG,GAAGH,GAAG,CAACI,IAAI,IAAIlF,SAAS,GAAG8E,GAAG,CAACI,IAAI,GAAGJ,GAAG,CAAC3C,MAAM;YACvD,OAAO1I,SAAS,CAACqG,OAAO,CAACvF,UAAU,CAACuK,GAAG,CAACK,QAAQ,EAAEF,GAAG,EAAEH,GAAG,CAACM,MAAM,EAAEN,GAAG,CAACE,QAAQ,EAAEF,GAAG,CAACO,aAAa,CAAC;UAErG,KAAK,CAAC;YACJ,IAAIJ,GAAG,GAAGH,GAAG,CAACI,IAAI,IAAIlF,SAAS,GAAG8E,GAAG,CAACI,IAAI,GAAGJ,GAAG,CAAC3C,MAAM;YACvD,OAAO1I,SAAS,CAACqG,OAAO,CAACvF,UAAU,CAAC,IAAI,EAAE0K,GAAG,EAAEH,GAAG,CAACM,MAAM,EAAEN,GAAG,CAACE,QAAQ,EAAEF,GAAG,CAACO,aAAa,CAAC;UAE7F;YACE,OAAO5L,SAAS,CAACW,GAAG,CAAC0K,GAAG,CAAC3C,MAAM,CAAC;QACpC;MACF,CAAC,MAAM;QACL,OAAO1I,SAAS,CAACW,GAAG,CAAC,CAAC;MACxB;IACF,CAAC;IAEDX,SAAS,CAACc,UAAU,GAAG,UAAU0K,GAAG,EAAEG,MAAM,EAAE;MAC5C,OAAO3L,SAAS,CAACqG,OAAO,CAACvF,UAAU,CAAC,KAAK,EAAE0K,GAAG,EAAEG,MAAM,EAAEpF,SAAS,EAAE,KAAK,CAAC;IAC3E,CAAC;IAEDvG,SAAS,CAACe,kBAAkB,GAAG,UAAUyK,GAAG,EAAEG,MAAM,EAAE;MACpD,OAAO3L,SAAS,CAACqG,OAAO,CAACvF,UAAU,CAAC,IAAI,EAAE0K,GAAG,EAAEG,MAAM,EAAEpF,SAAS,EAAE,KAAK,CAAC;IAC1E,CAAC;IAEDvG,SAAS,CAACgB,eAAe,GAAG,YAAY;MACtC,OAAOhB,SAAS,CAAC4G,KAAK,CAACP,OAAO,CAACvF,UAAU,CAAC,CAAC;IAC7C,CAAC;IAEDd,SAAS,CAACW,GAAG,GAAG,UAAU+H,MAAM,EAAE6C,QAAQ,EAAE;MAC1C,IAAIM,kBAAkB,GAAG7L,SAAS,CAACqG,OAAO,CAAC8C,KAAK,CAACT,MAAM;MAEvD,IAAIA,MAAM,IAAInC,SAAS,IAAImC,MAAM,IAAI,CAAC,EAAE;QACtCA,MAAM,GAAG1I,SAAS,CAACwB,oBAAoB;MACzC;MAEA,IAAIkH,MAAM,GAAGmD,kBAAkB,EAAE;QAC/BnD,MAAM,GAAGmD,kBAAkB;MAC7B;MAEA,IAAIR,GAAG,GAAG,CAAC,CAAC;MACZ,CAACA,GAAG,CAACjF,GAAG,EAAE4C,YAAY,CAAC,GAAGhJ,SAAS,CAACqG,OAAO,CAAC1F,GAAG,CAAC+H,MAAM,EAAE,EAAE,EAAE6C,QAAQ,CAAC;MAErE,IAAIA,QAAQ,IAAIhF,SAAS,IAAIgF,QAAQ,IAAI,EAAE,EAAE;QAC3C7C,MAAM,GAAGM,YAAY;MACvB;MAEA,IAAIjF,EAAE,GAAG/D,SAAS,CAAC+D,EAAE;MACrB,IAAI+H,OAAO,GAAGpD,MAAM;MACpB,IAAIqD,QAAQ,GAAG/L,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACjM,SAAS,CAACqG,OAAO,CAAC1F,GAAG,CAAC+H,MAAM,EAAE,MAAM,EAAE6C,QAAQ,CAAC,CAAC;MACjF,IAAIW,QAAQ,GAAGlM,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACjM,SAAS,CAACqG,OAAO,CAAC1F,GAAG,CAAC+H,MAAM,EAAE,OAAO,EAAE6C,QAAQ,CAAC,CAAC;MAClF,IAAIY,aAAa,GAAG5C,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACF,QAAQ,CAAC,CAAC;MAC5D,IAAIG,YAAY,GAAG9C,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACL,QAAQ,CAAC,CAAC;MAC3D,IAAIO,WAAW,GAAG/C,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACL,QAAQ,CAAC,CAAC;MACzD,IAAIM,UAAU,GAAGjD,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACR,QAAQ,CAAC,CAAC;MACxD,IAAIU,YAAY,GAAGJ,YAAY,GAAGF,aAAa;MAC/C,IAAIO,UAAU,GAAG1M,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAACR,aAAa,GAAGpI,EAAE,KAAK0I,YAAY,GAAG1I,EAAE,CAAC,EAAE,CAAC,CAAC;MACjF,IAAI6I,gBAAgB,GAAG5M,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC,CAAC,GAAGD,UAAU,IAAIA,UAAU,EAAE,CAAC,CAAC;MAC1E,IAAIG,mBAAmB,GAAG7M,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAACL,WAAW,GAAGvI,EAAE,KAAKoI,aAAa,GAAGpI,EAAE,CAAC,EAAE,CAAC,CAAC;MACzF,IAAI+I,kBAAkB,GAAG9M,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAACH,UAAU,GAAGzI,EAAE,KAAKoI,aAAa,GAAGpI,EAAE,CAAC,EAAE,CAAC,CAAC;MACvF,IAAIgJ,GAAG,GAAGxD,IAAI,CAACU,KAAK,CAAC,GAAG,IAAIwC,YAAY,GAAG1I,EAAE,CAAC,CAAC;MAE/C,IAAI+H,OAAO,IAAI,CAAC,EAAE;QAChBiB,GAAG,GAAG,CAAC;MACT;MAEA,KAAK,IAAI5K,CAAC,IAAIkJ,GAAG,CAACjF,GAAG,EAAE;QACrB,IAAI4G,GAAG,GAAG3B,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACuG,MAAM;QAC9B,IAAIuE,QAAQ,GAAG,CAAC;QAChB,IAAIC,SAAS,GAAG,CAAC;QACjB,IAAIC,QAAQ,GAAG,CAAC;QAChB,IAAIC,MAAM,GAAG,CAAC;QACd,IAAIC,OAAO,GAAG,CAAC;QACf,IAAIC,MAAM,GAAG,CAAC;QAEd,QAAQjC,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACuG,MAAM;UAC1B,KAAK,CAAC;YACJ;UAEF,KAAK,CAAC;YACJ,IAAIuE,QAAQ,GAAGjN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAACtB,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG4B,EAAE,KAAKsI,YAAY,GAAGtI,EAAE,CAAC,EAAE,CAAC,CAAC;YAClF;UAEF;YACE,IAAIqC,GAAG,GAAGpG,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACZ,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C8K,QAAQ,GAAGjN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC3M,SAAS,CAACgM,IAAI,CAACI,GAAG,CAAChG,GAAG,CAAC,GAAGrC,EAAE,KAAKsI,YAAY,GAAGtI,EAAE,CAAC,EAAE,CAAC,CAAC;YACrFqJ,MAAM,GAAGpN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC3M,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACnG,GAAG,CAAC,GAAGrC,EAAE,KAAKyI,UAAU,GAAGzI,EAAE,CAAC,EAAE,CAAC,CAAC;QACpF;QAEA,QAAQsH,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACuG,MAAM;UAC1B,KAAK,CAAC;YACJ;UAEF,KAAK,CAAC;YACJ,IAAIwE,SAAS,GAAGlN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAACtB,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG4B,EAAE,KAAKoI,aAAa,GAAGpI,EAAE,CAAC,EAAE,CAAC,CAAC;YACpF;UAEF;YACE,IAAIqC,GAAG,GAAGpG,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACZ,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C+K,SAAS,GAAGlN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC3M,SAAS,CAACgM,IAAI,CAACI,GAAG,CAAChG,GAAG,CAAC,GAAGrC,EAAE,KAAKoI,aAAa,GAAGpI,EAAE,CAAC,EAAE,CAAC,CAAC;YACvFsJ,OAAO,GAAGrN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC3M,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACnG,GAAG,CAAC,GAAGrC,EAAE,KAAKuI,WAAW,GAAGvI,EAAE,CAAC,EAAE,CAAC,CAAC;QACtF;QAEA,QAAQsH,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACuG,MAAM;UAC1B,KAAK,CAAC;YACJ;UAEF,KAAK,CAAC;YACJ,IAAIyE,QAAQ,GAAGnN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAACtB,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG4B,EAAE,KAAKsI,YAAY,GAAGtI,EAAE,CAAC,EAAE,CAAC,CAAC;YAClF;UAEF;YACE,IAAIqC,GAAG,GAAGpG,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACZ,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1CgL,QAAQ,GAAGnN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC3M,SAAS,CAACgM,IAAI,CAACI,GAAG,CAAChG,GAAG,CAAC,GAAGrC,EAAE,KAAKsI,YAAY,GAAGtI,EAAE,CAAC,EAAE,CAAC,CAAC;YACrFuJ,MAAM,GAAGtN,SAAS,CAACgM,IAAI,CAACW,EAAE,CAAC,CAAC3M,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACnG,GAAG,CAAC,GAAGrC,EAAE,KAAKyI,UAAU,GAAGzI,EAAE,CAAC,EAAE,CAAC,CAAC;QACpF;QAEA,OAAOsH,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAOkJ,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAOkJ,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC;QACpBkJ,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG6K,GAAG;QACnB3B,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG8K,QAAQ;QACxB5B,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG+K,SAAS;QACzB7B,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGgL,QAAQ;QACxB9B,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGiL,MAAM;QACtB/B,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGkL,OAAO;QACvBhC,GAAG,CAACjF,GAAG,CAACjE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGmL,MAAM;MACxB;MAEA,IAAIlH,GAAG,GAAG,EAAE;MACZpG,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAE0F,OAAO,CAAC;MAC3B9L,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAE2G,GAAG,CAAC;MACvB/M,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEqG,YAAY,CAAC;MAChCzM,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEsG,UAAU,CAAC;MAC9B1M,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEwG,gBAAgB,CAAC;MACpC5M,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEyG,mBAAmB,CAAC;MACvC7M,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAE0G,kBAAkB,CAAC;MACtC9M,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAE+F,aAAa,CAAC;MACjCnM,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEiG,YAAY,CAAC;MAChCrM,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEkG,WAAW,CAAC;MAC/BtM,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEoG,UAAU,CAAC;MAE9B,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC3B,KAAK,IAAIrL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;UAC3B,IAAIiD,OAAO,GAAGpF,SAAS,CAACiC,QAAQ,CAACE,CAAC,CAAC;UACnC,IAAIsL,GAAG,GAAGpC,GAAG,CAACjF,GAAG,CAAChB,OAAO,CAAC,CAACoI,CAAC,CAAC;UAE7B,IAAIC,GAAG,IAAI,CAAC,IAAID,CAAC,GAAG,CAAC,EAAE;YACrBC,GAAG,GAAG,CAAC;UACT;UAEAzN,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEqH,GAAG,CAAC;QACzB;MACF;MAEAzN,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEpG,SAAS,CAACqB,QAAQ,CAAC,CAAC,CAAC;MACxCrB,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEpG,SAAS,CAAC2B,OAAO,CAAC;MACrC3B,SAAS,CAACuN,GAAG,CAACnH,GAAG,EAAEpG,SAAS,CAAC4B,KAAK,CAAC;MACnCwE,GAAG,CAACY,IAAI,CAAChH,SAAS,CAACqG,OAAO,CAACqH,cAAc,CAAC,CAAC,CAAC;MAC5C,OAAOtH,GAAG,CAAC0E,IAAI,CAAC,GAAG,CAAC;IACtB,CAAC;IAED9K,SAAS,CAACuN,GAAG,GAAG,UAAUnH,GAAG,EAAEqH,GAAG,EAAE;MAClC,KAAK,IAAI1C,MAAM,CAAC0C,GAAG,CAAC,KAAKA,GAAG,GAAG,CAAC,CAAC;MACjCrH,GAAG,CAACY,IAAI,CAACyG,GAAG,CAAC;IACf,CAAC;IAEDzN,SAAS,CAACgM,IAAI,GAAG,CAAC,CAAC;IAEnBhM,SAAS,CAACgM,IAAI,CAACW,EAAE,GAAG,UAAUc,GAAG,EAAEE,GAAG,EAAE;MACtC,OAAOC,MAAM,CAACH,GAAG,CAACI,OAAO,CAACF,GAAG,CAAC,CAAC;IACjC,CAAC;IAED3N,SAAS,CAACgM,IAAI,CAACI,GAAG,GAAG,UAAUhG,GAAG,EAAE;MAClC,IAAI0H,GAAG,GAAG1H,GAAG,CAACsC,MAAM;MAEpB,IAAIoF,GAAG,GAAG,CAAC,EAAE;QACX,IAAIC,GAAG,GAAG,CAAC;QAEX,KAAK,IAAI5L,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2L,GAAG,EAAE3L,CAAC,EAAE,EAAE;UAC5B4L,GAAG,IAAI3H,GAAG,CAACjE,CAAC,CAAC;QACf;QAEA,OAAO,IAAI,CAACwK,EAAE,CAACoB,GAAG,GAAGD,GAAG,EAAE,CAAC,CAAC;MAC9B,CAAC,MAAM;QACL,OAAO,CAAC;MACV;IACF,CAAC;IAED9N,SAAS,CAACgM,IAAI,CAACO,EAAE,GAAG,UAAUnG,GAAG,EAAE;MACjC,IAAI0H,GAAG,GAAG1H,GAAG,CAACsC,MAAM;MAEpB,IAAIoF,GAAG,GAAG,CAAC,EAAE;QACX,OAAO,CAAC;MACV,CAAC,MAAM;QACL,IAAIE,KAAK,GAAG,CAAC;QACb,IAAIC,IAAI,GAAG,IAAI,CAAC7B,GAAG,CAAChG,GAAG,CAAC;QAExB,KAAK,IAAIjE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2L,GAAG,EAAE3L,CAAC,EAAE,EAAE;UAC5B6L,KAAK,IAAI,CAAC5H,GAAG,CAACjE,CAAC,CAAC,GAAG8L,IAAI,KAAK7H,GAAG,CAACjE,CAAC,CAAC,GAAG8L,IAAI,CAAC;QAC5C;QAEA,IAAI1B,EAAE,GAAGhD,IAAI,CAACC,IAAI,CAACwE,KAAK,GAAGF,GAAG,CAAC;QAC/B,OAAOvB,EAAE;MACX;IACF,CAAC;IAEDvM,SAAS,CAACgM,IAAI,CAACC,EAAE,GAAG,UAAU7F,GAAG,EAAE;MACjC,IAAIA,GAAG,CAACsC,MAAM,GAAG,CAAC,EAAE;QAClB,IAAIwF,MAAM,GAAG9H,GAAG,CAAC+H,MAAM,CAAC,CAAC;QACzB,IAAIL,GAAG,GAAG1H,GAAG,CAACsC,MAAM;QACpBwF,MAAM,CAACE,IAAI,CAAC,UAAU/E,CAAC,EAAEC,CAAC,EAAE;UAC1B,OAAOD,CAAC,GAAGC,CAAC;QACd,CAAC,CAAC;QACF,IAAI+E,GAAG,GAAG,IAAI,CAAC9B,EAAE,CAAC2B,MAAM,CAAC;QACzB,IAAII,KAAK,GAAGJ,MAAM,CAAC3E,IAAI,CAACgF,IAAI,CAACnI,GAAG,CAACsC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI8F,UAAU,GAAG,CAAC;QAClB,IAAIC,MAAM,GAAGH,KAAK,GAAGE,UAAU,GAAGH,GAAG;QACrC,IAAIK,MAAM,GAAGJ,KAAK,GAAGE,UAAU,GAAGH,GAAG;QAErC,IAAIP,GAAG,GAAG,EAAE,EAAE;UACZY,MAAM,GAAG,CAAC;QACZ;QAEA,IAAIC,IAAI,GAAG,EAAE;QAEb,KAAK,IAAIxM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2L,GAAG,EAAE3L,CAAC,EAAE,EAAE;UAC5B,IAAIyM,OAAO,GAAGV,MAAM,CAAC/L,CAAC,CAAC;UAEvB,IAAIyM,OAAO,GAAGH,MAAM,IAAIG,OAAO,GAAGF,MAAM,EAAE;YACxCC,IAAI,CAAC3H,IAAI,CAAC4H,OAAO,CAAC;UACpB;QACF;QAEA,OAAOD,IAAI;MACb,CAAC,MAAM;QACL,OAAOvI,GAAG;MACZ;IACF,CAAC,CAAC,CAAC;;IAGHpG,SAAS,CAACgM,IAAI,CAAC6C,SAAS,GAAG,UAAUrD,GAAG,EAAE;MACxC,IAAIA,GAAG,IAAIjF,SAAS,IAAI,OAAOiF,GAAG,KAAK,QAAQ,EAAE;QAC/C,OAAO,CAAC;MACV;MAEAA,GAAG,GAAGA,GAAG,CAACsD,WAAW,CAAC,CAAC;MACvB,IAAI3M,CAAC,EAAE4M,CAAC;MACR,IAAIC,IAAI,GAAG,UAAU;MAErB,KAAK7M,CAAC,GAAG,CAAC,EAAE4M,CAAC,GAAGvD,GAAG,CAAC9C,MAAM,EAAEvG,CAAC,GAAG4M,CAAC,EAAE5M,CAAC,EAAE,EAAE;QACtC6M,IAAI,IAAIxD,GAAG,CAACzC,UAAU,CAAC5G,CAAC,CAAC;QACzB6M,IAAI,IAAI,CAACA,IAAI,IAAI,CAAC,KAAKA,IAAI,IAAI,CAAC,CAAC,IAAIA,IAAI,IAAI,CAAC,CAAC,IAAIA,IAAI,IAAI,CAAC,CAAC,IAAIA,IAAI,IAAI,EAAE,CAAC;MAC9E;MAEA,OAAOA,IAAI,KAAK,CAAC;IACnB,CAAC;IAEDhP,SAAS,CAACqG,OAAO,GAAG,CAAC,CAAC;IACtBrG,SAAS,CAACqG,OAAO,CAAC8C,KAAK,GAAG,EAAE;IAC5BnJ,SAAS,CAACqG,OAAO,CAAC+E,YAAY,GAAG,EAAE;IAEnCpL,SAAS,CAACqG,OAAO,CAACC,GAAG,GAAG,UAAUF,GAAG,EAAE;MACrC,IAAI,CAAC+C,KAAK,CAACnC,IAAI,CAACZ,GAAG,CAAC;MAEpB,IAAI,IAAI,CAAC+C,KAAK,CAACT,MAAM,GAAG1I,SAAS,CAACuB,gBAAgB,EAAE;QAClD,IAAI,CAAC4H,KAAK,CAACyB,KAAK,CAAC,CAAC;MACpB;IACF,CAAC;IAED5K,SAAS,CAACqG,OAAO,CAACK,UAAU,GAAG,UAAUN,GAAG,EAAE;MAC5C,IAAI,CAACgF,YAAY,CAACpE,IAAI,CAACZ,GAAG,CAAC;IAC7B,CAAC;IAEDpG,SAAS,CAACqG,OAAO,CAACvF,UAAU,GAAG,UAAU4K,QAAQ,EAAEF,GAAG,EAAEG,MAAM,EAAEJ,QAAQ,EAAEK,aAAa,EAAE;MACvF,IAAIA,aAAa,GAAGA,aAAa,IAAIrF,SAAS,GAAGqF,aAAa,GAAGJ,GAAG,IAAIjF,SAAS,IAAIiF,GAAG,IAAI,EAAE;MAC9F,IAAIyD,SAAS,GAAG,EAAE;MAClB,IAAIC,WAAW,GAAGxD,QAAQ,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;MAC1C,IAAIN,YAAY,GAAG,IAAI,CAACA,YAAY;MAEpC,IAAIG,QAAQ,IAAIhF,SAAS,IAAIgF,QAAQ,IAAI,EAAE,IAAIH,YAAY,CAAC1C,MAAM,GAAG,CAAC,EAAE;QACtE0C,YAAY,GAAGpL,SAAS,CAACmP,oBAAoB,CAAC/D,YAAY,EAAEG,QAAQ,CAAC;QAErE,IAAIC,GAAG,IAAIjF,SAAS,IAAIiF,GAAG,IAAI,EAAE,EAAE;UACjC,IAAI4D,OAAO,GAAGpP,SAAS,CAAC8B,QAAQ,CAACuN,cAAc,CAAC9D,QAAQ,CAAC;UAEzD,IAAI6D,OAAO,IAAI,IAAI,EAAE;YACnB5D,GAAG,GAAG4D,OAAO,CAAC3G,KAAK;UACrB;QACF;MACF,CAAC,MAAM;QACL,IAAIO,YAAY,GAAGhJ,SAAS,CAAC0E,SAAS,CAACgE,MAAM;QAE7C,IAAI8C,GAAG,IAAIjF,SAAS,IAAIiF,GAAG,IAAI,EAAE,EAAE;UACjC,IAAIxC,YAAY,GAAG,CAAC,EAAE;YACpBwC,GAAG,GAAG,EAAE;YAER,KAAK,IAAIrJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6G,YAAY,EAAE7G,CAAC,EAAE,EAAE;cACrC,IAAIiN,OAAO,GAAGpP,SAAS,CAAC8B,QAAQ,CAACuN,cAAc,CAACrP,SAAS,CAAC0E,SAAS,CAACvC,CAAC,CAAC,CAAC;cAEvE,IAAIiN,OAAO,IAAI,IAAI,EAAE;gBACnB5D,GAAG,IAAI4D,OAAO,CAAC3G,KAAK;cACtB;YACF;UACF;QACF;MACF;MAEA,IAAI6G,YAAY,GAAG,CAAC;MACpB,IAAIC,oBAAoB,GAAGnE,YAAY,CAAC1C,MAAM;MAC9C,IAAI8G,SAAS,GAAGD,oBAAoB;MAEpC,IAAI,OAAO/D,GAAG,KAAK,QAAQ,EAAE;QAC3BgE,SAAS,GAAGhE,GAAG,CAAC9C,MAAM;MACxB,CAAC,MAAM,IAAI,OAAO8C,GAAG,KAAK,QAAQ,IAAIA,GAAG,GAAG+D,oBAAoB,EAAE;QAChEC,SAAS,GAAGhE,GAAG;MACjB;MAEA,IAAIiE,YAAY,GAAG,CAAC;MAEpB,IAAI9D,MAAM,IAAIpF,SAAS,EAAE;QACvB,IAAIkE,KAAK,CAACiF,QAAQ,CAAC/D,MAAM,CAAC,CAAC,EAAE;UAC3B8D,YAAY,GAAGzP,SAAS,CAACgM,IAAI,CAAC6C,SAAS,CAAClD,MAAM,CAAC;QACjD,CAAC,MAAM;UACL8D,YAAY,GAAGC,QAAQ,CAAC/D,MAAM,CAAC;QACjC;MACF,CAAC,MAAM;QACL,IAAI,OAAOH,GAAG,KAAK,QAAQ,EAAE;UAC3BiE,YAAY,GAAGzP,SAAS,CAACgM,IAAI,CAAC6C,SAAS,CAACrD,GAAG,CAAC;QAC9C;MACF;MAEAyD,SAAS,CAACjI,IAAI,CAAC,CAAChH,SAAS,CAACqB,QAAQ,CAAC,CAAC,EAAErB,SAAS,CAAC2B,OAAO,EAAE3B,SAAS,CAAC4B,KAAK,EAAEsN,WAAW,EAAEM,SAAS,EAAEC,YAAY,EAAEzP,SAAS,CAACqG,OAAO,CAACqH,cAAc,CAAC,CAAC,CAAC,CAAC;MAEpJ,IAAIlC,GAAG,IAAIjF,SAAS,IAAIiF,GAAG,CAAC9C,MAAM,GAAG,CAAC,IAAI,OAAO8C,GAAG,KAAK,QAAQ,EAAE;QACjE,IAAImE,QAAQ,GAAGnE,GAAG,CAACsD,WAAW,CAAC,CAAC;QAChC,IAAIc,QAAQ,GAAGpE,GAAG,CAAC1C,WAAW,CAAC,CAAC;QAChC,IAAI+G,YAAY,GAAG,EAAE;QACrB,IAAIC,OAAO,GAAG,CAAC;QACf,IAAIC,gBAAgB;QACpB,IAAIC,wBAAwB;QAE5B,KAAK,IAAI7N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqJ,GAAG,CAAC9C,MAAM,EAAEvG,CAAC,EAAE,EAAE;UACnC,IAAI8N,eAAe,GAAGzE,GAAG,CAACzC,UAAU,CAAC5G,CAAC,CAAC;UAEvC,IAAI,CAACyJ,aAAa,EAAE;YAClBmE,gBAAgB,GAAGH,QAAQ,CAAC7G,UAAU,CAAC5G,CAAC,CAAC;YACzC6N,wBAAwB,GAAGD,gBAAgB,IAAIE,eAAe,GAAGF,gBAAgB,GAAGJ,QAAQ,CAAC5G,UAAU,CAAC5G,CAAC,CAAC;UAC5G;UAEA,IAAI+N,QAAQ,GAAGJ,OAAO;UACtB,IAAIK,SAAS,GAAGZ,oBAAoB;UACpC,IAAIa,KAAK,GAAG,KAAK;UAEjB,OAAOA,KAAK,IAAI,KAAK,EAAE;YACrB,KAAK,IAAIC,CAAC,GAAGH,QAAQ,EAAEG,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;cACzC,IAAIjK,GAAG,GAAGgF,YAAY,CAACiF,CAAC,CAAC;cACzB,IAAIrK,QAAQ,GAAGI,GAAG,CAAC,CAAC,CAAC;cAErB,IAAIJ,QAAQ,IAAIiK,eAAe,IAAI,CAACrE,aAAa,IAAI5F,QAAQ,IAAIgK,wBAAwB,EAAE;gBACzFI,KAAK,GAAG,IAAI;gBAEZ,IAAIC,CAAC,IAAIP,OAAO,EAAE;kBAChBA,OAAO,EAAE;kBACTD,YAAY,GAAG,EAAE;gBACnB,CAAC,MAAM;kBACLA,YAAY,CAAC7I,IAAI,CAACqJ,CAAC,CAAC;kBACpB,IAAIvC,GAAG,GAAG+B,YAAY,CAACnH,MAAM;kBAE7B,IAAIoF,GAAG,GAAG,CAAC,IAAI+B,YAAY,CAAC/B,GAAG,GAAG,CAAC,CAAC,IAAI+B,YAAY,CAAC/B,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;oBACjEgC,OAAO,GAAGO,CAAC,GAAG,CAAC;oBACfR,YAAY,GAAG,EAAE;kBACnB;gBACF;gBAEA,IAAIzK,OAAO,GAAGgB,GAAG,CAAC,CAAC,CAAC;gBACpB,IAAID,QAAQ,GAAGC,GAAG,CAAC,CAAC,CAAC;gBACrB,IAAIF,SAAS,GAAGE,GAAG,CAAC,CAAC,CAAC;gBAEtB,IAAIsF,QAAQ,EAAE;kBACZuD,SAAS,CAACjI,IAAI,CAAC,CAAChB,QAAQ,EAAEG,QAAQ,EAAED,SAAS,EAAEd,OAAO,CAAC,CAAC;gBAC1D,CAAC,MAAM;kBACL6J,SAAS,CAACjI,IAAI,CAAC,CAACb,QAAQ,EAAED,SAAS,CAAC,CAAC;gBACvC;gBAEA;cACF;YACF;YAEA,IAAIkK,KAAK,IAAI,KAAK,EAAE;cAClB,IAAIF,QAAQ,IAAI,CAAC,EAAE;gBACjBA,QAAQ,GAAG,CAAC;gBACZC,SAAS,GAAGL,OAAO;cACrB,CAAC,MAAM;gBACLM,KAAK,GAAG,IAAI;gBAEZ,IAAIpQ,SAAS,CAAC6E,kBAAkB,EAAE;kBAChCyK,YAAY,EAAE;kBAEd,IAAI,OAAOtP,SAAS,CAACsQ,qBAAqB,KAAK,QAAQ,IAAItQ,SAAS,CAACsQ,qBAAqB,CAACC,aAAa,IAAIhB,oBAAoB,EAAE;oBAChI,IAAIxD,QAAQ,GAAG/L,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACjM,SAAS,CAACqG,OAAO,CAAC1F,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;oBAClE,IAAIuL,QAAQ,GAAGlM,SAAS,CAACgM,IAAI,CAACC,EAAE,CAACjM,SAAS,CAACqG,OAAO,CAAC1F,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;oBACnE,IAAIwF,QAAQ,GAAGoD,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACL,QAAQ,CAAC,CAAC;oBACvD,IAAI7F,SAAS,GAAGqD,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACF,QAAQ,CAAC,CAAC;oBACxDlM,SAAS,CAACsQ,qBAAqB,GAAG;sBAChCnK,QAAQ,EAAEA,QAAQ;sBAClBD,SAAS,EAAEA,SAAS;sBACpBqK,aAAa,EAAEhB;oBACjB,CAAC;kBACH,CAAC,MAAM;oBACL,IAAIpJ,QAAQ,GAAGnG,SAAS,CAACsQ,qBAAqB,CAACnK,QAAQ;oBACvD,IAAID,SAAS,GAAGlG,SAAS,CAACsQ,qBAAqB,CAACpK,SAAS;kBAC3D;kBAEA,IAAIsK,OAAO,GAAG,CAAC;kBAEf,IAAI9E,QAAQ,EAAE;oBACZuD,SAAS,CAACjI,IAAI,CAAC,CAACiJ,eAAe,EAAE9J,QAAQ,EAAED,SAAS,EAAE+J,eAAe,EAAEO,OAAO,CAAC,CAAC;kBAClF,CAAC,MAAM;oBACLvB,SAAS,CAACjI,IAAI,CAAC,CAACb,QAAQ,EAAED,SAAS,EAAEsK,OAAO,CAAC,CAAC;kBAChD;kBAEA;gBACF;cACF;YACF;UACF;UAEA,IAAIxQ,SAAS,CAAC8E,sBAAsB,GAAGwK,YAAY,GAAG,GAAG,GAAGE,SAAS,EAAE;YACrE,OAAO,IAAI;UACb;QACF;MACF,CAAC,MAAM;QACL,IAAIiB,UAAU,GAAG,CAAC;QAElB,IAAI,OAAOjF,GAAG,KAAK,QAAQ,EAAE;UAC3BiF,UAAU,GAAGlB,oBAAoB,GAAG/D,GAAG;QACzC;QAEA,IAAIiF,UAAU,GAAG,CAAC,EAAE;UAClBA,UAAU,GAAG,CAAC;QAChB;QAEA,KAAK,IAAItO,CAAC,GAAGsO,UAAU,EAAEtO,CAAC,GAAGoN,oBAAoB,EAAEpN,CAAC,EAAE,EAAE;UACtD,IAAIiE,GAAG,GAAGgF,YAAY,CAACjJ,CAAC,CAAC;UACzB,IAAIiD,OAAO,GAAGgB,GAAG,CAAC,CAAC,CAAC;UACpB,IAAID,QAAQ,GAAGC,GAAG,CAAC,CAAC,CAAC;UACrB,IAAIF,SAAS,GAAGE,GAAG,CAAC,CAAC,CAAC;UAEtB,IAAIsF,QAAQ,EAAE;YACZ,IAAI1F,QAAQ,GAAGI,GAAG,CAAC,CAAC,CAAC;YACrB6I,SAAS,CAACjI,IAAI,CAAC,CAAChB,QAAQ,EAAEG,QAAQ,EAAED,SAAS,EAAEd,OAAO,CAAC,CAAC;UAC1D,CAAC,MAAM;YACL6J,SAAS,CAACjI,IAAI,CAAC,CAACb,QAAQ,EAAED,SAAS,CAAC,CAAC;UACvC;QACF;MACF;MAEA,OAAO+I,SAAS,CAACnE,IAAI,CAAC,GAAG,CAAC;IAC5B,CAAC;IAED9K,SAAS,CAACmP,oBAAoB,GAAG,UAAUhG,KAAK,EAAEoC,QAAQ,EAAE;MAC1D,IAAI7C,MAAM,GAAGS,KAAK,CAACT,MAAM;MACzB,IAAIgI,QAAQ,GAAG,EAAE;MAEjB,KAAKvO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuG,MAAM,EAAEvG,CAAC,EAAE,EAAE;QAC3B,IAAIiE,GAAG,GAAG+C,KAAK,CAAChH,CAAC,CAAC;QAElB,IAAIiE,GAAG,CAAC,CAAC,CAAC,IAAImF,QAAQ,EAAE;UACtBmF,QAAQ,CAAC1J,IAAI,CAACZ,GAAG,CAAC;QACpB;MACF;MAEA,OAAOsK,QAAQ;IACjB,CAAC;IAED1Q,SAAS,CAACqG,OAAO,CAAC1F,GAAG,GAAG,UAAU+H,MAAM,EAAE4C,IAAI,EAAEC,QAAQ,EAAE;MACxD,IAAIpC,KAAK,GAAG,IAAI,CAACA,KAAK;MAEtB,IAAIoC,QAAQ,IAAIhF,SAAS,IAAIgF,QAAQ,IAAI,EAAE,IAAIpC,KAAK,CAACT,MAAM,GAAG,CAAC,EAAE;QAC/DS,KAAK,GAAGnJ,SAAS,CAACmP,oBAAoB,CAAChG,KAAK,EAAEoC,QAAQ,CAAC;MACzD;MAEA,IAAIM,kBAAkB,GAAG1C,KAAK,CAACT,MAAM;MAErC,IAAIA,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAInC,SAAS,EAAE;QACtCmC,MAAM,GAAG1I,SAAS,CAACwB,oBAAoB;MACzC;MAEA,IAAIkH,MAAM,GAAGmD,kBAAkB,EAAE;QAC/BnD,MAAM,GAAGmD,kBAAkB;MAC7B;MAEA,QAAQP,IAAI;QACV,KAAK,MAAM;UACT,IAAIqF,OAAO,GAAG,EAAE;UAEhB,KAAKxO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIuG,MAAM,EAAEvG,CAAC,EAAE,EAAE;YAC5B,IAAIgE,QAAQ,GAAGgD,KAAK,CAAC0C,kBAAkB,GAAG1J,CAAC,CAAC,CAAC,CAAC,CAAC;YAE/C,IAAIgE,QAAQ,IAAInG,SAAS,CAACyB,WAAW,EAAE;cACrCkP,OAAO,CAAC3J,IAAI,CAACb,QAAQ,CAAC;YACxB;UACF;UACA,OAAOwK,OAAO;QAEhB,KAAK,OAAO;UACV,IAAIC,QAAQ,GAAG,EAAE;UAEjB,KAAKzO,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIuG,MAAM,EAAEvG,CAAC,EAAE,EAAE;YAC5B,IAAI+D,SAAS,GAAGiD,KAAK,CAAC0C,kBAAkB,GAAG1J,CAAC,CAAC,CAAC,CAAC,CAAC;YAEhD,IAAI+D,SAAS,IAAIlG,SAAS,CAAC0B,YAAY,EAAE;cACvCkP,QAAQ,CAAC5J,IAAI,CAACd,SAAS,CAAC;YAC1B;UACF;UACA,OAAO0K,QAAQ;QAEjB;UACE,IAAIC,eAAe,GAAG,CAAC,CAAC;UAExB,KAAK,IAAI1O,CAAC,IAAInC,SAAS,CAACiC,QAAQ,EAAE;YAChC4O,eAAe,CAAC7Q,SAAS,CAACiC,QAAQ,CAACE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UACvD;UAEA,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIuG,MAAM,EAAEvG,CAAC,EAAE,EAAE;YAC5B,IAAIiE,GAAG,GAAG+C,KAAK,CAAC0C,kBAAkB,GAAG1J,CAAC,CAAC;YACvC,IAAIiD,OAAO,GAAGgB,GAAG,CAAC,CAAC,CAAC;YACpB,IAAID,QAAQ,GAAGC,GAAG,CAAC,CAAC,CAAC;YACrB,IAAIF,SAAS,GAAGE,GAAG,CAAC,CAAC,CAAC;YACtB,IAAIhD,WAAW,GAAGgD,GAAG,CAAC,CAAC,CAAC;YAExB,IAAIpG,SAAS,CAACkC,WAAW,CAACkD,OAAO,CAAC,EAAE;cAClC,IAAIe,QAAQ,IAAInG,SAAS,CAACyB,WAAW,EAAE;gBACrCoP,eAAe,CAACzL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAACb,QAAQ,CAAC;gBAE1C,IAAI/C,WAAW,IAAI,CAAC,IAAIpD,SAAS,CAACkC,WAAW,CAACkB,WAAW,CAAC,EAAE;kBAC1DyN,eAAe,CAACzN,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC4D,IAAI,CAACb,QAAQ,CAAC;gBAChD;cACF;cAEA,IAAID,SAAS,IAAIlG,SAAS,CAAC0B,YAAY,EAAE;gBACvCmP,eAAe,CAACzL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAACd,SAAS,CAAC;cAC7C;YACF;UACF;UACA,OAAO,CAAC2K,eAAe,EAAEnI,MAAM,CAAC;MACpC;IACF,CAAC;IAED1I,SAAS,CAACqG,OAAO,CAACqH,cAAc,GAAG,YAAY;MAC7C,IAAIuB,SAAS,GAAG,EAAE;MAClB,IAAIvG,MAAM,GAAG,IAAI,CAACS,KAAK,CAACT,MAAM;MAC9B,IAAImI,eAAe,GAAG,CAAC,CAAC;MAExB,KAAK,IAAI1O,CAAC,IAAInC,SAAS,CAAC+B,UAAU,EAAE;QAClC8O,eAAe,CAAC7Q,SAAS,CAAC+B,UAAU,CAACI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;MACjD;MAEA,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIuG,MAAM,EAAEvG,CAAC,EAAE,EAAE;QAC5B,IAAIiE,GAAG,GAAG,IAAI,CAAC+C,KAAK,CAACT,MAAM,GAAGvG,CAAC,CAAC;QAEhC,IAAInC,SAAS,CAACgC,aAAa,CAACoE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;UACnC,IAAIhB,OAAO,GAAGgB,GAAG,CAAC,CAAC,CAAC;UACpB,IAAIF,SAAS,GAAGE,GAAG,CAAC,CAAC,CAAC;UAEtB,IAAIF,SAAS,IAAIlG,SAAS,CAAC0B,YAAY,EAAE;YACvCmP,eAAe,CAACzL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC4B,IAAI,CAACd,SAAS,CAAC;UAC7C;QACF;MACF;MAEA,KAAK,IAAI/D,CAAC,IAAInC,SAAS,CAAC+B,UAAU,EAAE;QAClC,IAAIqE,GAAG,GAAGpG,SAAS,CAACgM,IAAI,CAACC,EAAE,CAAC4E,eAAe,CAAC7Q,SAAS,CAAC+B,UAAU,CAACI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI2O,MAAM,GAAG1K,GAAG,CAACsC,MAAM;QACvBuG,SAAS,CAACjI,IAAI,CAAC8J,MAAM,CAAC;QAEtB,IAAIA,MAAM,GAAG,CAAC,EAAE;UACd7B,SAAS,CAACjI,IAAI,CAACuC,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAAChG,GAAG,CAAC,CAAC,CAAC;UACnD6I,SAAS,CAACjI,IAAI,CAACuC,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACnG,GAAG,CAAC,CAAC,CAAC;QACpD,CAAC,MAAM,IAAI0K,MAAM,IAAI,CAAC,EAAE;UACtB7B,SAAS,CAACjI,IAAI,CAAC,CAACZ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC,MAAM;UACL6I,SAAS,CAACjI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1B;MACF;MAEA,IAAI+J,YAAY,GAAG/Q,SAAS,CAAC6D,UAAU,CAAC6E,MAAM;MAC9CuG,SAAS,CAACjI,IAAI,CAAC+J,YAAY,CAAC;MAE5B,IAAIA,YAAY,GAAG,CAAC,EAAE;QACpB9B,SAAS,CAACjI,IAAI,CAACuC,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACpM,SAAS,CAAC6D,UAAU,CAAC,CAAC,CAAC;QACpEoL,SAAS,CAACjI,IAAI,CAACuC,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACvM,SAAS,CAAC6D,UAAU,CAAC,CAAC,CAAC;MACrE,CAAC,MAAM,IAAIkN,YAAY,IAAI,CAAC,EAAE;QAC5B9B,SAAS,CAACjI,IAAI,CAAChH,SAAS,CAAC6D,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLoL,SAAS,CAACjI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC1B;MAEA,IAAIgK,UAAU,GAAGhR,SAAS,CAAC4D,SAAS,CAAC8E,MAAM;MAC3CuG,SAAS,CAACjI,IAAI,CAACgK,UAAU,CAAC;MAE1B,IAAIA,UAAU,GAAG,CAAC,EAAE;QAClB/B,SAAS,CAACjI,IAAI,CAACuC,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACpM,SAAS,CAAC4D,SAAS,CAAC,CAAC,CAAC;QACnEqL,SAAS,CAACjI,IAAI,CAACuC,IAAI,CAACU,KAAK,CAACjK,SAAS,CAACgM,IAAI,CAACO,EAAE,CAACvM,SAAS,CAAC4D,SAAS,CAAC,CAAC,CAAC;MACpE,CAAC,MAAM,IAAIoN,UAAU,IAAI,CAAC,EAAE;QAC1B/B,SAAS,CAACjI,IAAI,CAAChH,SAAS,CAAC4D,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC5C,CAAC,MAAM;QACLqL,SAAS,CAACjI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC1B;MAEA,OAAOiI,SAAS;IAClB,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;IAGIjP,SAAS,CAACmB,UAAU,GAAG,UAAU8P,aAAa,EAAE;MAC9C,IAAI5F,GAAG,GAAG4F,aAAa,CAACC,KAAK,CAAC,GAAG,CAAC;MAElC,KAAK/O,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkJ,GAAG,CAAC3C,MAAM,EAAEvG,CAAC,EAAE,EAAE;QAC/BkJ,GAAG,CAAClJ,CAAC,CAAC,GAAGyL,MAAM,CAACvC,GAAG,CAAClJ,CAAC,CAAC,CAAC;MACzB;MAEAkJ,GAAG,CAAC,CAAC,CAAC;MACN,IAAI8F,GAAG,GAAGC,GAAG,GAAGC,MAAM,GAAG,CAAC;MAC1B,IAAIjF,GAAG,GAAGpM,SAAS,CAACgM,IAAI,CAACI,GAAG,CAACf,GAAG,CAAC;MACjC,IAAIiG,IAAI,GAAGjG,GAAG,CAACkG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;MAE5B,KAAK,IAAIpP,CAAC,IAAImP,IAAI,EAAE;QAClBF,GAAG,IAAIxD,MAAM,CAAC0D,IAAI,CAACnP,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1BgP,GAAG,IAAIvD,MAAM,CAAC0D,IAAI,CAACnP,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1BkP,MAAM,IAAIzD,MAAM,CAAC0D,IAAI,CAACnP,CAAC,CAAC,GAAGiK,GAAG,CAAC;MACjC;MAEA,IAAIoF,OAAO,GAAGjI,IAAI,CAACC,IAAI,CAAC4H,GAAG,GAAGD,GAAG,GAAGE,MAAM,CAAC,GAAG,EAAE;MAChD,OAAOG,OAAO,GAAG,CAAC,GAAG,CAAC,GAAGA,OAAO;IAClC,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;;IAGIxR,SAAS,CAACyR,mBAAmB,GAAG,UAAUR,aAAa,EAAE;MACvD,IAAI5F,GAAG,GAAG4F,aAAa,CAACC,KAAK,CAAC,GAAG,CAAC;MAClC,IAAIQ,WAAW,GAAGrG,GAAG,CAAC,CAAC,CAAC;MAExB,IAAIqG,WAAW,IAAI,CAAC,EAAE;QACpB,OAAO,CAAC;MACV;MAEA,IAAIN,GAAG,GAAG,CAAC;MACX,IAAIE,IAAI,GAAGjG,GAAG,CAACkG,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;MAE5B,KAAK,IAAIpP,CAAC,IAAImP,IAAI,EAAE;QAClBF,GAAG,IAAIxD,MAAM,CAAC0D,IAAI,CAACnP,CAAC,CAAC,CAAC;MACxB;MAEA,OAAOiP,GAAG,GAAGM,WAAW;IAC1B,CAAC;IAED1R,SAAS,CAACoB,SAAS,GAAG,UAAU6P,aAAa,EAAE;MAC7C,OAAOrD,MAAM,CAACqD,aAAa,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAEDlR,SAAS,CAACqB,QAAQ,GAAG,YAAY;MAC/B,IAAIrB,SAAS,CAAC2R,MAAM,IAAIpL,SAAS,EAAE;QACjC,OAAOvG,SAAS,CAAC2R,MAAM;MACzB,CAAC,MAAM;QACL,IAAIC,KAAK,GAAG,CAAC;QAEb,CAAC,UAAUvI,CAAC,EAAE;UACZ,IAAI,qVAAqV,CAACwI,IAAI,CAACxI,CAAC,CAAC,IAAI,ykDAAykD,CAACwI,IAAI,CAACxI,CAAC,CAACT,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;YACn8DgJ,KAAK,GAAG,CAAC;UACX;QACF,CAAC,EAAEE,SAAS,CAACC,SAAS,IAAID,SAAS,CAACE,MAAM,IAAIC,MAAM,CAACC,KAAK,CAAC;QAE3DlS,SAAS,CAAC2R,MAAM,GAAGC,KAAK;QACxB,OAAOA,KAAK;MACd;IACF,CAAC;IAED5R,SAAS,CAACsB,SAAS,GAAG,UAAUkK,GAAG,EAAE;MACnC,OAAOxL,SAAS,CAACgM,IAAI,CAAC6C,SAAS,CAACrD,GAAG,CAAC;IACtC,CAAC;EACH,CAAC,MAAM;IACL;IACA,OAAOxL,SAAS,CAAC6B,QAAQ;EAC3B;AACF,CAAC;AAED,SAAS9B,SAAS,IAAIoS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}