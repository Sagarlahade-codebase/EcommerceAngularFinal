{"ast":null,"code":"import PrimaryAuthModel from './PrimaryAuth.js';\nimport fn from '../../util/CookieUtil.js';\nimport Enums from '../../util/Enums.js';\nimport Util from '../../util/Util.js';\n\n/*!\n * Copyright (c) 2015-2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar IDPDiscoveryModel = PrimaryAuthModel.extend({\n  props: function () {\n    const cookieUsername = fn.getCookieUsername();\n    const properties = this.getUsernameAndRemember(cookieUsername);\n    return {\n      username: ['string', true, properties.username],\n      lastUsername: ['string', false, cookieUsername],\n      context: ['object', false],\n      remember: ['boolean', true, properties.remember]\n    };\n  },\n  local: {},\n  save: function () {\n    const username = this.settings.transformUsername(this.get('username'), Enums.IDP_DISCOVERY);\n    const remember = this.get('remember');\n    const lastUsername = this.get('lastUsername');\n    const resource = 'okta:acct:' + username;\n    const requestContext = this.get('requestContext');\n    this.setUsernameCookie(username, remember, lastUsername); //the 'save' event here is triggered and used in the BaseLoginController\n    //to disable the primary button\n\n    this.trigger('save');\n    this.appState.trigger('loading', true);\n    const webfingerArgs = {\n      resource: resource,\n      requestContext: requestContext\n    };\n    const authClient = this.appState.settings.authClient;\n    authClient.webfinger(webfingerArgs).then(res => {\n      if (res && res.links && res.links[0]) {\n        if (res.links[0].properties['okta:idp:type'] === 'OKTA') {\n          this.trigger('goToPrimaryAuth');\n        } else if (res.links[0].href) {\n          const redirectFn = res.links[0].href.includes('OKTA_INVALID_SESSION_REPOST%3Dtrue') ? Util.redirectWithFormGet.bind(Util) : this.settings.get('redirectUtilFn'); //override redirectFn to only use Util.redirectWithFormGet if OKTA_INVALID_SESSION_REPOST is included\n          //it will be encoded since it will be included in the encoded fromURI\n\n          redirectFn(res.links[0].href);\n        }\n      }\n    }).catch(() => {\n      this.trigger('error'); // Specific event handled by the Header for the case where the security image is not\n      // enabled and we want to show a spinner. (Triggered only here and handled only by Header).\n\n      this.appState.trigger('removeLoading');\n      fn.removeUsernameCookie();\n    }).finally(() => {\n      this.appState.trigger('loading', false);\n    });\n  }\n});\nexport { IDPDiscoveryModel as default };","map":{"version":3,"names":["PrimaryAuthModel","fn","Enums","Util","IDPDiscoveryModel","extend","props","cookieUsername","getCookieUsername","properties","getUsernameAndRemember","username","lastUsername","context","remember","local","save","settings","transformUsername","get","IDP_DISCOVERY","resource","requestContext","setUsernameCookie","trigger","appState","webfingerArgs","authClient","webfinger","then","res","links","href","redirectFn","includes","redirectWithFormGet","bind","catch","removeUsernameCookie","finally","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/models/IDPDiscovery.js"],"sourcesContent":["import PrimaryAuthModel from './PrimaryAuth.js';\nimport fn from '../../util/CookieUtil.js';\nimport Enums from '../../util/Enums.js';\nimport Util from '../../util/Util.js';\n\n/*!\n * Copyright (c) 2015-2017, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nvar IDPDiscoveryModel = PrimaryAuthModel.extend({\n  props: function () {\n    const cookieUsername = fn.getCookieUsername();\n    const properties = this.getUsernameAndRemember(cookieUsername);\n    return {\n      username: ['string', true, properties.username],\n      lastUsername: ['string', false, cookieUsername],\n      context: ['object', false],\n      remember: ['boolean', true, properties.remember]\n    };\n  },\n  local: {},\n  save: function () {\n    const username = this.settings.transformUsername(this.get('username'), Enums.IDP_DISCOVERY);\n    const remember = this.get('remember');\n    const lastUsername = this.get('lastUsername');\n    const resource = 'okta:acct:' + username;\n    const requestContext = this.get('requestContext');\n    this.setUsernameCookie(username, remember, lastUsername); //the 'save' event here is triggered and used in the BaseLoginController\n    //to disable the primary button\n\n    this.trigger('save');\n    this.appState.trigger('loading', true);\n    const webfingerArgs = {\n      resource: resource,\n      requestContext: requestContext\n    };\n    const authClient = this.appState.settings.authClient;\n    authClient.webfinger(webfingerArgs).then(res => {\n      if (res && res.links && res.links[0]) {\n        if (res.links[0].properties['okta:idp:type'] === 'OKTA') {\n          this.trigger('goToPrimaryAuth');\n        } else if (res.links[0].href) {\n          const redirectFn = res.links[0].href.includes('OKTA_INVALID_SESSION_REPOST%3Dtrue') ? Util.redirectWithFormGet.bind(Util) : this.settings.get('redirectUtilFn'); //override redirectFn to only use Util.redirectWithFormGet if OKTA_INVALID_SESSION_REPOST is included\n          //it will be encoded since it will be included in the encoded fromURI\n\n          redirectFn(res.links[0].href);\n        }\n      }\n    }).catch(() => {\n      this.trigger('error'); // Specific event handled by the Header for the case where the security image is not\n      // enabled and we want to show a spinner. (Triggered only here and handled only by Header).\n\n      this.appState.trigger('removeLoading');\n      fn.removeUsernameCookie();\n    }).finally(() => {\n      this.appState.trigger('loading', false);\n    });\n  }\n});\n\nexport { IDPDiscoveryModel as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}