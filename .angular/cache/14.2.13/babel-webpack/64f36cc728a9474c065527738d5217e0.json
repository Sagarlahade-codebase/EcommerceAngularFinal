{"ast":null,"code":"import { OktaAuth } from '@okta/okta-auth-js';\nimport Util from '../util/Util.js';\nimport config from '../config/config.json.js';\nfunction getAuthClient(options = {}) {\n  // if authClient is set, authParams are disregarded\n  let {\n    authClient: authClient,\n    authParams: authParams\n  } = options;\n  if (!authClient) {\n    // Create an authClient using widget options and optional authParams\n    const {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      recoveryToken: recoveryToken\n    } = options;\n    authParams = {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      transformErrorXHR: Util.transformErrorXHR,\n      recoveryToken: recoveryToken,\n      ...authParams\n    };\n    if (!authParams.issuer) {\n      authParams.issuer = options.baseUrl + '/oauth2/default';\n    }\n    authClient = new OktaAuth(authParams);\n  } // Add widget version to extended user agent header\n\n  if (!authClient._oktaUserAgent) ;else {\n    authClient._oktaUserAgent.addEnvironment(`okta-signin-widget-${config.version}`);\n  }\n  return authClient;\n}\nexport { getAuthClient as default };","map":{"version":3,"names":["OktaAuth","Util","config","getAuthClient","options","authClient","authParams","issuer","clientId","redirectUri","state","scopes","flow","codeChallenge","codeChallengeMethod","recoveryToken","transformErrorXHR","baseUrl","_oktaUserAgent","addEnvironment","version","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/widget/getAuthClient.js"],"sourcesContent":["import { OktaAuth } from '@okta/okta-auth-js';\nimport Util from '../util/Util.js';\nimport config from '../config/config.json.js';\n\nfunction getAuthClient (options = {}) {\n  // if authClient is set, authParams are disregarded\n  let {\n    authClient: authClient,\n    authParams: authParams\n  } = options;\n\n  if (!authClient) {\n    // Create an authClient using widget options and optional authParams\n    const {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      recoveryToken: recoveryToken\n    } = options;\n    authParams = {\n      issuer: issuer,\n      clientId: clientId,\n      redirectUri: redirectUri,\n      state: state,\n      scopes: scopes,\n      flow: flow,\n      codeChallenge: codeChallenge,\n      codeChallengeMethod: codeChallengeMethod,\n      transformErrorXHR: Util.transformErrorXHR,\n      recoveryToken: recoveryToken,\n      ...authParams\n    };\n\n    if (!authParams.issuer) {\n      authParams.issuer = options.baseUrl + '/oauth2/default';\n    }\n\n    authClient = new OktaAuth(authParams);\n  } // Add widget version to extended user agent header\n\n\n  if (!authClient._oktaUserAgent) ; else {\n    authClient._oktaUserAgent.addEnvironment(`okta-signin-widget-${config.version}`);\n  }\n\n  return authClient;\n}\n\nexport { getAuthClient as default };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,MAAM,MAAM,0BAA0B;AAE7C,SAASC,aAAaA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACpC;EACA,IAAI;IACFC,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA;EACd,CAAC,GAAGF,OAAO;EAEX,IAAI,CAACC,UAAU,EAAE;IACf;IACA,MAAM;MACJE,MAAM,EAAEA,MAAM;MACdC,QAAQ,EAAEA,QAAQ;MAClBC,WAAW,EAAEA,WAAW;MACxBC,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA,IAAI;MACVC,aAAa,EAAEA,aAAa;MAC5BC,mBAAmB,EAAEA,mBAAmB;MACxCC,aAAa,EAAEA;IACjB,CAAC,GAAGX,OAAO;IACXE,UAAU,GAAG;MACXC,MAAM,EAAEA,MAAM;MACdC,QAAQ,EAAEA,QAAQ;MAClBC,WAAW,EAAEA,WAAW;MACxBC,KAAK,EAAEA,KAAK;MACZC,MAAM,EAAEA,MAAM;MACdC,IAAI,EAAEA,IAAI;MACVC,aAAa,EAAEA,aAAa;MAC5BC,mBAAmB,EAAEA,mBAAmB;MACxCE,iBAAiB,EAAEf,IAAI,CAACe,iBAAiB;MACzCD,aAAa,EAAEA,aAAa;MAC5B,GAAGT;IACL,CAAC;IAED,IAAI,CAACA,UAAU,CAACC,MAAM,EAAE;MACtBD,UAAU,CAACC,MAAM,GAAGH,OAAO,CAACa,OAAO,GAAG,iBAAiB;IACzD;IAEAZ,UAAU,GAAG,IAAIL,QAAQ,CAACM,UAAU,CAAC;EACvC,CAAC,CAAC;;EAGF,IAAI,CAACD,UAAU,CAACa,cAAc,EAAE,CAAC,KAAM;IACrCb,UAAU,CAACa,cAAc,CAACC,cAAc,CAAC,sBAAsBjB,MAAM,CAACkB,OAAO,EAAE,CAAC;EAClF;EAEA,OAAOf,UAAU;AACnB;AAEA,SAASF,aAAa,IAAIkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}