{"ast":null,"code":"import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport '../../internals/BaseForm.js';\nimport BaseFormWithPolling from '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../util/FactorUtil.js';\nimport { FORMS } from '../../../ion/RemediationConstants.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport fn from '../../../../util/BrowserFeatures.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport polling from '../shared/polling.js';\nimport OVResendView from './OVResendView.js';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView.js';\nimport EnrollChannelPollDescriptionView from './EnrollChannelPollDescriptionView.js';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_device_incompatible';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_app_update_required';\nconst OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY = 'oie.authenticator.app.method.push.enroll.enable.biometrics';\nconst Body = BaseFormWithPolling.extend(Object.assign({\n  title: function () {\n    const selectedChannel = this.options.appState.get('currentAuthenticator').contextualData.selectedChannel;\n    let title;\n    switch (selectedChannel) {\n      case 'email':\n        title = loc('oie.enroll.okta_verify.setup.email.title', 'login');\n        break;\n      case 'sms':\n        title = loc('oie.enroll.okta_verify.setup.sms.title', 'login');\n        break;\n      default:\n        title = loc('oie.enroll.okta_verify.setup.title', 'login');\n    }\n    return title;\n  },\n  className: 'oie-enroll-ov-poll',\n  noButtonBar: true,\n  initialize: function () {\n    BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', this.stopPolling);\n    this.startPolling();\n  },\n  postRender: function () {\n    BaseFormWithPolling.prototype.postRender.apply(this, arguments);\n    if ((fn.isAndroid() || fn.isIOS()) & this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'qrcode') {\n      this.options.appState.trigger('switchForm', FORMS.SELECT_ENROLLMENT_CHANNEL);\n    }\n  },\n  showMessages: function () {\n    // override showMessages to display custom callout\n    const calloutOptions = {};\n    if (this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS) || this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS)) {\n      // add a title for ov force upgrade\n      calloutOptions.title = loc('oie.okta_verify.enroll.force.upgrade.title', 'login');\n    } else if (this.options.appState.containsMessageWithI18nKey(OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY)) {\n      // add a title for OV enable biometrics message during enrollment\n      calloutOptions.title = loc('oie.authenticator.app.method.push.enroll.enable.biometrics.title', 'login');\n    }\n    BaseFormWithPolling.prototype.showMessages.call(this, calloutOptions);\n  },\n  getUISchema: function () {\n    const schema = [];\n    const contextualData = this.options.appState.get('currentAuthenticator').contextualData;\n    const selectedChannel = contextualData.selectedChannel;\n    schema.push({\n      View: EnrollChannelPollDescriptionView\n    });\n    schema.push({\n      View: SwitchEnrollChannelLinkView,\n      options: {\n        selectedChannel: selectedChannel\n      },\n      selector: selectedChannel === 'qrcode' ? '.qrcode-container' : '.switch-channel-content'\n    });\n    if (['email', 'sms'].includes(selectedChannel)) {\n      schema.push({\n        View: OVResendView,\n        selector: '.o-form-error-container'\n      });\n    }\n    return schema;\n  },\n  remove: function () {\n    BaseFormWithPolling.prototype.remove.apply(this, arguments);\n    this.stopPolling();\n  }\n}, polling));\nvar EnrollPollOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body\n});\nexport { EnrollPollOktaVerifyView as default };","map":{"version":3,"names":["loc","BaseFormWithPolling","FORMS","fn","BaseAuthenticatorView","polling","OVResendView","SwitchEnrollChannelLinkView","EnrollChannelPollDescriptionView","OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS","OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS","OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY","Body","extend","Object","assign","title","selectedChannel","options","appState","get","contextualData","className","noButtonBar","initialize","prototype","apply","arguments","listenTo","model","stopPolling","startPolling","postRender","isAndroid","isIOS","trigger","SELECT_ENROLLMENT_CHANNEL","showMessages","calloutOptions","containsMessageWithI18nKey","call","getUISchema","schema","push","View","selector","includes","remove","EnrollPollOktaVerifyView","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v2/view-builder/views/ov/EnrollPollOktaVerifyView.js"],"sourcesContent":["import { loc } from '../../../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport '../../internals/BaseHeader.js';\nimport '../../internals/BaseFooter.js';\nimport '../../internals/BaseForm.js';\nimport BaseFormWithPolling from '../../internals/BaseFormWithPolling.js';\nimport '../../internals/BaseOktaVerifyChallengeView.js';\nimport '../../internals/BaseView.js';\nimport '../../components/AuthenticatorEnrollOptions.js';\nimport '../../components/AuthenticatorVerifyOptions.js';\nimport '../../../../util/FactorUtil.js';\nimport { FORMS } from '../../../ion/RemediationConstants.js';\nimport '../../../../v1/views/admin-consent/ScopeList.js';\nimport '../../../../v1/views/consent/ScopeList.js';\nimport '../captcha/CaptchaView.js';\nimport fn from '../../../../util/BrowserFeatures.js';\nimport BaseAuthenticatorView from '../../components/BaseAuthenticatorView.js';\nimport polling from '../shared/polling.js';\nimport OVResendView from './OVResendView.js';\nimport SwitchEnrollChannelLinkView from './SwitchEnrollChannelLinkView.js';\nimport EnrollChannelPollDescriptionView from './EnrollChannelPollDescriptionView.js';\n\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_device_incompatible';\nconst OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS = 'oie.authenticator.app.non_fips_compliant_enrollment_app_update_required';\nconst OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY = 'oie.authenticator.app.method.push.enroll.enable.biometrics';\nconst Body = BaseFormWithPolling.extend(Object.assign({\n  title: function () {\n    const selectedChannel = this.options.appState.get('currentAuthenticator').contextualData.selectedChannel;\n    let title;\n\n    switch (selectedChannel) {\n      case 'email':\n        title = loc('oie.enroll.okta_verify.setup.email.title', 'login');\n        break;\n\n      case 'sms':\n        title = loc('oie.enroll.okta_verify.setup.sms.title', 'login');\n        break;\n\n      default:\n        title = loc('oie.enroll.okta_verify.setup.title', 'login');\n    }\n\n    return title;\n  },\n  className: 'oie-enroll-ov-poll',\n  noButtonBar: true,\n  initialize: function () {\n    BaseFormWithPolling.prototype.initialize.apply(this, arguments);\n    this.listenTo(this.model, 'error', this.stopPolling);\n    this.startPolling();\n  },\n  postRender: function () {\n    BaseFormWithPolling.prototype.postRender.apply(this, arguments);\n\n    if ((fn.isAndroid() || fn.isIOS()) & this.options.appState.get('currentAuthenticator').contextualData.selectedChannel === 'qrcode') {\n      this.options.appState.trigger('switchForm', FORMS.SELECT_ENROLLMENT_CHANNEL);\n    }\n  },\n  showMessages: function () {\n    // override showMessages to display custom callout\n    const calloutOptions = {};\n\n    if (this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_IOS) || this.options.appState.containsMessageWithI18nKey(OV_FORCE_FIPS_COMPLIANCE_UPGRAGE_KEY_NON_IOS)) {\n      // add a title for ov force upgrade\n      calloutOptions.title = loc('oie.okta_verify.enroll.force.upgrade.title', 'login');\n    } else if (this.options.appState.containsMessageWithI18nKey(OV_QR_ENROLL_ENABLE_BIOMETRICS_KEY)) {\n      // add a title for OV enable biometrics message during enrollment\n      calloutOptions.title = loc('oie.authenticator.app.method.push.enroll.enable.biometrics.title', 'login');\n    }\n\n    BaseFormWithPolling.prototype.showMessages.call(this, calloutOptions);\n  },\n  getUISchema: function () {\n    const schema = [];\n    const contextualData = this.options.appState.get('currentAuthenticator').contextualData;\n    const selectedChannel = contextualData.selectedChannel;\n    schema.push({\n      View: EnrollChannelPollDescriptionView\n    });\n    schema.push({\n      View: SwitchEnrollChannelLinkView,\n      options: {\n        selectedChannel: selectedChannel\n      },\n      selector: selectedChannel === 'qrcode' ? '.qrcode-container' : '.switch-channel-content'\n    });\n\n    if (['email', 'sms'].includes(selectedChannel)) {\n      schema.push({\n        View: OVResendView,\n        selector: '.o-form-error-container'\n      });\n    }\n\n    return schema;\n  },\n  remove: function () {\n    BaseFormWithPolling.prototype.remove.apply(this, arguments);\n    this.stopPolling();\n  }\n}, polling));\nvar EnrollPollOktaVerifyView = BaseAuthenticatorView.extend({\n  Body: Body\n});\n\nexport { EnrollPollOktaVerifyView as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}