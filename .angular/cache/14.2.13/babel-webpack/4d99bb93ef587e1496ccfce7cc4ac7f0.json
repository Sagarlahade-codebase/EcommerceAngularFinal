{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isAuthenticator } from '../types/api.js';\nfunction formatAuthenticator(incoming) {\n  let authenticator;\n  if (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\nfunction compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  if (auth1.id && auth2.id) {\n    return auth1.id === auth2.id;\n  }\n  if (auth1.key && auth2.key) {\n    return auth1.key === auth2.key;\n  }\n  return false;\n}\nfunction findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options.find(({\n      relatesTo\n    }) => relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}\nexport { compareAuthenticators, findMatchedOption, formatAuthenticator };","map":{"version":3,"names":["isAuthenticator","formatAuthenticator","incoming","authenticator","key","Error","compareAuthenticators","auth1","auth2","id","findMatchedOption","authenticators","options","option","find","relatesTo"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/authenticator/util.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { isAuthenticator } from '../types/api.js';\n\nfunction formatAuthenticator(incoming) {\n    let authenticator;\n    if (isAuthenticator(incoming)) {\n        authenticator = incoming;\n    }\n    else if (typeof incoming === 'string') {\n        authenticator = {\n            key: incoming\n        };\n    }\n    else {\n        throw new Error('Invalid format for authenticator');\n    }\n    return authenticator;\n}\nfunction compareAuthenticators(auth1, auth2) {\n    if (!auth1 || !auth2) {\n        return false;\n    }\n    if (auth1.id && auth2.id) {\n        return (auth1.id === auth2.id);\n    }\n    if (auth1.key && auth2.key) {\n        return (auth1.key === auth2.key);\n    }\n    return false;\n}\nfunction findMatchedOption(authenticators, options) {\n    let option;\n    for (let authenticator of authenticators) {\n        option = options\n            .find(({ relatesTo }) => relatesTo.key === authenticator.key);\n        if (option) {\n            break;\n        }\n    }\n    return option;\n}\n\nexport { compareAuthenticators, findMatchedOption, formatAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAe,QAAQ,iBAAiB;AAEjD,SAASC,mBAAmBA,CAACC,QAAQ,EAAE;EACnC,IAAIC,aAAa;EACjB,IAAIH,eAAe,CAACE,QAAQ,CAAC,EAAE;IAC3BC,aAAa,GAAGD,QAAQ;EAC5B,CAAC,MACI,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IACnCC,aAAa,GAAG;MACZC,GAAG,EAAEF;IACT,CAAC;EACL,CAAC,MACI;IACD,MAAM,IAAIG,KAAK,CAAC,kCAAkC,CAAC;EACvD;EACA,OAAOF,aAAa;AACxB;AACA,SAASG,qBAAqBA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACzC,IAAI,CAACD,KAAK,IAAI,CAACC,KAAK,EAAE;IAClB,OAAO,KAAK;EAChB;EACA,IAAID,KAAK,CAACE,EAAE,IAAID,KAAK,CAACC,EAAE,EAAE;IACtB,OAAQF,KAAK,CAACE,EAAE,KAAKD,KAAK,CAACC,EAAE;EACjC;EACA,IAAIF,KAAK,CAACH,GAAG,IAAII,KAAK,CAACJ,GAAG,EAAE;IACxB,OAAQG,KAAK,CAACH,GAAG,KAAKI,KAAK,CAACJ,GAAG;EACnC;EACA,OAAO,KAAK;AAChB;AACA,SAASM,iBAAiBA,CAACC,cAAc,EAAEC,OAAO,EAAE;EAChD,IAAIC,MAAM;EACV,KAAK,IAAIV,aAAa,IAAIQ,cAAc,EAAE;IACtCE,MAAM,GAAGD,OAAO,CACXE,IAAI,CAAC,CAAC;MAAEC;IAAU,CAAC,KAAKA,SAAS,CAACX,GAAG,KAAKD,aAAa,CAACC,GAAG,CAAC;IACjE,IAAIS,MAAM,EAAE;MACR;IACJ;EACJ;EACA,OAAOA,MAAM;AACjB;AAEA,SAASP,qBAAqB,EAAEI,iBAAiB,EAAET,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module"}