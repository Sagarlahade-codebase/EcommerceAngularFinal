{"ast":null,"code":"import Bundles from './Bundles.js';\nimport config from '../config/config.json.js';\nfunction loadLanguage(appState, settings) {\n  const languageCode = appState.get('languageCode') || settings.get('languageCode') || config.defaultLanguage;\n  const i18n = settings.get('i18n');\n  const assetBaseUrl = settings.get('assets.baseUrl');\n  const assetRewrite = settings.get('assets.rewrite');\n  const supportedLanguages = settings.get('supportedLanguages');\n  const timeout = setTimeout(function () {\n    // Trigger a spinner if we're waiting on a request for a new language.\n    appState.trigger('loading', true);\n  }, 200);\n  return Bundles.loadLanguage(languageCode, i18n, {\n    baseUrl: assetBaseUrl,\n    rewrite: assetRewrite\n  }, supportedLanguages).then(function () {\n    clearTimeout(timeout);\n    appState.trigger('loading', false);\n  }); // TODO: what if load language error?\n}\nvar LanguageUtil = {\n  loadLanguage: loadLanguage\n};\nexport { LanguageUtil as default };","map":{"version":3,"names":["Bundles","config","loadLanguage","appState","settings","languageCode","get","defaultLanguage","i18n","assetBaseUrl","assetRewrite","supportedLanguages","timeout","setTimeout","trigger","baseUrl","rewrite","then","clearTimeout","LanguageUtil","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/LanguageUtil.js"],"sourcesContent":["import Bundles from './Bundles.js';\nimport config from '../config/config.json.js';\n\nfunction loadLanguage(appState, settings) {\n  const languageCode = appState.get('languageCode') || settings.get('languageCode') || config.defaultLanguage;\n  const i18n = settings.get('i18n');\n  const assetBaseUrl = settings.get('assets.baseUrl');\n  const assetRewrite = settings.get('assets.rewrite');\n  const supportedLanguages = settings.get('supportedLanguages');\n  const timeout = setTimeout(function () {\n    // Trigger a spinner if we're waiting on a request for a new language.\n    appState.trigger('loading', true);\n  }, 200);\n  return Bundles.loadLanguage(languageCode, i18n, {\n    baseUrl: assetBaseUrl,\n    rewrite: assetRewrite\n  }, supportedLanguages).then(function () {\n    clearTimeout(timeout);\n    appState.trigger('loading', false);\n  }); // TODO: what if load language error?\n}\n\nvar LanguageUtil = {\n  loadLanguage: loadLanguage\n};\n\nexport { LanguageUtil as default };\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,MAAM,MAAM,0BAA0B;AAE7C,SAASC,YAAYA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACxC,MAAMC,YAAY,GAAGF,QAAQ,CAACG,GAAG,CAAC,cAAc,CAAC,IAAIF,QAAQ,CAACE,GAAG,CAAC,cAAc,CAAC,IAAIL,MAAM,CAACM,eAAe;EAC3G,MAAMC,IAAI,GAAGJ,QAAQ,CAACE,GAAG,CAAC,MAAM,CAAC;EACjC,MAAMG,YAAY,GAAGL,QAAQ,CAACE,GAAG,CAAC,gBAAgB,CAAC;EACnD,MAAMI,YAAY,GAAGN,QAAQ,CAACE,GAAG,CAAC,gBAAgB,CAAC;EACnD,MAAMK,kBAAkB,GAAGP,QAAQ,CAACE,GAAG,CAAC,oBAAoB,CAAC;EAC7D,MAAMM,OAAO,GAAGC,UAAU,CAAC,YAAY;IACrC;IACAV,QAAQ,CAACW,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;EACnC,CAAC,EAAE,GAAG,CAAC;EACP,OAAOd,OAAO,CAACE,YAAY,CAACG,YAAY,EAAEG,IAAI,EAAE;IAC9CO,OAAO,EAAEN,YAAY;IACrBO,OAAO,EAAEN;EACX,CAAC,EAAEC,kBAAkB,CAAC,CAACM,IAAI,CAAC,YAAY;IACtCC,YAAY,CAACN,OAAO,CAAC;IACrBT,QAAQ,CAACW,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;EACpC,CAAC,CAAC,CAAC,CAAC;AACN;AAEA,IAAIK,YAAY,GAAG;EACjBjB,YAAY,EAAEA;AAChB,CAAC;AAED,SAASiB,YAAY,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}