{"ast":null,"code":"import { loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport TimeUtil from './TimeUtil.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nconst factorData = {\n  OKTA_VERIFY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.oktaVerify',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  OKTA_VERIFY_PUSH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.oktaVerifyPush',\n    description: 'factor.push.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  U2F: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.u2f',\n    description: brandName => {\n      return brandName ? 'factor.u2f.description.specific' : 'factor.u2f.description.generic';\n    },\n    iconClassName: 'mfa-u2f',\n    sortOrder: 2\n  },\n  WEBAUTHN: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.webauthn.biometric',\n    description: 'factor.webauthn.biometric.description',\n    iconClassName: 'mfa-webauthn',\n    sortOrder: 2\n  },\n  WINDOWS_HELLO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.windowsHello',\n    description: brandName => {\n      return brandName ? 'factor.windowsHello.signin.description.specific' : 'factor.windowsHello.signin.description.generic';\n    },\n    iconClassName: 'mfa-windows-hello',\n    sortOrder: 3\n  },\n  YUBIKEY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.yubikey',\n    description: 'factor.totpHard.yubikey.description',\n    iconClassName: 'mfa-yubikey',\n    sortOrder: 4\n  },\n  GOOGLE_AUTH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.googleAuthenticator',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-google-auth',\n    sortOrder: 5\n  },\n  CUSTOM_HOTP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.hotp.description',\n    iconClassName: 'mfa-hotp',\n    sortOrder: 6\n  },\n  SMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.sms',\n    description: 'factor.sms.description',\n    iconClassName: 'mfa-okta-sms',\n    sortOrder: 7\n  },\n  CALL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.call',\n    description: 'factor.call.description',\n    iconClassName: 'mfa-okta-call',\n    sortOrder: 8\n  },\n  EMAIL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.email',\n    description: 'factor.email.description',\n    iconClassName: 'mfa-okta-email',\n    sortOrder: 9\n  },\n  QUESTION: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.securityQuestion',\n    description: 'factor.securityQuestion.description',\n    iconClassName: 'mfa-okta-security-question',\n    sortOrder: 10\n  },\n  DUO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.duo',\n    description: 'factor.duo.description',\n    iconClassName: 'mfa-duo',\n    sortOrder: 11\n  },\n  SYMANTEC_VIP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.symantecVip',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-symantec',\n    sortOrder: 12\n  },\n  RSA_SECURID: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.rsaSecurId',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-rsa',\n    sortOrder: 13\n  },\n  ON_PREM: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-onprem',\n    sortOrder: 14\n  },\n  PASSWORD: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.password',\n    description: '',\n    iconClassName: 'mfa-okta-password',\n    sortOrder: 15\n  },\n  CUSTOM_CLAIMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.customFactor.description',\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 16\n  },\n  GENERIC_SAML: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 17\n  },\n  GENERIC_OIDC: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 18\n  }\n};\nconst getPasswordComplexityRequirementsAsArray = function (policy, i18nKeys) {\n  const setExcludeAttributes = function (policyComplexity) {\n    const excludeAttributes = policyComplexity.excludeAttributes;\n    policyComplexity.excludeFirstName = oktaUnderscore.contains(excludeAttributes, 'firstName');\n    policyComplexity.excludeLastName = oktaUnderscore.contains(excludeAttributes, 'lastName');\n    return oktaUnderscore.omit(policyComplexity, 'excludeAttributes');\n  };\n  if (policy.complexity) {\n    const complexityFields = i18nKeys.complexity;\n    const policyComplexity = setExcludeAttributes(policy.complexity);\n    const requirements = oktaUnderscore.map(policyComplexity, function (complexityValue, complexityType) {\n      if (complexityValue <= 0) {\n        // to skip 0 and -1\n        return;\n      }\n      const params = complexityFields[complexityType];\n      return params.args ? loc(params.i18n, 'login', [complexityValue]) : loc(params.i18n, 'login');\n    });\n    return oktaUnderscore.compact(requirements);\n  }\n  return [];\n};\nconst getPasswordHistoryRequirementDescription = function (policy, i18nKeys) {\n  if (policy.age && policy.age.historyCount > 0) {\n    return loc(i18nKeys.history.i18n, 'login', [policy.age.historyCount]);\n  }\n  return null;\n};\nconst getPasswordAgeRequirementDescription = function (policy, i18nKeys) {\n  const getPasswordAgeRequirement = function (displayableTime) {\n    let propertiesString;\n    switch (displayableTime.unit) {\n      case 'DAY':\n        propertiesString = i18nKeys.age.days.i18n;\n        break;\n      case 'HOUR':\n        propertiesString = i18nKeys.age.hours.i18n;\n        break;\n      case 'MINUTE':\n        propertiesString = i18nKeys.age.minutes.i18n;\n    }\n    return loc(propertiesString, 'login', [displayableTime.time]);\n  };\n  if (policy.age && policy.age.minAgeMinutes > 0) {\n    const displayableTime = TimeUtil.getTimeInHighestRelevantUnit(policy.age.minAgeMinutes, 'MINUTE');\n    return getPasswordAgeRequirement(displayableTime);\n  }\n  return null;\n};\nconst getPasswordRequirements = function (policy, i18nKeys) {\n  const passwordRequirements = {\n    complexity: [],\n    history: [],\n    age: []\n  };\n  passwordRequirements.complexity = getPasswordComplexityRequirementsAsArray(policy, i18nKeys);\n  const historyRequirement = getPasswordHistoryRequirementDescription(policy, i18nKeys);\n  if (historyRequirement) {\n    passwordRequirements.history.push(historyRequirement);\n  }\n  const ageRequirement = getPasswordAgeRequirementDescription(policy, i18nKeys);\n  if (ageRequirement) {\n    passwordRequirements.age.push(ageRequirement);\n  }\n  return passwordRequirements;\n};\nfn.getFactorName = function (provider, factorType) {\n  if (provider === 'OKTA' && factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n  if (provider === 'OKTA' && factorType === 'push') {\n    return 'OKTA_VERIFY_PUSH';\n  }\n  if (provider === 'GOOGLE') {\n    return 'GOOGLE_AUTH';\n  }\n  if (provider === 'SYMANTEC' && factorType === 'token') {\n    return 'SYMANTEC_VIP';\n  }\n  if (provider === 'RSA' && factorType === 'token') {\n    return 'RSA_SECURID';\n  }\n  if (provider === 'DEL_OATH' && factorType === 'token') {\n    return 'ON_PREM';\n  }\n  if (provider === 'DUO' && factorType === 'web') {\n    return 'DUO';\n  }\n  if (provider === 'YUBICO' && factorType === 'token:hardware') {\n    return 'YUBIKEY';\n  }\n  if (provider === 'OKTA' && factorType === 'sms') {\n    return 'SMS';\n  }\n  if (provider === 'OKTA' && factorType === 'call') {\n    return 'CALL';\n  }\n  if (provider === 'OKTA' && factorType === 'question') {\n    return 'QUESTION';\n  }\n  if (provider === 'OKTA' && factorType === 'email') {\n    return 'EMAIL';\n  }\n  if (provider === 'OKTA' && factorType === 'password') {\n    return 'PASSWORD';\n  }\n  if (provider === 'GENERIC_SAML' && factorType === 'assertion:saml2') {\n    return 'GENERIC_SAML';\n  }\n  if (provider === 'GENERIC_OIDC' && factorType === 'assertion:oidc') {\n    return 'GENERIC_OIDC';\n  }\n  return fn.getFactorNameForFactorType.call(this, factorType);\n};\nfn.getFactorNameForFactorType = function (factorType) {\n  if (factorType === 'u2f') {\n    return 'U2F';\n  }\n  if (factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n  if (factorType === 'webauthn') {\n    if (this.settings.get('features.webauthn')) {\n      return 'WEBAUTHN';\n    } else {\n      return 'WINDOWS_HELLO';\n    }\n  }\n  if (factorType === 'token:hotp') {\n    return 'CUSTOM_HOTP';\n  }\n  if (factorType === 'claims_provider') {\n    return 'CUSTOM_CLAIMS';\n  }\n};\nfn.isOktaVerify = function (provider, factorType) {\n  return provider === 'OKTA' && (factorType === 'token:software:totp' || factorType === 'push');\n};\nfn.getFactorLabel = function (provider, factorType) {\n  const key = factorData[fn.getFactorName.apply(this, [provider, factorType])].label;\n  return loc(key, 'login');\n};\nfn.getFactorDescription = function (provider, factorType) {\n  const descriptionKey = factorData[fn.getFactorName.apply(this, [provider, factorType])].description;\n  if (oktaUnderscore.isFunction(descriptionKey)) {\n    const brandName = this.settings.get('brandName');\n    const key = descriptionKey(brandName);\n    return brandName ? loc(key, 'login', [brandName]) : loc(key, 'login');\n  } else {\n    return loc(descriptionKey, 'login');\n  }\n};\nfn.getFactorIconClassName = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].iconClassName;\n};\nfn.getFactorSortOrder = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].sortOrder;\n};\nfn.getRememberDeviceValue = function (appState) {\n  return appState && appState.get('rememberDeviceByDefault');\n};\nfn.getSecurityQuestionLabel = function (questionObj) {\n  const localizedQuestion = loc('security.' + questionObj.question);\n  return localizedQuestion.indexOf('L10N_ERROR') < 0 ? localizedQuestion : questionObj.questionText;\n};\nfn.removeRequirementsFromError = function (responseJSON, policy) {\n  const passwordRequirementsAsString = this.getPasswordComplexityDescription(policy);\n  if (responseJSON.errorCauses && responseJSON.errorCauses.length > 0 && oktaUnderscore.isString(responseJSON.errorCauses[0].errorSummary)) {\n    responseJSON.errorCauses[0].errorSummary = responseJSON.errorCauses[0].errorSummary.replace(passwordRequirementsAsString, '').trim();\n  }\n  return responseJSON;\n};\nfn.getPasswordComplexityDescriptionForHtmlList = function (policy) {\n  const passwordRequirementHtmlI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length.description',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase.description'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase.description'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number.description'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol.description'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username.description'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name.description'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name.description'\n      }\n    },\n    history: {\n      i18n: 'password.complexity.history.description'\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes.description'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours.description'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays.description'\n      }\n    }\n  };\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementHtmlI18nKeys);\n  return oktaUnderscore.union(passwordRequirements.complexity, passwordRequirements.history, passwordRequirements.age);\n};\nfn.getPasswordComplexityDescription = function (policy) {\n  const passwordRequirementI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name'\n      }\n    },\n    history: {\n      i18n: 'password.complexity.history'\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays'\n      }\n    }\n  };\n  const result = [];\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementI18nKeys);\n  let requirements = passwordRequirements.complexity; // Generate and add complexity string to result\n\n  if (requirements.length > 0) {\n    requirements = oktaUnderscore.reduce(requirements, function (result, requirement) {\n      return result ? result + loc('password.complexity.list.element', 'login', [requirement]) : requirement;\n    });\n    result.push(loc('password.complexity.requirements', 'login', [requirements]));\n  } // Only 1 value expected in history and age for now\n\n  result.push(passwordRequirements.history[0]);\n  result.push(passwordRequirements.age[0]);\n  return oktaUnderscore.compact(result).join(' ');\n};\nfn.getCardinalityText = function (enrolled, required, cardinality) {\n  if (cardinality) {\n    if (enrolled) {\n      return cardinality.enrolled === 1 ? '' : loc('enroll.choices.cardinality.setup', 'login', [cardinality.enrolled]);\n    } else if (required && cardinality.maximum > 1) {\n      return loc('enroll.choices.cardinality.setup.remaining', 'login', [cardinality.enrolled, cardinality.minimum]);\n    }\n  }\n  return '';\n};\nfn.findFactorInFactorsArray = function (factors, provider, factorType) {\n  let factor = factors.findWhere({\n    provider: provider,\n    factorType: factorType\n  });\n  if (factor === undefined) {\n    //for factors that support cardinality and only have factorType\n    factor = factors.findWhere({\n      factorType: factorType\n    });\n  }\n  return factor;\n};\nexport { fn as default };","map":{"version":3,"names":["loc","oktaUnderscore","TimeUtil","fn","factorData","OKTA_VERIFY","label","description","iconClassName","sortOrder","OKTA_VERIFY_PUSH","U2F","brandName","WEBAUTHN","WINDOWS_HELLO","YUBIKEY","GOOGLE_AUTH","CUSTOM_HOTP","SMS","CALL","EMAIL","QUESTION","DUO","SYMANTEC_VIP","RSA_SECURID","ON_PREM","PASSWORD","CUSTOM_CLAIMS","GENERIC_SAML","GENERIC_OIDC","getPasswordComplexityRequirementsAsArray","policy","i18nKeys","setExcludeAttributes","policyComplexity","excludeAttributes","excludeFirstName","contains","excludeLastName","omit","complexity","complexityFields","requirements","map","complexityValue","complexityType","params","args","i18n","compact","getPasswordHistoryRequirementDescription","age","historyCount","history","getPasswordAgeRequirementDescription","getPasswordAgeRequirement","displayableTime","propertiesString","unit","days","hours","minutes","time","minAgeMinutes","getTimeInHighestRelevantUnit","getPasswordRequirements","passwordRequirements","historyRequirement","push","ageRequirement","getFactorName","provider","factorType","getFactorNameForFactorType","call","settings","get","isOktaVerify","getFactorLabel","key","apply","getFactorDescription","descriptionKey","isFunction","getFactorIconClassName","getFactorSortOrder","getRememberDeviceValue","appState","getSecurityQuestionLabel","questionObj","localizedQuestion","question","indexOf","questionText","removeRequirementsFromError","responseJSON","passwordRequirementsAsString","getPasswordComplexityDescription","errorCauses","length","isString","errorSummary","replace","trim","getPasswordComplexityDescriptionForHtmlList","passwordRequirementHtmlI18nKeys","minLength","minLowerCase","minUpperCase","minNumber","minSymbol","excludeUsername","union","passwordRequirementI18nKeys","result","reduce","requirement","join","getCardinalityText","enrolled","required","cardinality","maximum","minimum","findFactorInFactorsArray","factors","factor","findWhere","undefined","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/util/FactorUtil.js"],"sourcesContent":["import { loc } from '../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport TimeUtil from './TimeUtil.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nconst fn = {};\nconst factorData = {\n  OKTA_VERIFY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.oktaVerify',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  OKTA_VERIFY_PUSH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.oktaVerifyPush',\n    description: 'factor.push.description',\n    iconClassName: 'mfa-okta-verify',\n    sortOrder: 1\n  },\n  U2F: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.u2f',\n    description: brandName => {\n      return brandName ? 'factor.u2f.description.specific' : 'factor.u2f.description.generic';\n    },\n    iconClassName: 'mfa-u2f',\n    sortOrder: 2\n  },\n  WEBAUTHN: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.webauthn.biometric',\n    description: 'factor.webauthn.biometric.description',\n    iconClassName: 'mfa-webauthn',\n    sortOrder: 2\n  },\n  WINDOWS_HELLO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.windowsHello',\n    description: brandName => {\n      return brandName ? 'factor.windowsHello.signin.description.specific' : 'factor.windowsHello.signin.description.generic';\n    },\n    iconClassName: 'mfa-windows-hello',\n    sortOrder: 3\n  },\n  YUBIKEY: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.yubikey',\n    description: 'factor.totpHard.yubikey.description',\n    iconClassName: 'mfa-yubikey',\n    sortOrder: 4\n  },\n  GOOGLE_AUTH: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpSoft.googleAuthenticator',\n    description: 'factor.totpSoft.description',\n    iconClassName: 'mfa-google-auth',\n    sortOrder: 5\n  },\n  CUSTOM_HOTP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.hotp.description',\n    iconClassName: 'mfa-hotp',\n    sortOrder: 6\n  },\n  SMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.sms',\n    description: 'factor.sms.description',\n    iconClassName: 'mfa-okta-sms',\n    sortOrder: 7\n  },\n  CALL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.call',\n    description: 'factor.call.description',\n    iconClassName: 'mfa-okta-call',\n    sortOrder: 8\n  },\n  EMAIL: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.email',\n    description: 'factor.email.description',\n    iconClassName: 'mfa-okta-email',\n    sortOrder: 9\n  },\n  QUESTION: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.securityQuestion',\n    description: 'factor.securityQuestion.description',\n    iconClassName: 'mfa-okta-security-question',\n    sortOrder: 10\n  },\n  DUO: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.duo',\n    description: 'factor.duo.description',\n    iconClassName: 'mfa-duo',\n    sortOrder: 11\n  },\n  SYMANTEC_VIP: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.symantecVip',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-symantec',\n    sortOrder: 12\n  },\n  RSA_SECURID: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.totpHard.rsaSecurId',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-rsa',\n    sortOrder: 13\n  },\n  ON_PREM: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.totpHard.description',\n    iconClassName: 'mfa-onprem',\n    sortOrder: 14\n  },\n  PASSWORD: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: 'factor.password',\n    description: '',\n    iconClassName: 'mfa-okta-password',\n    sortOrder: 15\n  },\n  CUSTOM_CLAIMS: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: 'factor.customFactor.description',\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 16\n  },\n  GENERIC_SAML: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 17\n  },\n  GENERIC_OIDC: {\n    /* eslint-disable-next-line @okta/okta/no-unlocalized-text */\n    label: '',\n    description: brandName => {\n      return brandName ? 'factor.customFactor.description.specific' : 'factor.customFactor.description.generic';\n    },\n    iconClassName: 'mfa-custom-factor',\n    sortOrder: 18\n  }\n};\n\nconst getPasswordComplexityRequirementsAsArray = function (policy, i18nKeys) {\n  const setExcludeAttributes = function (policyComplexity) {\n    const excludeAttributes = policyComplexity.excludeAttributes;\n    policyComplexity.excludeFirstName = oktaUnderscore.contains(excludeAttributes, 'firstName');\n    policyComplexity.excludeLastName = oktaUnderscore.contains(excludeAttributes, 'lastName');\n    return oktaUnderscore.omit(policyComplexity, 'excludeAttributes');\n  };\n\n  if (policy.complexity) {\n    const complexityFields = i18nKeys.complexity;\n    const policyComplexity = setExcludeAttributes(policy.complexity);\n\n    const requirements = oktaUnderscore.map(policyComplexity, function (complexityValue, complexityType) {\n      if (complexityValue <= 0) {\n        // to skip 0 and -1\n        return;\n      }\n\n      const params = complexityFields[complexityType];\n      return params.args ? loc(params.i18n, 'login', [complexityValue]) : loc(params.i18n, 'login');\n    });\n\n    return oktaUnderscore.compact(requirements);\n  }\n\n  return [];\n};\n\nconst getPasswordHistoryRequirementDescription = function (policy, i18nKeys) {\n  if (policy.age && policy.age.historyCount > 0) {\n    return loc(i18nKeys.history.i18n, 'login', [policy.age.historyCount]);\n  }\n\n  return null;\n};\n\nconst getPasswordAgeRequirementDescription = function (policy, i18nKeys) {\n  const getPasswordAgeRequirement = function (displayableTime) {\n    let propertiesString;\n\n    switch (displayableTime.unit) {\n      case 'DAY':\n        propertiesString = i18nKeys.age.days.i18n;\n        break;\n\n      case 'HOUR':\n        propertiesString = i18nKeys.age.hours.i18n;\n        break;\n\n      case 'MINUTE':\n        propertiesString = i18nKeys.age.minutes.i18n;\n    }\n\n    return loc(propertiesString, 'login', [displayableTime.time]);\n  };\n\n  if (policy.age && policy.age.minAgeMinutes > 0) {\n    const displayableTime = TimeUtil.getTimeInHighestRelevantUnit(policy.age.minAgeMinutes, 'MINUTE');\n    return getPasswordAgeRequirement(displayableTime);\n  }\n\n  return null;\n};\n\nconst getPasswordRequirements = function (policy, i18nKeys) {\n  const passwordRequirements = {\n    complexity: [],\n    history: [],\n    age: []\n  };\n  passwordRequirements.complexity = getPasswordComplexityRequirementsAsArray(policy, i18nKeys);\n  const historyRequirement = getPasswordHistoryRequirementDescription(policy, i18nKeys);\n\n  if (historyRequirement) {\n    passwordRequirements.history.push(historyRequirement);\n  }\n\n  const ageRequirement = getPasswordAgeRequirementDescription(policy, i18nKeys);\n\n  if (ageRequirement) {\n    passwordRequirements.age.push(ageRequirement);\n  }\n\n  return passwordRequirements;\n};\n\nfn.getFactorName = function (provider, factorType) {\n  if (provider === 'OKTA' && factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n\n  if (provider === 'OKTA' && factorType === 'push') {\n    return 'OKTA_VERIFY_PUSH';\n  }\n\n  if (provider === 'GOOGLE') {\n    return 'GOOGLE_AUTH';\n  }\n\n  if (provider === 'SYMANTEC' && factorType === 'token') {\n    return 'SYMANTEC_VIP';\n  }\n\n  if (provider === 'RSA' && factorType === 'token') {\n    return 'RSA_SECURID';\n  }\n\n  if (provider === 'DEL_OATH' && factorType === 'token') {\n    return 'ON_PREM';\n  }\n\n  if (provider === 'DUO' && factorType === 'web') {\n    return 'DUO';\n  }\n\n  if (provider === 'YUBICO' && factorType === 'token:hardware') {\n    return 'YUBIKEY';\n  }\n\n  if (provider === 'OKTA' && factorType === 'sms') {\n    return 'SMS';\n  }\n\n  if (provider === 'OKTA' && factorType === 'call') {\n    return 'CALL';\n  }\n\n  if (provider === 'OKTA' && factorType === 'question') {\n    return 'QUESTION';\n  }\n\n  if (provider === 'OKTA' && factorType === 'email') {\n    return 'EMAIL';\n  }\n\n  if (provider === 'OKTA' && factorType === 'password') {\n    return 'PASSWORD';\n  }\n\n  if (provider === 'GENERIC_SAML' && factorType === 'assertion:saml2') {\n    return 'GENERIC_SAML';\n  }\n\n  if (provider === 'GENERIC_OIDC' && factorType === 'assertion:oidc') {\n    return 'GENERIC_OIDC';\n  }\n\n  return fn.getFactorNameForFactorType.call(this, factorType);\n};\n\nfn.getFactorNameForFactorType = function (factorType) {\n  if (factorType === 'u2f') {\n    return 'U2F';\n  }\n\n  if (factorType === 'token:software:totp') {\n    return 'OKTA_VERIFY';\n  }\n\n  if (factorType === 'webauthn') {\n    if (this.settings.get('features.webauthn')) {\n      return 'WEBAUTHN';\n    } else {\n      return 'WINDOWS_HELLO';\n    }\n  }\n\n  if (factorType === 'token:hotp') {\n    return 'CUSTOM_HOTP';\n  }\n\n  if (factorType === 'claims_provider') {\n    return 'CUSTOM_CLAIMS';\n  }\n};\n\nfn.isOktaVerify = function (provider, factorType) {\n  return provider === 'OKTA' && (factorType === 'token:software:totp' || factorType === 'push');\n};\n\nfn.getFactorLabel = function (provider, factorType) {\n  const key = factorData[fn.getFactorName.apply(this, [provider, factorType])].label;\n  return loc(key, 'login');\n};\n\nfn.getFactorDescription = function (provider, factorType) {\n  const descriptionKey = factorData[fn.getFactorName.apply(this, [provider, factorType])].description;\n\n  if (oktaUnderscore.isFunction(descriptionKey)) {\n    const brandName = this.settings.get('brandName');\n    const key = descriptionKey(brandName);\n    return brandName ? loc(key, 'login', [brandName]) : loc(key, 'login');\n  } else {\n    return loc(descriptionKey, 'login');\n  }\n};\n\nfn.getFactorIconClassName = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].iconClassName;\n};\n\nfn.getFactorSortOrder = function (provider, factorType) {\n  return factorData[fn.getFactorName.apply(this, [provider, factorType])].sortOrder;\n};\n\nfn.getRememberDeviceValue = function (appState) {\n  return appState && appState.get('rememberDeviceByDefault');\n};\n\nfn.getSecurityQuestionLabel = function (questionObj) {\n  const localizedQuestion = loc('security.' + questionObj.question);\n  return localizedQuestion.indexOf('L10N_ERROR') < 0 ? localizedQuestion : questionObj.questionText;\n};\n\nfn.removeRequirementsFromError = function (responseJSON, policy) {\n  const passwordRequirementsAsString = this.getPasswordComplexityDescription(policy);\n\n  if (responseJSON.errorCauses && responseJSON.errorCauses.length > 0 && oktaUnderscore.isString(responseJSON.errorCauses[0].errorSummary)) {\n    responseJSON.errorCauses[0].errorSummary = responseJSON.errorCauses[0].errorSummary.replace(passwordRequirementsAsString, '').trim();\n  }\n\n  return responseJSON;\n};\n\nfn.getPasswordComplexityDescriptionForHtmlList = function (policy) {\n  const passwordRequirementHtmlI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length.description',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase.description'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase.description'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number.description'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol.description'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username.description'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name.description'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name.description'\n      }\n    },\n    history: {\n      i18n: 'password.complexity.history.description'\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes.description'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours.description'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays.description'\n      }\n    }\n  };\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementHtmlI18nKeys);\n  return oktaUnderscore.union(passwordRequirements.complexity, passwordRequirements.history, passwordRequirements.age);\n};\n\nfn.getPasswordComplexityDescription = function (policy) {\n  const passwordRequirementI18nKeys = {\n    complexity: {\n      minLength: {\n        i18n: 'password.complexity.length',\n        args: true\n      },\n      minLowerCase: {\n        i18n: 'password.complexity.lowercase'\n      },\n      minUpperCase: {\n        i18n: 'password.complexity.uppercase'\n      },\n      minNumber: {\n        i18n: 'password.complexity.number'\n      },\n      minSymbol: {\n        i18n: 'password.complexity.symbol'\n      },\n      excludeUsername: {\n        i18n: 'password.complexity.no_username'\n      },\n      excludeFirstName: {\n        i18n: 'password.complexity.no_first_name'\n      },\n      excludeLastName: {\n        i18n: 'password.complexity.no_last_name'\n      }\n    },\n    history: {\n      i18n: 'password.complexity.history'\n    },\n    age: {\n      minutes: {\n        i18n: 'password.complexity.minAgeMinutes'\n      },\n      hours: {\n        i18n: 'password.complexity.minAgeHours'\n      },\n      days: {\n        i18n: 'password.complexity.minAgeDays'\n      }\n    }\n  };\n  const result = [];\n  const passwordRequirements = getPasswordRequirements(policy, passwordRequirementI18nKeys);\n  let requirements = passwordRequirements.complexity; // Generate and add complexity string to result\n\n  if (requirements.length > 0) {\n    requirements = oktaUnderscore.reduce(requirements, function (result, requirement) {\n      return result ? result + loc('password.complexity.list.element', 'login', [requirement]) : requirement;\n    });\n    result.push(loc('password.complexity.requirements', 'login', [requirements]));\n  } // Only 1 value expected in history and age for now\n\n\n  result.push(passwordRequirements.history[0]);\n  result.push(passwordRequirements.age[0]);\n  return oktaUnderscore.compact(result).join(' ');\n};\n\nfn.getCardinalityText = function (enrolled, required, cardinality) {\n  if (cardinality) {\n    if (enrolled) {\n      return cardinality.enrolled === 1 ? '' : loc('enroll.choices.cardinality.setup', 'login', [cardinality.enrolled]);\n    } else if (required && cardinality.maximum > 1) {\n      return loc('enroll.choices.cardinality.setup.remaining', 'login', [cardinality.enrolled, cardinality.minimum]);\n    }\n  }\n\n  return '';\n};\n\nfn.findFactorInFactorsArray = function (factors, provider, factorType) {\n  let factor = factors.findWhere({\n    provider: provider,\n    factorType: factorType\n  });\n\n  if (factor === undefined) {\n    //for factors that support cardinality and only have factorType\n    factor = factors.findWhere({\n      factorType: factorType\n    });\n  }\n\n  return factor;\n};\n\nexport { fn as default };\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,qEAAqE;AACzF,OAAO,qFAAqF;AAC5F,OAAO,iFAAiF;AACxF,OAAO,oFAAoF;AAC3F,OAAO,kFAAkF;AACzF,OAAO,iFAAiF;AACxF,OAAO,sFAAsF;AAC7F,OAAO,4FAA4F;AACnG,OAAO,sEAAsE;AAC7E,OAAO,0EAA0E;AACjF,OAAO,0EAA0E;AACjF,OAAOC,cAAc,MAAM,8EAA8E;AACzG,OAAO,mEAAmE;AAC1E,OAAO,uEAAuE;AAC9E,OAAO,qEAAqE;AAC5E,OAAO,8EAA8E;AACrF,OAAOC,QAAQ,MAAM,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,EAAE,GAAG,CAAC,CAAC;AACb,MAAMC,UAAU,GAAG;EACjBC,WAAW,EAAE;IACX;IACAC,KAAK,EAAE,4BAA4B;IACnCC,WAAW,EAAE,6BAA6B;IAC1CC,aAAa,EAAE,iBAAiB;IAChCC,SAAS,EAAE;EACb,CAAC;EACDC,gBAAgB,EAAE;IAChB;IACAJ,KAAK,EAAE,uBAAuB;IAC9BC,WAAW,EAAE,yBAAyB;IACtCC,aAAa,EAAE,iBAAiB;IAChCC,SAAS,EAAE;EACb,CAAC;EACDE,GAAG,EAAE;IACH;IACAL,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAEK,SAAS,IAAI;MACxB,OAAOA,SAAS,GAAG,iCAAiC,GAAG,gCAAgC;IACzF,CAAC;IACDJ,aAAa,EAAE,SAAS;IACxBC,SAAS,EAAE;EACb,CAAC;EACDI,QAAQ,EAAE;IACR;IACAP,KAAK,EAAE,2BAA2B;IAClCC,WAAW,EAAE,uCAAuC;IACpDC,aAAa,EAAE,cAAc;IAC7BC,SAAS,EAAE;EACb,CAAC;EACDK,aAAa,EAAE;IACb;IACAR,KAAK,EAAE,qBAAqB;IAC5BC,WAAW,EAAEK,SAAS,IAAI;MACxB,OAAOA,SAAS,GAAG,iDAAiD,GAAG,gDAAgD;IACzH,CAAC;IACDJ,aAAa,EAAE,mBAAmB;IAClCC,SAAS,EAAE;EACb,CAAC;EACDM,OAAO,EAAE;IACP;IACAT,KAAK,EAAE,yBAAyB;IAChCC,WAAW,EAAE,qCAAqC;IAClDC,aAAa,EAAE,aAAa;IAC5BC,SAAS,EAAE;EACb,CAAC;EACDO,WAAW,EAAE;IACX;IACAV,KAAK,EAAE,qCAAqC;IAC5CC,WAAW,EAAE,6BAA6B;IAC1CC,aAAa,EAAE,iBAAiB;IAChCC,SAAS,EAAE;EACb,CAAC;EACDQ,WAAW,EAAE;IACX;IACAX,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,yBAAyB;IACtCC,aAAa,EAAE,UAAU;IACzBC,SAAS,EAAE;EACb,CAAC;EACDS,GAAG,EAAE;IACH;IACAZ,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,wBAAwB;IACrCC,aAAa,EAAE,cAAc;IAC7BC,SAAS,EAAE;EACb,CAAC;EACDU,IAAI,EAAE;IACJ;IACAb,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE,yBAAyB;IACtCC,aAAa,EAAE,eAAe;IAC9BC,SAAS,EAAE;EACb,CAAC;EACDW,KAAK,EAAE;IACL;IACAd,KAAK,EAAE,cAAc;IACrBC,WAAW,EAAE,0BAA0B;IACvCC,aAAa,EAAE,gBAAgB;IAC/BC,SAAS,EAAE;EACb,CAAC;EACDY,QAAQ,EAAE;IACR;IACAf,KAAK,EAAE,yBAAyB;IAChCC,WAAW,EAAE,qCAAqC;IAClDC,aAAa,EAAE,4BAA4B;IAC3CC,SAAS,EAAE;EACb,CAAC;EACDa,GAAG,EAAE;IACH;IACAhB,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,wBAAwB;IACrCC,aAAa,EAAE,SAAS;IACxBC,SAAS,EAAE;EACb,CAAC;EACDc,YAAY,EAAE;IACZ;IACAjB,KAAK,EAAE,6BAA6B;IACpCC,WAAW,EAAE,6BAA6B;IAC1CC,aAAa,EAAE,cAAc;IAC7BC,SAAS,EAAE;EACb,CAAC;EACDe,WAAW,EAAE;IACX;IACAlB,KAAK,EAAE,4BAA4B;IACnCC,WAAW,EAAE,6BAA6B;IAC1CC,aAAa,EAAE,SAAS;IACxBC,SAAS,EAAE;EACb,CAAC;EACDgB,OAAO,EAAE;IACP;IACAnB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,6BAA6B;IAC1CC,aAAa,EAAE,YAAY;IAC3BC,SAAS,EAAE;EACb,CAAC;EACDiB,QAAQ,EAAE;IACR;IACApB,KAAK,EAAE,iBAAiB;IACxBC,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,mBAAmB;IAClCC,SAAS,EAAE;EACb,CAAC;EACDkB,aAAa,EAAE;IACb;IACArB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,iCAAiC;IAC9CC,aAAa,EAAE,mBAAmB;IAClCC,SAAS,EAAE;EACb,CAAC;EACDmB,YAAY,EAAE;IACZ;IACAtB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAEK,SAAS,IAAI;MACxB,OAAOA,SAAS,GAAG,0CAA0C,GAAG,yCAAyC;IAC3G,CAAC;IACDJ,aAAa,EAAE,mBAAmB;IAClCC,SAAS,EAAE;EACb,CAAC;EACDoB,YAAY,EAAE;IACZ;IACAvB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAEK,SAAS,IAAI;MACxB,OAAOA,SAAS,GAAG,0CAA0C,GAAG,yCAAyC;IAC3G,CAAC;IACDJ,aAAa,EAAE,mBAAmB;IAClCC,SAAS,EAAE;EACb;AACF,CAAC;AAED,MAAMqB,wCAAwC,GAAG,SAAAA,CAAUC,MAAM,EAAEC,QAAQ,EAAE;EAC3E,MAAMC,oBAAoB,GAAG,SAAAA,CAAUC,gBAAgB,EAAE;IACvD,MAAMC,iBAAiB,GAAGD,gBAAgB,CAACC,iBAAiB;IAC5DD,gBAAgB,CAACE,gBAAgB,GAAGnC,cAAc,CAACoC,QAAQ,CAACF,iBAAiB,EAAE,WAAW,CAAC;IAC3FD,gBAAgB,CAACI,eAAe,GAAGrC,cAAc,CAACoC,QAAQ,CAACF,iBAAiB,EAAE,UAAU,CAAC;IACzF,OAAOlC,cAAc,CAACsC,IAAI,CAACL,gBAAgB,EAAE,mBAAmB,CAAC;EACnE,CAAC;EAED,IAAIH,MAAM,CAACS,UAAU,EAAE;IACrB,MAAMC,gBAAgB,GAAGT,QAAQ,CAACQ,UAAU;IAC5C,MAAMN,gBAAgB,GAAGD,oBAAoB,CAACF,MAAM,CAACS,UAAU,CAAC;IAEhE,MAAME,YAAY,GAAGzC,cAAc,CAAC0C,GAAG,CAACT,gBAAgB,EAAE,UAAUU,eAAe,EAAEC,cAAc,EAAE;MACnG,IAAID,eAAe,IAAI,CAAC,EAAE;QACxB;QACA;MACF;MAEA,MAAME,MAAM,GAAGL,gBAAgB,CAACI,cAAc,CAAC;MAC/C,OAAOC,MAAM,CAACC,IAAI,GAAG/C,GAAG,CAAC8C,MAAM,CAACE,IAAI,EAAE,OAAO,EAAE,CAACJ,eAAe,CAAC,CAAC,GAAG5C,GAAG,CAAC8C,MAAM,CAACE,IAAI,EAAE,OAAO,CAAC;IAC/F,CAAC,CAAC;IAEF,OAAO/C,cAAc,CAACgD,OAAO,CAACP,YAAY,CAAC;EAC7C;EAEA,OAAO,EAAE;AACX,CAAC;AAED,MAAMQ,wCAAwC,GAAG,SAAAA,CAAUnB,MAAM,EAAEC,QAAQ,EAAE;EAC3E,IAAID,MAAM,CAACoB,GAAG,IAAIpB,MAAM,CAACoB,GAAG,CAACC,YAAY,GAAG,CAAC,EAAE;IAC7C,OAAOpD,GAAG,CAACgC,QAAQ,CAACqB,OAAO,CAACL,IAAI,EAAE,OAAO,EAAE,CAACjB,MAAM,CAACoB,GAAG,CAACC,YAAY,CAAC,CAAC;EACvE;EAEA,OAAO,IAAI;AACb,CAAC;AAED,MAAME,oCAAoC,GAAG,SAAAA,CAAUvB,MAAM,EAAEC,QAAQ,EAAE;EACvE,MAAMuB,yBAAyB,GAAG,SAAAA,CAAUC,eAAe,EAAE;IAC3D,IAAIC,gBAAgB;IAEpB,QAAQD,eAAe,CAACE,IAAI;MAC1B,KAAK,KAAK;QACRD,gBAAgB,GAAGzB,QAAQ,CAACmB,GAAG,CAACQ,IAAI,CAACX,IAAI;QACzC;MAEF,KAAK,MAAM;QACTS,gBAAgB,GAAGzB,QAAQ,CAACmB,GAAG,CAACS,KAAK,CAACZ,IAAI;QAC1C;MAEF,KAAK,QAAQ;QACXS,gBAAgB,GAAGzB,QAAQ,CAACmB,GAAG,CAACU,OAAO,CAACb,IAAI;IAChD;IAEA,OAAOhD,GAAG,CAACyD,gBAAgB,EAAE,OAAO,EAAE,CAACD,eAAe,CAACM,IAAI,CAAC,CAAC;EAC/D,CAAC;EAED,IAAI/B,MAAM,CAACoB,GAAG,IAAIpB,MAAM,CAACoB,GAAG,CAACY,aAAa,GAAG,CAAC,EAAE;IAC9C,MAAMP,eAAe,GAAGtD,QAAQ,CAAC8D,4BAA4B,CAACjC,MAAM,CAACoB,GAAG,CAACY,aAAa,EAAE,QAAQ,CAAC;IACjG,OAAOR,yBAAyB,CAACC,eAAe,CAAC;EACnD;EAEA,OAAO,IAAI;AACb,CAAC;AAED,MAAMS,uBAAuB,GAAG,SAAAA,CAAUlC,MAAM,EAAEC,QAAQ,EAAE;EAC1D,MAAMkC,oBAAoB,GAAG;IAC3B1B,UAAU,EAAE,EAAE;IACda,OAAO,EAAE,EAAE;IACXF,GAAG,EAAE;EACP,CAAC;EACDe,oBAAoB,CAAC1B,UAAU,GAAGV,wCAAwC,CAACC,MAAM,EAAEC,QAAQ,CAAC;EAC5F,MAAMmC,kBAAkB,GAAGjB,wCAAwC,CAACnB,MAAM,EAAEC,QAAQ,CAAC;EAErF,IAAImC,kBAAkB,EAAE;IACtBD,oBAAoB,CAACb,OAAO,CAACe,IAAI,CAACD,kBAAkB,CAAC;EACvD;EAEA,MAAME,cAAc,GAAGf,oCAAoC,CAACvB,MAAM,EAAEC,QAAQ,CAAC;EAE7E,IAAIqC,cAAc,EAAE;IAClBH,oBAAoB,CAACf,GAAG,CAACiB,IAAI,CAACC,cAAc,CAAC;EAC/C;EAEA,OAAOH,oBAAoB;AAC7B,CAAC;AAED/D,EAAE,CAACmE,aAAa,GAAG,UAAUC,QAAQ,EAAEC,UAAU,EAAE;EACjD,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,qBAAqB,EAAE;IAC/D,OAAO,aAAa;EACtB;EAEA,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,MAAM,EAAE;IAChD,OAAO,kBAAkB;EAC3B;EAEA,IAAID,QAAQ,KAAK,QAAQ,EAAE;IACzB,OAAO,aAAa;EACtB;EAEA,IAAIA,QAAQ,KAAK,UAAU,IAAIC,UAAU,KAAK,OAAO,EAAE;IACrD,OAAO,cAAc;EACvB;EAEA,IAAID,QAAQ,KAAK,KAAK,IAAIC,UAAU,KAAK,OAAO,EAAE;IAChD,OAAO,aAAa;EACtB;EAEA,IAAID,QAAQ,KAAK,UAAU,IAAIC,UAAU,KAAK,OAAO,EAAE;IACrD,OAAO,SAAS;EAClB;EAEA,IAAID,QAAQ,KAAK,KAAK,IAAIC,UAAU,KAAK,KAAK,EAAE;IAC9C,OAAO,KAAK;EACd;EAEA,IAAID,QAAQ,KAAK,QAAQ,IAAIC,UAAU,KAAK,gBAAgB,EAAE;IAC5D,OAAO,SAAS;EAClB;EAEA,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,KAAK,EAAE;IAC/C,OAAO,KAAK;EACd;EAEA,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,MAAM,EAAE;IAChD,OAAO,MAAM;EACf;EAEA,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,UAAU,EAAE;IACpD,OAAO,UAAU;EACnB;EAEA,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,OAAO,EAAE;IACjD,OAAO,OAAO;EAChB;EAEA,IAAID,QAAQ,KAAK,MAAM,IAAIC,UAAU,KAAK,UAAU,EAAE;IACpD,OAAO,UAAU;EACnB;EAEA,IAAID,QAAQ,KAAK,cAAc,IAAIC,UAAU,KAAK,iBAAiB,EAAE;IACnE,OAAO,cAAc;EACvB;EAEA,IAAID,QAAQ,KAAK,cAAc,IAAIC,UAAU,KAAK,gBAAgB,EAAE;IAClE,OAAO,cAAc;EACvB;EAEA,OAAOrE,EAAE,CAACsE,0BAA0B,CAACC,IAAI,CAAC,IAAI,EAAEF,UAAU,CAAC;AAC7D,CAAC;AAEDrE,EAAE,CAACsE,0BAA0B,GAAG,UAAUD,UAAU,EAAE;EACpD,IAAIA,UAAU,KAAK,KAAK,EAAE;IACxB,OAAO,KAAK;EACd;EAEA,IAAIA,UAAU,KAAK,qBAAqB,EAAE;IACxC,OAAO,aAAa;EACtB;EAEA,IAAIA,UAAU,KAAK,UAAU,EAAE;IAC7B,IAAI,IAAI,CAACG,QAAQ,CAACC,GAAG,CAAC,mBAAmB,CAAC,EAAE;MAC1C,OAAO,UAAU;IACnB,CAAC,MAAM;MACL,OAAO,eAAe;IACxB;EACF;EAEA,IAAIJ,UAAU,KAAK,YAAY,EAAE;IAC/B,OAAO,aAAa;EACtB;EAEA,IAAIA,UAAU,KAAK,iBAAiB,EAAE;IACpC,OAAO,eAAe;EACxB;AACF,CAAC;AAEDrE,EAAE,CAAC0E,YAAY,GAAG,UAAUN,QAAQ,EAAEC,UAAU,EAAE;EAChD,OAAOD,QAAQ,KAAK,MAAM,KAAKC,UAAU,KAAK,qBAAqB,IAAIA,UAAU,KAAK,MAAM,CAAC;AAC/F,CAAC;AAEDrE,EAAE,CAAC2E,cAAc,GAAG,UAAUP,QAAQ,EAAEC,UAAU,EAAE;EAClD,MAAMO,GAAG,GAAG3E,UAAU,CAACD,EAAE,CAACmE,aAAa,CAACU,KAAK,CAAC,IAAI,EAAE,CAACT,QAAQ,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAClE,KAAK;EAClF,OAAON,GAAG,CAAC+E,GAAG,EAAE,OAAO,CAAC;AAC1B,CAAC;AAED5E,EAAE,CAAC8E,oBAAoB,GAAG,UAAUV,QAAQ,EAAEC,UAAU,EAAE;EACxD,MAAMU,cAAc,GAAG9E,UAAU,CAACD,EAAE,CAACmE,aAAa,CAACU,KAAK,CAAC,IAAI,EAAE,CAACT,QAAQ,EAAEC,UAAU,CAAC,CAAC,CAAC,CAACjE,WAAW;EAEnG,IAAIN,cAAc,CAACkF,UAAU,CAACD,cAAc,CAAC,EAAE;IAC7C,MAAMtE,SAAS,GAAG,IAAI,CAAC+D,QAAQ,CAACC,GAAG,CAAC,WAAW,CAAC;IAChD,MAAMG,GAAG,GAAGG,cAAc,CAACtE,SAAS,CAAC;IACrC,OAAOA,SAAS,GAAGZ,GAAG,CAAC+E,GAAG,EAAE,OAAO,EAAE,CAACnE,SAAS,CAAC,CAAC,GAAGZ,GAAG,CAAC+E,GAAG,EAAE,OAAO,CAAC;EACvE,CAAC,MAAM;IACL,OAAO/E,GAAG,CAACkF,cAAc,EAAE,OAAO,CAAC;EACrC;AACF,CAAC;AAED/E,EAAE,CAACiF,sBAAsB,GAAG,UAAUb,QAAQ,EAAEC,UAAU,EAAE;EAC1D,OAAOpE,UAAU,CAACD,EAAE,CAACmE,aAAa,CAACU,KAAK,CAAC,IAAI,EAAE,CAACT,QAAQ,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAChE,aAAa;AACvF,CAAC;AAEDL,EAAE,CAACkF,kBAAkB,GAAG,UAAUd,QAAQ,EAAEC,UAAU,EAAE;EACtD,OAAOpE,UAAU,CAACD,EAAE,CAACmE,aAAa,CAACU,KAAK,CAAC,IAAI,EAAE,CAACT,QAAQ,EAAEC,UAAU,CAAC,CAAC,CAAC,CAAC/D,SAAS;AACnF,CAAC;AAEDN,EAAE,CAACmF,sBAAsB,GAAG,UAAUC,QAAQ,EAAE;EAC9C,OAAOA,QAAQ,IAAIA,QAAQ,CAACX,GAAG,CAAC,yBAAyB,CAAC;AAC5D,CAAC;AAEDzE,EAAE,CAACqF,wBAAwB,GAAG,UAAUC,WAAW,EAAE;EACnD,MAAMC,iBAAiB,GAAG1F,GAAG,CAAC,WAAW,GAAGyF,WAAW,CAACE,QAAQ,CAAC;EACjE,OAAOD,iBAAiB,CAACE,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,GAAGF,iBAAiB,GAAGD,WAAW,CAACI,YAAY;AACnG,CAAC;AAED1F,EAAE,CAAC2F,2BAA2B,GAAG,UAAUC,YAAY,EAAEhE,MAAM,EAAE;EAC/D,MAAMiE,4BAA4B,GAAG,IAAI,CAACC,gCAAgC,CAAClE,MAAM,CAAC;EAElF,IAAIgE,YAAY,CAACG,WAAW,IAAIH,YAAY,CAACG,WAAW,CAACC,MAAM,GAAG,CAAC,IAAIlG,cAAc,CAACmG,QAAQ,CAACL,YAAY,CAACG,WAAW,CAAC,CAAC,CAAC,CAACG,YAAY,CAAC,EAAE;IACxIN,YAAY,CAACG,WAAW,CAAC,CAAC,CAAC,CAACG,YAAY,GAAGN,YAAY,CAACG,WAAW,CAAC,CAAC,CAAC,CAACG,YAAY,CAACC,OAAO,CAACN,4BAA4B,EAAE,EAAE,CAAC,CAACO,IAAI,CAAC,CAAC;EACtI;EAEA,OAAOR,YAAY;AACrB,CAAC;AAED5F,EAAE,CAACqG,2CAA2C,GAAG,UAAUzE,MAAM,EAAE;EACjE,MAAM0E,+BAA+B,GAAG;IACtCjE,UAAU,EAAE;MACVkE,SAAS,EAAE;QACT1D,IAAI,EAAE,wCAAwC;QAC9CD,IAAI,EAAE;MACR,CAAC;MACD4D,YAAY,EAAE;QACZ3D,IAAI,EAAE;MACR,CAAC;MACD4D,YAAY,EAAE;QACZ5D,IAAI,EAAE;MACR,CAAC;MACD6D,SAAS,EAAE;QACT7D,IAAI,EAAE;MACR,CAAC;MACD8D,SAAS,EAAE;QACT9D,IAAI,EAAE;MACR,CAAC;MACD+D,eAAe,EAAE;QACf/D,IAAI,EAAE;MACR,CAAC;MACDZ,gBAAgB,EAAE;QAChBY,IAAI,EAAE;MACR,CAAC;MACDV,eAAe,EAAE;QACfU,IAAI,EAAE;MACR;IACF,CAAC;IACDK,OAAO,EAAE;MACPL,IAAI,EAAE;IACR,CAAC;IACDG,GAAG,EAAE;MACHU,OAAO,EAAE;QACPb,IAAI,EAAE;MACR,CAAC;MACDY,KAAK,EAAE;QACLZ,IAAI,EAAE;MACR,CAAC;MACDW,IAAI,EAAE;QACJX,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACD,MAAMkB,oBAAoB,GAAGD,uBAAuB,CAAClC,MAAM,EAAE0E,+BAA+B,CAAC;EAC7F,OAAOxG,cAAc,CAAC+G,KAAK,CAAC9C,oBAAoB,CAAC1B,UAAU,EAAE0B,oBAAoB,CAACb,OAAO,EAAEa,oBAAoB,CAACf,GAAG,CAAC;AACtH,CAAC;AAEDhD,EAAE,CAAC8F,gCAAgC,GAAG,UAAUlE,MAAM,EAAE;EACtD,MAAMkF,2BAA2B,GAAG;IAClCzE,UAAU,EAAE;MACVkE,SAAS,EAAE;QACT1D,IAAI,EAAE,4BAA4B;QAClCD,IAAI,EAAE;MACR,CAAC;MACD4D,YAAY,EAAE;QACZ3D,IAAI,EAAE;MACR,CAAC;MACD4D,YAAY,EAAE;QACZ5D,IAAI,EAAE;MACR,CAAC;MACD6D,SAAS,EAAE;QACT7D,IAAI,EAAE;MACR,CAAC;MACD8D,SAAS,EAAE;QACT9D,IAAI,EAAE;MACR,CAAC;MACD+D,eAAe,EAAE;QACf/D,IAAI,EAAE;MACR,CAAC;MACDZ,gBAAgB,EAAE;QAChBY,IAAI,EAAE;MACR,CAAC;MACDV,eAAe,EAAE;QACfU,IAAI,EAAE;MACR;IACF,CAAC;IACDK,OAAO,EAAE;MACPL,IAAI,EAAE;IACR,CAAC;IACDG,GAAG,EAAE;MACHU,OAAO,EAAE;QACPb,IAAI,EAAE;MACR,CAAC;MACDY,KAAK,EAAE;QACLZ,IAAI,EAAE;MACR,CAAC;MACDW,IAAI,EAAE;QACJX,IAAI,EAAE;MACR;IACF;EACF,CAAC;EACD,MAAMkE,MAAM,GAAG,EAAE;EACjB,MAAMhD,oBAAoB,GAAGD,uBAAuB,CAAClC,MAAM,EAAEkF,2BAA2B,CAAC;EACzF,IAAIvE,YAAY,GAAGwB,oBAAoB,CAAC1B,UAAU,CAAC,CAAC;;EAEpD,IAAIE,YAAY,CAACyD,MAAM,GAAG,CAAC,EAAE;IAC3BzD,YAAY,GAAGzC,cAAc,CAACkH,MAAM,CAACzE,YAAY,EAAE,UAAUwE,MAAM,EAAEE,WAAW,EAAE;MAChF,OAAOF,MAAM,GAAGA,MAAM,GAAGlH,GAAG,CAAC,kCAAkC,EAAE,OAAO,EAAE,CAACoH,WAAW,CAAC,CAAC,GAAGA,WAAW;IACxG,CAAC,CAAC;IACFF,MAAM,CAAC9C,IAAI,CAACpE,GAAG,CAAC,kCAAkC,EAAE,OAAO,EAAE,CAAC0C,YAAY,CAAC,CAAC,CAAC;EAC/E,CAAC,CAAC;;EAGFwE,MAAM,CAAC9C,IAAI,CAACF,oBAAoB,CAACb,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5C6D,MAAM,CAAC9C,IAAI,CAACF,oBAAoB,CAACf,GAAG,CAAC,CAAC,CAAC,CAAC;EACxC,OAAOlD,cAAc,CAACgD,OAAO,CAACiE,MAAM,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;AACjD,CAAC;AAEDlH,EAAE,CAACmH,kBAAkB,GAAG,UAAUC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,EAAE;EACjE,IAAIA,WAAW,EAAE;IACf,IAAIF,QAAQ,EAAE;MACZ,OAAOE,WAAW,CAACF,QAAQ,KAAK,CAAC,GAAG,EAAE,GAAGvH,GAAG,CAAC,kCAAkC,EAAE,OAAO,EAAE,CAACyH,WAAW,CAACF,QAAQ,CAAC,CAAC;IACnH,CAAC,MAAM,IAAIC,QAAQ,IAAIC,WAAW,CAACC,OAAO,GAAG,CAAC,EAAE;MAC9C,OAAO1H,GAAG,CAAC,4CAA4C,EAAE,OAAO,EAAE,CAACyH,WAAW,CAACF,QAAQ,EAAEE,WAAW,CAACE,OAAO,CAAC,CAAC;IAChH;EACF;EAEA,OAAO,EAAE;AACX,CAAC;AAEDxH,EAAE,CAACyH,wBAAwB,GAAG,UAAUC,OAAO,EAAEtD,QAAQ,EAAEC,UAAU,EAAE;EACrE,IAAIsD,MAAM,GAAGD,OAAO,CAACE,SAAS,CAAC;IAC7BxD,QAAQ,EAAEA,QAAQ;IAClBC,UAAU,EAAEA;EACd,CAAC,CAAC;EAEF,IAAIsD,MAAM,KAAKE,SAAS,EAAE;IACxB;IACAF,MAAM,GAAGD,OAAO,CAACE,SAAS,CAAC;MACzBvD,UAAU,EAAEA;IACd,CAAC,CAAC;EACJ;EAEA,OAAOsD,MAAM;AACf,CAAC;AAED,SAAS3H,EAAE,IAAI8H,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}