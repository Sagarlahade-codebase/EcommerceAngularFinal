{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../idx/types/api.js';\nimport { EVENT_EXPIRED } from '../types/TokenManager.js';\nimport '../myaccount/types.js';\nimport { isBrowser } from '../features.js';\nclass AutoRenewService {\n  constructor(tokenManager, options = {}) {\n    this.started = false;\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  shouldThrottleRenew() {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      const firstTime = this.renewTimeQueue.shift();\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = lastTime - firstTime < 30 * 1000;\n    }\n    return res;\n  }\n  requiresLeadership() {\n    return !!this.options.syncStorage && isBrowser();\n  }\n  onTokenExpiredHandler(key) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {});\n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n  canStart() {\n    return !!this.options.autoRenew || !!this.options.autoRemove;\n  }\n  start() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.canStart()) {\n        yield _this.stop();\n        _this.tokenManager.on(EVENT_EXPIRED, _this.onTokenExpiredHandler);\n        _this.started = true;\n      }\n    })();\n  }\n  stop() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.started) {\n        _this2.tokenManager.off(EVENT_EXPIRED, _this2.onTokenExpiredHandler);\n        _this2.renewTimeQueue = [];\n        _this2.started = false;\n      }\n    })();\n  }\n  isStarted() {\n    return this.started;\n  }\n}\nexport { AutoRenewService };","map":{"version":3,"names":["AuthSdkError","EVENT_EXPIRED","isBrowser","AutoRenewService","constructor","tokenManager","options","started","renewTimeQueue","onTokenExpiredHandler","bind","shouldThrottleRenew","res","push","Date","now","length","firstTime","shift","lastTime","requiresLeadership","syncStorage","key","autoRenew","error","emitError","renew","catch","autoRemove","remove","canStart","start","_this","_asyncToGenerator","stop","on","_this2","off","isStarted"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/services/AutoRenewService.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport '../idx/types/api.js';\nimport { EVENT_EXPIRED } from '../types/TokenManager.js';\nimport '../myaccount/types.js';\nimport { isBrowser } from '../features.js';\n\nclass AutoRenewService {\n    constructor(tokenManager, options = {}) {\n        this.started = false;\n        this.tokenManager = tokenManager;\n        this.options = options;\n        this.renewTimeQueue = [];\n        this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n    }\n    shouldThrottleRenew() {\n        let res = false;\n        this.renewTimeQueue.push(Date.now());\n        if (this.renewTimeQueue.length >= 10) {\n            const firstTime = this.renewTimeQueue.shift();\n            const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n            res = (lastTime - firstTime) < 30 * 1000;\n        }\n        return res;\n    }\n    requiresLeadership() {\n        return !!this.options.syncStorage && isBrowser();\n    }\n    onTokenExpiredHandler(key) {\n        if (this.options.autoRenew) {\n            if (this.shouldThrottleRenew()) {\n                const error = new AuthSdkError('Too many token renew requests');\n                this.tokenManager.emitError(error);\n            }\n            else {\n                this.tokenManager.renew(key).catch(() => { });\n            }\n        }\n        else if (this.options.autoRemove) {\n            this.tokenManager.remove(key);\n        }\n    }\n    canStart() {\n        return (!!this.options.autoRenew || !!this.options.autoRemove);\n    }\n    async start() {\n        if (this.canStart()) {\n            await this.stop();\n            this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n            this.started = true;\n        }\n    }\n    async stop() {\n        if (this.started) {\n            this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n            this.renewTimeQueue = [];\n            this.started = false;\n        }\n    }\n    isStarted() {\n        return this.started;\n    }\n}\n\nexport { AutoRenewService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}