{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { stringToBase64Url } from '../../crypto/base64.js';\nimport { webcrypto as c } from '../../crypto/browser.js';\nimport { DEFAULT_CODE_CHALLENGE_METHOD, MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH } from '../../constants.js';\nfunction dec2hex(dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  c.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\nfunction generateVerifier(prefix) {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\nfunction computeChallenge(str) {\n  var buffer = new TextEncoder().encode(str);\n  return c.subtle.digest('SHA-256', buffer).then(function (arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n    var b64u = stringToBase64Url(hash);\n    return b64u;\n  });\n}\nvar PKCE = {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\nexport { PKCE as default };","map":{"version":3,"names":["stringToBase64Url","webcrypto","c","DEFAULT_CODE_CHALLENGE_METHOD","MIN_VERIFIER_LENGTH","MAX_VERIFIER_LENGTH","dec2hex","dec","toString","substr","getRandomString","length","a","Uint8Array","Math","ceil","getRandomValues","str","Array","from","join","slice","generateVerifier","prefix","verifier","encodeURIComponent","computeChallenge","buffer","TextEncoder","encode","subtle","digest","then","arrayBuffer","hash","String","fromCharCode","apply","b64u","PKCE","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/util/pkce.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { stringToBase64Url } from '../../crypto/base64.js';\nimport { webcrypto as c } from '../../crypto/browser.js';\nimport { DEFAULT_CODE_CHALLENGE_METHOD, MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH } from '../../constants.js';\n\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\nfunction getRandomString(length) {\n    var a = new Uint8Array(Math.ceil(length / 2));\n    c.getRandomValues(a);\n    var str = Array.from(a, dec2hex).join('');\n    return str.slice(0, length);\n}\nfunction generateVerifier(prefix) {\n    var verifier = prefix || '';\n    if (verifier.length < MIN_VERIFIER_LENGTH) {\n        verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n    }\n    return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\nfunction computeChallenge(str) {\n    var buffer = new TextEncoder().encode(str);\n    return c.subtle.digest('SHA-256', buffer).then(function (arrayBuffer) {\n        var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n        var b64u = stringToBase64Url(hash);\n        return b64u;\n    });\n}\nvar PKCE = {\n    DEFAULT_CODE_CHALLENGE_METHOD,\n    generateVerifier,\n    computeChallenge\n};\n\nexport { PKCE as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,SAAS,IAAIC,CAAC,QAAQ,yBAAyB;AACxD,SAASC,6BAA6B,EAAEC,mBAAmB,EAAEC,mBAAmB,QAAQ,oBAAoB;AAE5G,SAASC,OAAOA,CAACC,GAAG,EAAE;EAClB,OAAO,CAAC,GAAG,GAAGA,GAAG,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9C;AACA,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC7B,IAAIC,CAAC,GAAG,IAAIC,UAAU,CAACC,IAAI,CAACC,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,CAAC;EAC7CT,CAAC,CAACc,eAAe,CAACJ,CAAC,CAAC;EACpB,IAAIK,GAAG,GAAGC,KAAK,CAACC,IAAI,CAACP,CAAC,EAAEN,OAAO,CAAC,CAACc,IAAI,CAAC,EAAE,CAAC;EACzC,OAAOH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAEV,MAAM,CAAC;AAC/B;AACA,SAASW,gBAAgBA,CAACC,MAAM,EAAE;EAC9B,IAAIC,QAAQ,GAAGD,MAAM,IAAI,EAAE;EAC3B,IAAIC,QAAQ,CAACb,MAAM,GAAGP,mBAAmB,EAAE;IACvCoB,QAAQ,GAAGA,QAAQ,GAAGd,eAAe,CAACN,mBAAmB,GAAGoB,QAAQ,CAACb,MAAM,CAAC;EAChF;EACA,OAAOc,kBAAkB,CAACD,QAAQ,CAAC,CAACH,KAAK,CAAC,CAAC,EAAEhB,mBAAmB,CAAC;AACrE;AACA,SAASqB,gBAAgBA,CAACT,GAAG,EAAE;EAC3B,IAAIU,MAAM,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACZ,GAAG,CAAC;EAC1C,OAAOf,CAAC,CAAC4B,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEJ,MAAM,CAAC,CAACK,IAAI,CAAC,UAAUC,WAAW,EAAE;IAClE,IAAIC,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAE,IAAIxB,UAAU,CAACoB,WAAW,CAAC,CAAC;IACvE,IAAIK,IAAI,GAAGtC,iBAAiB,CAACkC,IAAI,CAAC;IAClC,OAAOI,IAAI;EACf,CAAC,CAAC;AACN;AACA,IAAIC,IAAI,GAAG;EACPpC,6BAA6B;EAC7BmB,gBAAgB;EAChBI;AACJ,CAAC;AAED,SAASa,IAAI,IAAIC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}