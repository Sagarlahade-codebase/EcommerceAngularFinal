{"ast":null,"code":"import { loc, internal } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport BaseLoginController from '../util/BaseLoginController.js';\nimport EmailMagicLinkForm from '../views/factor-verify/EmailMagicLinkForm.js';\nimport InlineTOTPForm from '../views/mfa-verify/InlineTOTPForm.js';\nimport PassCodeForm from '../views/mfa-verify/PassCodeForm.js';\nimport PasswordForm from '../views/mfa-verify/PasswordForm.js';\nimport PushForm from '../views/mfa-verify/PushForm.js';\nimport SecurityQuestionForm from '../views/mfa-verify/SecurityQuestionForm.js';\nimport SendEmailAndVerifyCodeFormVerifyEmailCodeForm from '../views/mfa-verify/SendEmailAndVerifyCodeForm.js';\nimport TOTPForm from '../views/mfa-verify/TOTPForm.js';\nimport YubikeyForm from '../views/mfa-verify/YubikeyForm.js';\nimport FooterMFA from '../views/shared/FooterMFA.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nlet {\n  CheckBox: CheckBox\n} = internal.views.forms.inputs;\nvar MfaVerifyController = BaseLoginController.extend({\n  className: 'mfa-verify',\n  initialize: function (options) {\n    const factorType = options.factorType;\n    let View;\n    switch (factorType) {\n      case 'question':\n        View = SecurityQuestionForm;\n        break;\n      case 'email':\n        if (this.options.appState.get('isIdxStateToken')) {\n          View = EmailMagicLinkForm;\n        } else {\n          View = SendEmailAndVerifyCodeFormVerifyEmailCodeForm;\n        }\n        break;\n      case 'sms':\n      case 'call':\n        View = PassCodeForm;\n        break;\n      case 'token':\n      case 'token:software:totp':\n      case 'token:hotp':\n        View = TOTPForm;\n        break;\n      case 'token:hardware':\n        View = YubikeyForm;\n        break;\n      case 'push':\n        View = PushForm;\n        break;\n      case 'password':\n        View = PasswordForm;\n        break;\n      default:\n        throw new Error('Unrecognized factor type');\n    }\n    this.model = this.findModel(factorType, options);\n    if (!this.model) {\n      // TODO: recover from this more gracefully - probably to redirect\n      // to default factor\n      throw new Error('Unrecognized factor/provider');\n    }\n    this.addListeners();\n    this.add(new View(this.toJSON())); // If Okta Verify Push and Okta Verify totp are both enabled,\n    // then we show Push first, and totp is the \"backup\" factor,\n    // which is rendered in an additional InlineTOTPForm\n\n    if (factorType === 'push' && this.model.get('isOktaFactor')) {\n      if (this.model.get('backupFactor')) {\n        this.inlineTotpForm = this.add(InlineTOTPForm, {\n          options: {\n            model: this.model.get('backupFactor')\n          }\n        }).last();\n      }\n      if (this.settings.get('features.autoPush')) {\n        this.autoPushCheckBox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'autoPush',\n            placeholder: loc('autoPush', 'login'),\n            label: false,\n            'label-top': false,\n            className: 'margin-btm-0'\n          }\n        }).last();\n      } // Remember Device checkbox resides outside of the Push and TOTP forms.\n\n      if (this.options.appState.get('allowRememberDevice')) {\n        this.rememberDeviceCheckbox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'rememberDevice',\n            placeholder: this.options.appState.get('rememberDeviceLabel'),\n            label: false,\n            'label-top': true,\n            className: 'margin-btm-0'\n          }\n        }).last();\n      } // Set rememberDevice on the backup factor (totp) if available\n\n      if (this.model.get('backupFactor')) {\n        this.listenTo(this.model, 'change:rememberDevice', function (model, rememberDevice) {\n          model.get('backupFactor').set('rememberDevice', rememberDevice);\n        });\n      }\n    }\n    this.listenTo(this.options.appState, 'change:isWaitingForNumberChallenge', function (state, isWaitingForNumberChallenge) {\n      if (isWaitingForNumberChallenge || this.options.appState.get('lastAuthResponse').status === 'SUCCESS') {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.hide();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.hide();\n        this.inlineTotpForm && this.inlineTotpForm.$el.hide();\n      } else {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.show();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.show();\n        this.inlineTotpForm && this.inlineTotpForm.$el.show();\n      }\n    });\n    this.add(new FooterMFA(this.toJSON()));\n  },\n  findModel: function (factorType, options) {\n    const factors = options.appState.get('factors');\n    const provider = options.provider;\n    const factorIndex = options.factorIndex;\n    if (!provider) {\n      return factors.findWhere({\n        factorType: factorType,\n        isFactorTypeVerification: true\n      });\n    } else if (factors.hasMultipleFactorsOfSameType(factorType) && factorIndex) {\n      return factors.getFactorByTypeAndIndex(factorType, factorIndex);\n    } else {\n      return factors.findWhere({\n        provider: provider,\n        factorType: factorType\n      });\n    }\n  },\n  trapAuthResponse: function () {\n    if (this.options.appState.get('isMfaRequired') && this.options.appState.get('trapMfaRequiredResponse') || this.options.appState.get('isMfaChallenge')) {\n      this.options.appState.set('trapMfaRequiredResponse', false);\n      return true;\n    }\n    return false;\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  }\n});\nexport { MfaVerifyController as default };","map":{"version":3,"names":["loc","internal","BaseLoginController","EmailMagicLinkForm","InlineTOTPForm","PassCodeForm","PasswordForm","PushForm","SecurityQuestionForm","SendEmailAndVerifyCodeFormVerifyEmailCodeForm","TOTPForm","YubikeyForm","FooterMFA","CheckBox","views","forms","inputs","MfaVerifyController","extend","className","initialize","options","factorType","View","appState","get","Error","model","findModel","addListeners","add","toJSON","inlineTotpForm","last","settings","autoPushCheckBox","name","placeholder","label","rememberDeviceCheckbox","listenTo","rememberDevice","set","state","isWaitingForNumberChallenge","status","$el","hide","show","factors","provider","factorIndex","findWhere","isFactorTypeVerification","hasMultipleFactorsOfSameType","getFactorByTypeAndIndex","trapAuthResponse","back","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/MfaVerifyController.js"],"sourcesContent":["import { loc, internal } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport BaseLoginController from '../util/BaseLoginController.js';\nimport EmailMagicLinkForm from '../views/factor-verify/EmailMagicLinkForm.js';\nimport InlineTOTPForm from '../views/mfa-verify/InlineTOTPForm.js';\nimport PassCodeForm from '../views/mfa-verify/PassCodeForm.js';\nimport PasswordForm from '../views/mfa-verify/PasswordForm.js';\nimport PushForm from '../views/mfa-verify/PushForm.js';\nimport SecurityQuestionForm from '../views/mfa-verify/SecurityQuestionForm.js';\nimport SendEmailAndVerifyCodeFormVerifyEmailCodeForm from '../views/mfa-verify/SendEmailAndVerifyCodeForm.js';\nimport TOTPForm from '../views/mfa-verify/TOTPForm.js';\nimport YubikeyForm from '../views/mfa-verify/YubikeyForm.js';\nimport FooterMFA from '../views/shared/FooterMFA.js';\n\n/*!\n * Copyright (c) 2015-2016, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nlet {\n  CheckBox: CheckBox\n} = internal.views.forms.inputs;\nvar MfaVerifyController = BaseLoginController.extend({\n  className: 'mfa-verify',\n  initialize: function (options) {\n    const factorType = options.factorType;\n    let View;\n\n    switch (factorType) {\n      case 'question':\n        View = SecurityQuestionForm;\n        break;\n\n      case 'email':\n        if (this.options.appState.get('isIdxStateToken')) {\n          View = EmailMagicLinkForm;\n        } else {\n          View = SendEmailAndVerifyCodeFormVerifyEmailCodeForm;\n        }\n\n        break;\n\n      case 'sms':\n      case 'call':\n        View = PassCodeForm;\n        break;\n\n      case 'token':\n      case 'token:software:totp':\n      case 'token:hotp':\n        View = TOTPForm;\n        break;\n\n      case 'token:hardware':\n        View = YubikeyForm;\n        break;\n\n      case 'push':\n        View = PushForm;\n        break;\n\n      case 'password':\n        View = PasswordForm;\n        break;\n\n      default:\n        throw new Error('Unrecognized factor type');\n    }\n\n    this.model = this.findModel(factorType, options);\n\n    if (!this.model) {\n      // TODO: recover from this more gracefully - probably to redirect\n      // to default factor\n      throw new Error('Unrecognized factor/provider');\n    }\n\n    this.addListeners();\n    this.add(new View(this.toJSON())); // If Okta Verify Push and Okta Verify totp are both enabled,\n    // then we show Push first, and totp is the \"backup\" factor,\n    // which is rendered in an additional InlineTOTPForm\n\n    if (factorType === 'push' && this.model.get('isOktaFactor')) {\n      if (this.model.get('backupFactor')) {\n        this.inlineTotpForm = this.add(InlineTOTPForm, {\n          options: {\n            model: this.model.get('backupFactor')\n          }\n        }).last();\n      }\n\n      if (this.settings.get('features.autoPush')) {\n        this.autoPushCheckBox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'autoPush',\n            placeholder: loc('autoPush', 'login'),\n            label: false,\n            'label-top': false,\n            className: 'margin-btm-0'\n          }\n        }).last();\n      } // Remember Device checkbox resides outside of the Push and TOTP forms.\n\n\n      if (this.options.appState.get('allowRememberDevice')) {\n        this.rememberDeviceCheckbox = this.add(CheckBox, {\n          options: {\n            model: this.model,\n            name: 'rememberDevice',\n            placeholder: this.options.appState.get('rememberDeviceLabel'),\n            label: false,\n            'label-top': true,\n            className: 'margin-btm-0'\n          }\n        }).last();\n      } // Set rememberDevice on the backup factor (totp) if available\n\n\n      if (this.model.get('backupFactor')) {\n        this.listenTo(this.model, 'change:rememberDevice', function (model, rememberDevice) {\n          model.get('backupFactor').set('rememberDevice', rememberDevice);\n        });\n      }\n    }\n\n    this.listenTo(this.options.appState, 'change:isWaitingForNumberChallenge', function (state, isWaitingForNumberChallenge) {\n      if (isWaitingForNumberChallenge || this.options.appState.get('lastAuthResponse').status === 'SUCCESS') {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.hide();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.hide();\n        this.inlineTotpForm && this.inlineTotpForm.$el.hide();\n      } else {\n        this.autoPushCheckBox && this.autoPushCheckBox.$el.show();\n        this.rememberDeviceCheckbox && this.rememberDeviceCheckbox.$el.show();\n        this.inlineTotpForm && this.inlineTotpForm.$el.show();\n      }\n    });\n    this.add(new FooterMFA(this.toJSON()));\n  },\n  findModel: function (factorType, options) {\n    const factors = options.appState.get('factors');\n    const provider = options.provider;\n    const factorIndex = options.factorIndex;\n\n    if (!provider) {\n      return factors.findWhere({\n        factorType: factorType,\n        isFactorTypeVerification: true\n      });\n    } else if (factors.hasMultipleFactorsOfSameType(factorType) && factorIndex) {\n      return factors.getFactorByTypeAndIndex(factorType, factorIndex);\n    } else {\n      return factors.findWhere({\n        provider: provider,\n        factorType: factorType\n      });\n    }\n  },\n  trapAuthResponse: function () {\n    if (this.options.appState.get('isMfaRequired') && this.options.appState.get('trapMfaRequiredResponse') || this.options.appState.get('isMfaChallenge')) {\n      this.options.appState.set('trapMfaRequiredResponse', false);\n      return true;\n    }\n\n    return false;\n  },\n  back: function () {// Empty function on verify controllers to prevent users\n    // from navigating back during 'verify' using the browser's\n    // back button. The URL will still change, but the view will not\n    // More details in OKTA-135060.\n  }\n});\n\nexport { MfaVerifyController as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}