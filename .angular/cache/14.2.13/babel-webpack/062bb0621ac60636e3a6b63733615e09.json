{"ast":null,"code":"import { commonjsGlobal } from '../../../../_virtual/_commonjsHelpers.js';\nimport { b as backbone } from '../../../../_virtual/backbone.js';\nimport './jquery-1.12.4.js';\nimport '../../../../lib/underscore/underscore-min.js';\nimport { j as jquery1_12_4 } from '../../../../_virtual/jquery-1.12.4.js';\nimport { u as underscoreMin } from '../../../../_virtual/underscore-min.js';\n(function (module, exports) {\n  //     Backbone.js 1.4.0\n  //     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n  //     Backbone may be freely distributed under the MIT license.\n  //     For all details and documentation:\n  //     http://backbonejs.org\n  const jQuery = jquery1_12_4.exports;\n  (function (factory) {\n    // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n    // We use `self` instead of `window` for `WebWorker` support.\n    var root = typeof self == 'object' && self.self === self && self || typeof commonjsGlobal == 'object' && commonjsGlobal.global === commonjsGlobal && commonjsGlobal; // Set up Backbone appropriately for the environment. Start with AMD.\n\n    {\n      var _ = underscoreMin.exports,\n        $;\n      try {\n        $ = jQuery;\n      } catch (e) {}\n      factory(root, exports, _, $); // Finally, as a browser global.\n    }\n  })(function (root, Backbone, _, $) {\n    // Initial Setup\n    // -------------\n    // Save the previous value of the `Backbone` variable, so that it can be\n    // restored later on, if `noConflict` is used.\n    var previousBackbone = root.Backbone; // Create a local reference to a common array method we'll want to use later.\n\n    var slice = Array.prototype.slice; // Current version of the library. Keep in sync with `package.json`.\n\n    Backbone.VERSION = '1.4.0'; // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n    // the `$` variable.\n\n    Backbone.$ = $; // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n    // to its previous owner. Returns a reference to this Backbone object.\n\n    Backbone.noConflict = function () {\n      root.Backbone = previousBackbone;\n      return this;\n    }; // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n    // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n    // set a `X-Http-Method-Override` header.\n\n    Backbone.emulateHTTP = false; // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n    // `application/json` requests ... this will encode the body as\n    // `application/x-www-form-urlencoded` instead and will send the model in a\n    // form param named `model`.\n\n    Backbone.emulateJSON = false; // Backbone.Events\n    // ---------------\n    // A module that can be mixed in to *any object* in order to provide it with\n    // a custom event channel. You may bind a callback to an event with `on` or\n    // remove with `off`; `trigger`-ing an event fires all callbacks in\n    // succession.\n    //\n    //     var object = {};\n    //     _.extend(object, Backbone.Events);\n    //     object.on('expand', function(){ alert('expanded'); });\n    //     object.trigger('expand');\n    //\n\n    var Events = Backbone.Events = {}; // Regular expression used to split event strings.\n\n    var eventSplitter = /\\s+/; // A private global variable to share between listeners and listenees.\n\n    var _listening; // Iterates over the standard `event, callback` (as well as the fancy multiple\n    // space-separated events `\"change blur\", callback` and jQuery-style event\n    // maps `{event: callback}`).\n\n    var eventsApi = function (iteratee, events, name, callback, opts) {\n      var i = 0,\n        names;\n      if (name && typeof name === 'object') {\n        // Handle event maps.\n        if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n        for (names = _.keys(name); i < names.length; i++) {\n          events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n        }\n      } else if (name && eventSplitter.test(name)) {\n        // Handle space-separated event names by delegating them individually.\n        for (names = name.split(eventSplitter); i < names.length; i++) {\n          events = iteratee(events, names[i], callback, opts);\n        }\n      } else {\n        // Finally, standard events.\n        events = iteratee(events, name, callback, opts);\n      }\n      return events;\n    }; // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n\n    Events.on = function (name, callback, context) {\n      this._events = eventsApi(onApi, this._events || {}, name, callback, {\n        context: context,\n        ctx: this,\n        listening: _listening\n      });\n      if (_listening) {\n        var listeners = this._listeners || (this._listeners = {});\n        listeners[_listening.id] = _listening; // Allow the listening to use a counter, instead of tracking\n        // callbacks for library interop\n\n        _listening.interop = false;\n      }\n      return this;\n    }; // Inversion-of-control versions of `on`. Tell *this* object to listen to\n    // an event in another object... keeping track of what it's listening to\n    // for easier unbinding later.\n\n    Events.listenTo = function (obj, name, callback) {\n      if (!obj) return this;\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var listening = _listening = listeningTo[id]; // This object is not listening to any other events on `obj` yet.\n      // Setup the necessary references to track the listening callbacks.\n\n      if (!listening) {\n        this._listenId || (this._listenId = _.uniqueId('l'));\n        listening = _listening = listeningTo[id] = new Listening(this, obj);\n      } // Bind callbacks on obj.\n\n      var error = tryCatchOn(obj, name, callback, this);\n      _listening = void 0;\n      if (error) throw error; // If the target obj is not Backbone.Events, track events manually.\n\n      if (listening.interop) listening.on(name, callback);\n      return this;\n    }; // The reducing API that adds a callback to the `events` object.\n\n    var onApi = function (events, name, callback, options) {\n      if (callback) {\n        var handlers = events[name] || (events[name] = []);\n        var context = options.context,\n          ctx = options.ctx,\n          listening = options.listening;\n        if (listening) listening.count++;\n        handlers.push({\n          callback: callback,\n          context: context,\n          ctx: context || ctx,\n          listening: listening\n        });\n      }\n      return events;\n    }; // An try-catch guarded #on function, to prevent poisoning the global\n    // `_listening` variable.\n\n    var tryCatchOn = function (obj, name, callback, context) {\n      try {\n        obj.on(name, callback, context);\n      } catch (e) {\n        return e;\n      }\n    }; // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n\n    Events.off = function (name, callback, context) {\n      if (!this._events) return this;\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n      });\n      return this;\n    }; // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n\n    Events.stopListening = function (obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n      for (var i = 0; i < ids.length; i++) {\n        var listening = listeningTo[ids[i]]; // If listening doesn't exist, this object is not currently\n        // listening to obj. Break out early.\n\n        if (!listening) break;\n        listening.obj.off(name, callback, this);\n        if (listening.interop) listening.off(name, callback);\n      }\n      if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n      return this;\n    }; // The reducing API that removes a callback from the `events` object.\n\n    var offApi = function (events, name, callback, options) {\n      if (!events) return;\n      var context = options.context,\n        listeners = options.listeners;\n      var i = 0,\n        names; // Delete all event listeners and \"drop\" events.\n\n      if (!name && !context && !callback) {\n        for (names = _.keys(listeners); i < names.length; i++) {\n          listeners[names[i]].cleanup();\n        }\n        return;\n      }\n      names = name ? [name] : _.keys(events);\n      for (; i < names.length; i++) {\n        name = names[i];\n        var handlers = events[name]; // Bail out if there are no events stored.\n\n        if (!handlers) break; // Find any remaining events.\n\n        var remaining = [];\n        for (var j = 0; j < handlers.length; j++) {\n          var handler = handlers[j];\n          if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n            remaining.push(handler);\n          } else {\n            var listening = handler.listening;\n            if (listening) listening.off(name, callback);\n          }\n        } // Replace events if there are any remaining.  Otherwise, clean up.\n\n        if (remaining.length) {\n          events[name] = remaining;\n        } else {\n          delete events[name];\n        }\n      }\n      return events;\n    }; // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, its listener will be removed. If multiple events\n    // are passed in using the space-separated syntax, the handler will fire\n    // once for each event, not once for a combination of all events.\n\n    Events.once = function (name, callback, context) {\n      // Map the event into a `{event: once}` object.\n      var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n      if (typeof name === 'string' && context == null) callback = void 0;\n      return this.on(events, callback, context);\n    }; // Inversion-of-control versions of `once`.\n\n    Events.listenToOnce = function (obj, name, callback) {\n      // Map the event into a `{event: once}` object.\n      var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n      return this.listenTo(obj, events);\n    }; // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n    // `offer` unbinds the `onceWrapper` after it has been called.\n\n    var onceMap = function (map, name, callback, offer) {\n      if (callback) {\n        var once = map[name] = _.once(function () {\n          offer(name, once);\n          callback.apply(this, arguments);\n        });\n        once._callback = callback;\n      }\n      return map;\n    }; // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n\n    Events.trigger = function (name) {\n      if (!this._events) return this;\n      var length = Math.max(0, arguments.length - 1);\n      var args = Array(length);\n      for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n      eventsApi(triggerApi, this._events, name, void 0, args);\n      return this;\n    }; // Handles triggering the appropriate event callbacks.\n\n    var triggerApi = function (objEvents, name, callback, args) {\n      if (objEvents) {\n        var events = objEvents[name];\n        var allEvents = objEvents.all;\n        if (events && allEvents) allEvents = allEvents.slice();\n        if (events) triggerEvents(events, args);\n        if (allEvents) triggerEvents(allEvents, [name].concat(args));\n      }\n      return objEvents;\n    }; // A difficult-to-believe, but optimized internal dispatch function for\n    // triggering events. Tries to keep the usual cases speedy (most internal\n    // Backbone events have 3 arguments).\n\n    var triggerEvents = function (events, args) {\n      var ev,\n        i = -1,\n        l = events.length,\n        a1 = args[0],\n        a2 = args[1],\n        a3 = args[2];\n      switch (args.length) {\n        case 0:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n          return;\n        case 1:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);\n          return;\n        case 2:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2);\n          return;\n        case 3:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n          return;\n        default:\n          while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n          return;\n      }\n    }; // A listening class that tracks and cleans up memory bindings\n    // when all callbacks have been offed.\n\n    var Listening = function (listener, obj) {\n      this.id = listener._listenId;\n      this.listener = listener;\n      this.obj = obj;\n      this.interop = true;\n      this.count = 0;\n      this._events = void 0;\n    };\n    Listening.prototype.on = Events.on; // Offs a callback (or several).\n    // Uses an optimized counter if the listenee uses Backbone.Events.\n    // Otherwise, falls back to manual tracking to support events\n    // library interop.\n\n    Listening.prototype.off = function (name, callback) {\n      var cleanup;\n      if (this.interop) {\n        this._events = eventsApi(offApi, this._events, name, callback, {\n          context: void 0,\n          listeners: void 0\n        });\n        cleanup = !this._events;\n      } else {\n        this.count--;\n        cleanup = this.count === 0;\n      }\n      if (cleanup) this.cleanup();\n    }; // Cleans up memory bindings between the listener and the listenee.\n\n    Listening.prototype.cleanup = function () {\n      delete this.listener._listeningTo[this.obj._listenId];\n      if (!this.interop) delete this.obj._listeners[this.id];\n    }; // Aliases for backwards compatibility.\n\n    Events.bind = Events.on;\n    Events.unbind = Events.off; // Allow the `Backbone` object to serve as a global event bus, for folks who\n    // want global \"pubsub\" in a convenient place.\n\n    _.extend(Backbone, Events); // Backbone.Model\n    // --------------\n    // Backbone **Models** are the basic data object in the framework --\n    // frequently representing a row in a table in a database on your server.\n    // A discrete chunk of data and a bunch of useful, related methods for\n    // performing computations and transformations on that data.\n    // Create a new model with the specified attributes. A client id (`cid`)\n    // is automatically generated and assigned for you.\n\n    var Model = Backbone.Model = function (attributes, options) {\n      var attrs = attributes || {};\n      options || (options = {});\n      this.preinitialize.apply(this, arguments);\n      this.cid = _.uniqueId(this.cidPrefix);\n      this.attributes = {};\n      if (options.collection) this.collection = options.collection;\n      if (options.parse) attrs = this.parse(attrs, options) || {};\n      var defaults = _.result(this, 'defaults');\n      attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n      this.set(attrs, options);\n      this.changed = {};\n      this.initialize.apply(this, arguments);\n    }; // Attach all inheritable methods to the Model prototype.\n\n    _.extend(Model.prototype, Events, {\n      // A hash of attributes whose current and previous value differ.\n      changed: null,\n      // The value returned during the last failed validation.\n      validationError: null,\n      // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n      // CouchDB users may want to set this to `\"_id\"`.\n      idAttribute: 'id',\n      // The prefix is used to create the client id which is used to identify models locally.\n      // You may want to override this if you're experiencing name clashes with model ids.\n      cidPrefix: 'c',\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the Model.\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // Return a copy of the model's `attributes` object.\n      toJSON: function (options) {\n        return _.clone(this.attributes);\n      },\n      // Proxy `Backbone.sync` by default -- but override this if you need\n      // custom syncing semantics for *this* particular model.\n      sync: function () {\n        return Backbone.sync.apply(this, arguments);\n      },\n      // Get the value of an attribute.\n      get: function (attr) {\n        return this.attributes[attr];\n      },\n      // Get the HTML-escaped value of an attribute.\n      escape: function (attr) {\n        return _.escape(this.get(attr));\n      },\n      // Returns `true` if the attribute contains a value that is not null\n      // or undefined.\n      has: function (attr) {\n        return this.get(attr) != null;\n      },\n      // Special-cased proxy to underscore's `_.matches` method.\n      matches: function (attrs) {\n        return !!_.iteratee(attrs, this)(this.attributes);\n      },\n      // Set a hash of model attributes on the object, firing `\"change\"`. This is\n      // the core primitive operation of a model, updating the data and notifying\n      // anyone who needs to know about the change in state. The heart of the beast.\n      set: function (key, val, options) {\n        if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n        var attrs;\n        if (typeof key === 'object') {\n          attrs = key;\n          options = val;\n        } else {\n          (attrs = {})[key] = val;\n        }\n        options || (options = {}); // Run validation.\n\n        if (!this._validate(attrs, options)) return false; // Extract attributes and options.\n\n        var unset = options.unset;\n        var silent = options.silent;\n        var changes = [];\n        var changing = this._changing;\n        this._changing = true;\n        if (!changing) {\n          this._previousAttributes = _.clone(this.attributes);\n          this.changed = {};\n        }\n        var current = this.attributes;\n        var changed = this.changed;\n        var prev = this._previousAttributes; // For each `set` attribute, update or delete the current value.\n\n        for (var attr in attrs) {\n          val = attrs[attr];\n          if (!_.isEqual(current[attr], val)) changes.push(attr);\n          if (!_.isEqual(prev[attr], val)) {\n            changed[attr] = val;\n          } else {\n            delete changed[attr];\n          }\n          unset ? delete current[attr] : current[attr] = val;\n        } // Update the `id`.\n\n        if (this.idAttribute in attrs) this.id = this.get(this.idAttribute); // Trigger all relevant attribute changes.\n\n        if (!silent) {\n          if (changes.length) this._pending = options;\n          for (var i = 0; i < changes.length; i++) {\n            this.trigger('change:' + changes[i], this, current[changes[i]], options);\n          }\n        } // You might be wondering why there's a `while` loop here. Changes can\n        // be recursively nested within `\"change\"` events.\n\n        if (changing) return this;\n        if (!silent) {\n          while (this._pending) {\n            options = this._pending;\n            this._pending = false;\n            this.trigger('change', this, options);\n          }\n        }\n        this._pending = false;\n        this._changing = false;\n        return this;\n      },\n      // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n      // if the attribute doesn't exist.\n      unset: function (attr, options) {\n        return this.set(attr, void 0, _.extend({}, options, {\n          unset: true\n        }));\n      },\n      // Clear all attributes on the model, firing `\"change\"`.\n      clear: function (options) {\n        var attrs = {};\n        for (var key in this.attributes) attrs[key] = void 0;\n        return this.set(attrs, _.extend({}, options, {\n          unset: true\n        }));\n      },\n      // Determine if the model has changed since the last `\"change\"` event.\n      // If you specify an attribute name, determine if that attribute has changed.\n      hasChanged: function (attr) {\n        if (attr == null) return !_.isEmpty(this.changed);\n        return _.has(this.changed, attr);\n      },\n      // Return an object containing all the attributes that have changed, or\n      // false if there are no changed attributes. Useful for determining what\n      // parts of a view need to be updated and/or what attributes need to be\n      // persisted to the server. Unset attributes will be set to undefined.\n      // You can also pass an attributes object to diff against the model,\n      // determining if there *would be* a change.\n      changedAttributes: function (diff) {\n        if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n        var old = this._changing ? this._previousAttributes : this.attributes;\n        var changed = {};\n        var hasChanged;\n        for (var attr in diff) {\n          var val = diff[attr];\n          if (_.isEqual(old[attr], val)) continue;\n          changed[attr] = val;\n          hasChanged = true;\n        }\n        return hasChanged ? changed : false;\n      },\n      // Get the previous value of an attribute, recorded at the time the last\n      // `\"change\"` event was fired.\n      previous: function (attr) {\n        if (attr == null || !this._previousAttributes) return null;\n        return this._previousAttributes[attr];\n      },\n      // Get all of the attributes of the model at the time of the previous\n      // `\"change\"` event.\n      previousAttributes: function () {\n        return _.clone(this._previousAttributes);\n      },\n      // Fetch the model from the server, merging the response with the model's\n      // local attributes. Any changed attributes will trigger a \"change\" event.\n      fetch: function (options) {\n        options = _.extend({\n          parse: true\n        }, options);\n        var model = this;\n        var success = options.success;\n        options.success = function (resp) {\n          var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n          if (!model.set(serverAttrs, options)) return false;\n          if (success) success.call(options.context, model, resp, options);\n          model.trigger('sync', model, resp, options);\n        };\n        wrapError(this, options);\n        return this.sync('read', this, options);\n      },\n      // Set a hash of model attributes, and sync the model to the server.\n      // If the server returns an attributes hash that differs, the model's\n      // state will be `set` again.\n      save: function (key, val, options) {\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\n        var attrs;\n        if (key == null || typeof key === 'object') {\n          attrs = key;\n          options = val;\n        } else {\n          (attrs = {})[key] = val;\n        }\n        options = _.extend({\n          validate: true,\n          parse: true\n        }, options);\n        var wait = options.wait; // If we're not waiting and attributes exist, save acts as\n        // `set(attr).save(null, opts)` with validation. Otherwise, check if\n        // the model will be valid when the attributes, if any, are set.\n\n        if (attrs && !wait) {\n          if (!this.set(attrs, options)) return false;\n        } else if (!this._validate(attrs, options)) {\n          return false;\n        } // After a successful server-side save, the client is (optionally)\n        // updated with the server-side state.\n\n        var model = this;\n        var success = options.success;\n        var attributes = this.attributes;\n        options.success = function (resp) {\n          // Ensure attributes are restored during synchronous saves.\n          model.attributes = attributes;\n          var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n          if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n          if (serverAttrs && !model.set(serverAttrs, options)) return false;\n          if (success) success.call(options.context, model, resp, options);\n          model.trigger('sync', model, resp, options);\n        };\n        wrapError(this, options); // Set temporary attributes if `{wait: true}` to properly find new ids.\n\n        if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n        var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n        if (method === 'patch' && !options.attrs) options.attrs = attrs;\n        var xhr = this.sync(method, this, options); // Restore attributes.\n\n        this.attributes = attributes;\n        return xhr;\n      },\n      // Destroy this model on the server if it was already persisted.\n      // Optimistically removes the model from its collection, if it has one.\n      // If `wait: true` is passed, waits for the server to respond before removal.\n      destroy: function (options) {\n        options = options ? _.clone(options) : {};\n        var model = this;\n        var success = options.success;\n        var wait = options.wait;\n        var destroy = function () {\n          model.stopListening();\n          model.trigger('destroy', model, model.collection, options);\n        };\n        options.success = function (resp) {\n          if (wait) destroy();\n          if (success) success.call(options.context, model, resp, options);\n          if (!model.isNew()) model.trigger('sync', model, resp, options);\n        };\n        var xhr = false;\n        if (this.isNew()) {\n          _.defer(options.success);\n        } else {\n          wrapError(this, options);\n          xhr = this.sync('delete', this, options);\n        }\n        if (!wait) destroy();\n        return xhr;\n      },\n      // Default URL for the model's representation on the server -- if you're\n      // using Backbone's restful methods, override this to change the endpoint\n      // that will be called.\n      url: function () {\n        var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n        if (this.isNew()) return base;\n        var id = this.get(this.idAttribute);\n        return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n      },\n      // **parse** converts a response into the hash of attributes to be `set` on\n      // the model. The default implementation is just to pass the response along.\n      parse: function (resp, options) {\n        return resp;\n      },\n      // Create a new model with identical attributes to this one.\n      clone: function () {\n        return new this.constructor(this.attributes);\n      },\n      // A model is new if it has never been saved to the server, and lacks an id.\n      isNew: function () {\n        return !this.has(this.idAttribute);\n      },\n      // Check if the model is currently in a valid state.\n      isValid: function (options) {\n        return this._validate({}, _.extend({}, options, {\n          validate: true\n        }));\n      },\n      // Run validation against the next complete set of model attributes,\n      // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n      _validate: function (attrs, options) {\n        if (!options.validate || !this.validate) return true;\n        attrs = _.extend({}, this.attributes, attrs);\n        var error = this.validationError = this.validate(attrs, options) || null;\n        if (!error) return true;\n        this.trigger('invalid', this, error, _.extend(options, {\n          validationError: error\n        }));\n        return false;\n      }\n    }); // Backbone.Collection\n    // -------------------\n    // If models tend to represent a single row of data, a Backbone Collection is\n    // more analogous to a table full of data ... or a small slice or page of that\n    // table, or a collection of rows that belong together for a particular reason\n    // -- all of the messages in this particular folder, all of the documents\n    // belonging to this particular author, and so on. Collections maintain\n    // indexes of their models, both in order, and for lookup by `id`.\n    // Create a new **Collection**, perhaps to contain a specific type of `model`.\n    // If a `comparator` is specified, the Collection will maintain\n    // its models in sort order, as they're added and removed.\n\n    var Collection = Backbone.Collection = function (models, options) {\n      options || (options = {});\n      this.preinitialize.apply(this, arguments);\n      if (options.model) this.model = options.model;\n      if (options.comparator !== void 0) this.comparator = options.comparator;\n      this._reset();\n      this.initialize.apply(this, arguments);\n      if (models) this.reset(models, _.extend({\n        silent: true\n      }, options));\n    }; // Default options for `Collection#set`.\n\n    var setOptions = {\n      add: true,\n      remove: true,\n      merge: true\n    };\n    var addOptions = {\n      add: true,\n      remove: false\n    }; // Splices `insert` into `array` at index `at`.\n\n    var splice = function (array, insert, at) {\n      at = Math.min(Math.max(at, 0), array.length);\n      var tail = Array(array.length - at);\n      var length = insert.length;\n      var i;\n      for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n      for (i = 0; i < length; i++) array[i + at] = insert[i];\n      for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n    }; // Define the Collection's inheritable methods.\n\n    _.extend(Collection.prototype, Events, {\n      // The default model for a collection is just a **Backbone.Model**.\n      // This should be overridden in most cases.\n      model: Model,\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // The JSON representation of a Collection is an array of the\n      // models' attributes.\n      toJSON: function (options) {\n        return this.map(function (model) {\n          return model.toJSON(options);\n        });\n      },\n      // Proxy `Backbone.sync` by default.\n      sync: function () {\n        return Backbone.sync.apply(this, arguments);\n      },\n      // Add a model, or list of models to the set. `models` may be Backbone\n      // Models or raw JavaScript objects to be converted to Models, or any\n      // combination of the two.\n      add: function (models, options) {\n        return this.set(models, _.extend({\n          merge: false\n        }, options, addOptions));\n      },\n      // Remove a model, or a list of models from the set.\n      remove: function (models, options) {\n        options = _.extend({}, options);\n        var singular = !_.isArray(models);\n        models = singular ? [models] : models.slice();\n        var removed = this._removeModels(models, options);\n        if (!options.silent && removed.length) {\n          options.changes = {\n            added: [],\n            merged: [],\n            removed: removed\n          };\n          this.trigger('update', this, options);\n        }\n        return singular ? removed[0] : removed;\n      },\n      // Update a collection by `set`-ing a new list of models, adding new ones,\n      // removing models that are no longer present, and merging models that\n      // already exist in the collection, as necessary. Similar to **Model#set**,\n      // the core operation for updating the data contained by the collection.\n      set: function (models, options) {\n        if (models == null) return;\n        options = _.extend({}, setOptions, options);\n        if (options.parse && !this._isModel(models)) {\n          models = this.parse(models, options) || [];\n        }\n        var singular = !_.isArray(models);\n        models = singular ? [models] : models.slice();\n        var at = options.at;\n        if (at != null) at = +at;\n        if (at > this.length) at = this.length;\n        if (at < 0) at += this.length + 1;\n        var set = [];\n        var toAdd = [];\n        var toMerge = [];\n        var toRemove = [];\n        var modelMap = {};\n        var add = options.add;\n        var merge = options.merge;\n        var remove = options.remove;\n        var sort = false;\n        var sortable = this.comparator && at == null && options.sort !== false;\n        var sortAttr = _.isString(this.comparator) ? this.comparator : null; // Turn bare objects into model references, and prevent invalid models\n        // from being added.\n\n        var model, i;\n        for (i = 0; i < models.length; i++) {\n          model = models[i]; // If a duplicate is found, prevent it from being added and\n          // optionally merge it into the existing model.\n\n          var existing = this.get(model);\n          if (existing) {\n            if (merge && model !== existing) {\n              var attrs = this._isModel(model) ? model.attributes : model;\n              if (options.parse) attrs = existing.parse(attrs, options);\n              existing.set(attrs, options);\n              toMerge.push(existing);\n              if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n            }\n            if (!modelMap[existing.cid]) {\n              modelMap[existing.cid] = true;\n              set.push(existing);\n            }\n            models[i] = existing; // If this is a new, valid model, push it to the `toAdd` list.\n          } else if (add) {\n            model = models[i] = this._prepareModel(model, options);\n            if (model) {\n              toAdd.push(model);\n              this._addReference(model, options);\n              modelMap[model.cid] = true;\n              set.push(model);\n            }\n          }\n        } // Remove stale models.\n\n        if (remove) {\n          for (i = 0; i < this.length; i++) {\n            model = this.models[i];\n            if (!modelMap[model.cid]) toRemove.push(model);\n          }\n          if (toRemove.length) this._removeModels(toRemove, options);\n        } // See if sorting is needed, update `length` and splice in new models.\n\n        var orderChanged = false;\n        var replace = !sortable && add && remove;\n        if (set.length && replace) {\n          orderChanged = this.length !== set.length || _.some(this.models, function (m, index) {\n            return m !== set[index];\n          });\n          this.models.length = 0;\n          splice(this.models, set, 0);\n          this.length = this.models.length;\n        } else if (toAdd.length) {\n          if (sortable) sort = true;\n          splice(this.models, toAdd, at == null ? this.length : at);\n          this.length = this.models.length;\n        } // Silently sort the collection if appropriate.\n\n        if (sort) this.sort({\n          silent: true\n        }); // Unless silenced, it's time to fire all appropriate add/sort/update events.\n\n        if (!options.silent) {\n          for (i = 0; i < toAdd.length; i++) {\n            if (at != null) options.index = at + i;\n            model = toAdd[i];\n            model.trigger('add', model, this, options);\n          }\n          if (sort || orderChanged) this.trigger('sort', this, options);\n          if (toAdd.length || toRemove.length || toMerge.length) {\n            options.changes = {\n              added: toAdd,\n              removed: toRemove,\n              merged: toMerge\n            };\n            this.trigger('update', this, options);\n          }\n        } // Return the added (or merged) model (or models).\n\n        return singular ? models[0] : models;\n      },\n      // When you have more items than you want to add or remove individually,\n      // you can reset the entire set with a new list of models, without firing\n      // any granular `add` or `remove` events. Fires `reset` when finished.\n      // Useful for bulk operations and optimizations.\n      reset: function (models, options) {\n        options = options ? _.clone(options) : {};\n        for (var i = 0; i < this.models.length; i++) {\n          this._removeReference(this.models[i], options);\n        }\n        options.previousModels = this.models;\n        this._reset();\n        models = this.add(models, _.extend({\n          silent: true\n        }, options));\n        if (!options.silent) this.trigger('reset', this, options);\n        return models;\n      },\n      // Add a model to the end of the collection.\n      push: function (model, options) {\n        return this.add(model, _.extend({\n          at: this.length\n        }, options));\n      },\n      // Remove a model from the end of the collection.\n      pop: function (options) {\n        var model = this.at(this.length - 1);\n        return this.remove(model, options);\n      },\n      // Add a model to the beginning of the collection.\n      unshift: function (model, options) {\n        return this.add(model, _.extend({\n          at: 0\n        }, options));\n      },\n      // Remove a model from the beginning of the collection.\n      shift: function (options) {\n        var model = this.at(0);\n        return this.remove(model, options);\n      },\n      // Slice out a sub-array of models from the collection.\n      slice: function () {\n        return slice.apply(this.models, arguments);\n      },\n      // Get a model from the set by id, cid, model object with id or cid\n      // properties, or an attributes object that is transformed through modelId.\n      get: function (obj) {\n        if (obj == null) return void 0;\n        return this._byId[obj] || this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] || obj.cid && this._byId[obj.cid];\n      },\n      // Returns `true` if the model is in the collection.\n      has: function (obj) {\n        return this.get(obj) != null;\n      },\n      // Get the model at the given index.\n      at: function (index) {\n        if (index < 0) index += this.length;\n        return this.models[index];\n      },\n      // Return models with matching attributes. Useful for simple cases of\n      // `filter`.\n      where: function (attrs, first) {\n        return this[first ? 'find' : 'filter'](attrs);\n      },\n      // Return the first model with matching attributes. Useful for simple cases\n      // of `find`.\n      findWhere: function (attrs) {\n        return this.where(attrs, true);\n      },\n      // Force the collection to re-sort itself. You don't need to call this under\n      // normal circumstances, as the set will maintain sort order as each item\n      // is added.\n      sort: function (options) {\n        var comparator = this.comparator;\n        if (!comparator) throw new Error('Cannot sort a set without a comparator');\n        options || (options = {});\n        var length = comparator.length;\n        if (_.isFunction(comparator)) comparator = comparator.bind(this); // Run sort based on type of `comparator`.\n\n        if (length === 1 || _.isString(comparator)) {\n          this.models = this.sortBy(comparator);\n        } else {\n          this.models.sort(comparator);\n        }\n        if (!options.silent) this.trigger('sort', this, options);\n        return this;\n      },\n      // Pluck an attribute from each model in the collection.\n      pluck: function (attr) {\n        return this.map(attr + '');\n      },\n      // Fetch the default set of models for this collection, resetting the\n      // collection when they arrive. If `reset: true` is passed, the response\n      // data will be passed through the `reset` method instead of `set`.\n      fetch: function (options) {\n        options = _.extend({\n          parse: true\n        }, options);\n        var success = options.success;\n        var collection = this;\n        options.success = function (resp) {\n          var method = options.reset ? 'reset' : 'set';\n          collection[method](resp, options);\n          if (success) success.call(options.context, collection, resp, options);\n          collection.trigger('sync', collection, resp, options);\n        };\n        wrapError(this, options);\n        return this.sync('read', this, options);\n      },\n      // Create a new instance of a model in this collection. Add the model to the\n      // collection immediately, unless `wait: true` is passed, in which case we\n      // wait for the server to agree.\n      create: function (model, options) {\n        options = options ? _.clone(options) : {};\n        var wait = options.wait;\n        model = this._prepareModel(model, options);\n        if (!model) return false;\n        if (!wait) this.add(model, options);\n        var collection = this;\n        var success = options.success;\n        options.success = function (m, resp, callbackOpts) {\n          if (wait) collection.add(m, callbackOpts);\n          if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n        };\n        model.save(null, options);\n        return model;\n      },\n      // **parse** converts a response into a list of models to be added to the\n      // collection. The default implementation is just to pass it through.\n      parse: function (resp, options) {\n        return resp;\n      },\n      // Create a new collection with an identical list of models as this one.\n      clone: function () {\n        return new this.constructor(this.models, {\n          model: this.model,\n          comparator: this.comparator\n        });\n      },\n      // Define how to uniquely identify models in the collection.\n      modelId: function (attrs) {\n        return attrs[this.model.prototype.idAttribute || 'id'];\n      },\n      // Get an iterator of all models in this collection.\n      values: function () {\n        return new CollectionIterator(this, ITERATOR_VALUES);\n      },\n      // Get an iterator of all model IDs in this collection.\n      keys: function () {\n        return new CollectionIterator(this, ITERATOR_KEYS);\n      },\n      // Get an iterator of all [ID, model] tuples in this collection.\n      entries: function () {\n        return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n      },\n      // Private method to reset all internal state. Called when the collection\n      // is first initialized or reset.\n      _reset: function () {\n        this.length = 0;\n        this.models = [];\n        this._byId = {};\n      },\n      // Prepare a hash of attributes (or other model) to be added to this\n      // collection.\n      _prepareModel: function (attrs, options) {\n        if (this._isModel(attrs)) {\n          if (!attrs.collection) attrs.collection = this;\n          return attrs;\n        }\n        options = options ? _.clone(options) : {};\n        options.collection = this;\n        var model = new this.model(attrs, options);\n        if (!model.validationError) return model;\n        this.trigger('invalid', this, model.validationError, options);\n        return false;\n      },\n      // Internal method called by both remove and set.\n      _removeModels: function (models, options) {\n        var removed = [];\n        for (var i = 0; i < models.length; i++) {\n          var model = this.get(models[i]);\n          if (!model) continue;\n          var index = this.indexOf(model);\n          this.models.splice(index, 1);\n          this.length--; // Remove references before triggering 'remove' event to prevent an\n          // infinite loop. #3693\n\n          delete this._byId[model.cid];\n          var id = this.modelId(model.attributes);\n          if (id != null) delete this._byId[id];\n          if (!options.silent) {\n            options.index = index;\n            model.trigger('remove', model, this, options);\n          }\n          removed.push(model);\n          this._removeReference(model, options);\n        }\n        return removed;\n      },\n      // Method for checking whether an object should be considered a model for\n      // the purposes of adding to the collection.\n      _isModel: function (model) {\n        return model instanceof Model;\n      },\n      // Internal method to create a model's ties to a collection.\n      _addReference: function (model, options) {\n        this._byId[model.cid] = model;\n        var id = this.modelId(model.attributes);\n        if (id != null) this._byId[id] = model;\n        model.on('all', this._onModelEvent, this);\n      },\n      // Internal method to sever a model's ties to a collection.\n      _removeReference: function (model, options) {\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n        if (this === model.collection) delete model.collection;\n        model.off('all', this._onModelEvent, this);\n      },\n      // Internal method called every time a model in the set fires an event.\n      // Sets need to update their indexes when models change ids. All other\n      // events simply proxy through. \"add\" and \"remove\" events that originate\n      // in other collections are ignored.\n      _onModelEvent: function (event, model, collection, options) {\n        if (model) {\n          if ((event === 'add' || event === 'remove') && collection !== this) return;\n          if (event === 'destroy') this.remove(model, options);\n          if (event === 'change') {\n            var prevId = this.modelId(model.previousAttributes());\n            var id = this.modelId(model.attributes);\n            if (prevId !== id) {\n              if (prevId != null) delete this._byId[prevId];\n              if (id != null) this._byId[id] = model;\n            }\n          }\n        }\n        this.trigger.apply(this, arguments);\n      }\n    }); // Defining an @@iterator method implements JavaScript's Iterable protocol.\n    // In modern ES2015 browsers, this value is found at Symbol.iterator.\n\n    /* global Symbol */\n\n    var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n    if ($$iterator) {\n      Collection.prototype[$$iterator] = Collection.prototype.values;\n    } // CollectionIterator\n    // ------------------\n    // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n    // use of `for of` loops in modern browsers and interoperation between\n    // Backbone.Collection and other JavaScript functions and third-party libraries\n    // which can operate on Iterables.\n\n    var CollectionIterator = function (collection, kind) {\n      this._collection = collection;\n      this._kind = kind;\n      this._index = 0;\n    }; // This \"enum\" defines the three possible kinds of values which can be emitted\n    // by a CollectionIterator that correspond to the values(), keys() and entries()\n    // methods on Collection, respectively.\n\n    var ITERATOR_VALUES = 1;\n    var ITERATOR_KEYS = 2;\n    var ITERATOR_KEYSVALUES = 3; // All Iterators should themselves be Iterable.\n\n    if ($$iterator) {\n      CollectionIterator.prototype[$$iterator] = function () {\n        return this;\n      };\n    }\n    CollectionIterator.prototype.next = function () {\n      if (this._collection) {\n        // Only continue iterating if the iterated collection is long enough.\n        if (this._index < this._collection.length) {\n          var model = this._collection.at(this._index);\n          this._index++; // Construct a value depending on what kind of values should be iterated.\n\n          var value;\n          if (this._kind === ITERATOR_VALUES) {\n            value = model;\n          } else {\n            var id = this._collection.modelId(model.attributes);\n            if (this._kind === ITERATOR_KEYS) {\n              value = id;\n            } else {\n              // ITERATOR_KEYSVALUES\n              value = [id, model];\n            }\n          }\n          return {\n            value: value,\n            done: false\n          };\n        } // Once exhausted, remove the reference to the collection so future\n        // calls to the next method always return done.\n\n        this._collection = void 0;\n      }\n      return {\n        value: void 0,\n        done: true\n      };\n    }; // Backbone.View\n    // -------------\n    // Backbone Views are almost more convention than they are actual code. A View\n    // is simply a JavaScript object that represents a logical chunk of UI in the\n    // DOM. This might be a single item, an entire list, a sidebar or panel, or\n    // even the surrounding frame which wraps your whole app. Defining a chunk of\n    // UI as a **View** allows you to define your DOM events declaratively, without\n    // having to worry about render order ... and makes it easy for the view to\n    // react to specific changes in the state of your models.\n    // Creating a Backbone.View creates its initial element outside of the DOM,\n    // if an existing element is not provided...\n\n    var View = Backbone.View = function (options) {\n      this.cid = _.uniqueId('view');\n      this.preinitialize.apply(this, arguments);\n      _.extend(this, _.pick(options, viewOptions));\n      this._ensureElement();\n      this.initialize.apply(this, arguments);\n    }; // Cached regex to split keys for `delegate`.\n\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/; // List of view options to be set as properties.\n\n    var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events']; // Set up all inheritable **Backbone.View** properties and methods.\n\n    _.extend(View.prototype, Events, {\n      // The default `tagName` of a View's element is `\"div\"`.\n      tagName: 'div',\n      // jQuery delegate for element lookup, scoped to DOM elements within the\n      // current view. This should be preferred to global lookups where possible.\n      $: function (selector) {\n        return this.$el.find(selector);\n      },\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the View\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // **render** is the core function that your view should override, in order\n      // to populate its element (`this.el`), with the appropriate HTML. The\n      // convention is for **render** to always return `this`.\n      render: function () {\n        return this;\n      },\n      // Remove this view by taking the element out of the DOM, and removing any\n      // applicable Backbone.Events listeners.\n      remove: function () {\n        this._removeElement();\n        this.stopListening();\n        return this;\n      },\n      // Remove this view's element from the document and all event listeners\n      // attached to it. Exposed for subclasses using an alternative DOM\n      // manipulation API.\n      _removeElement: function () {\n        this.$el.remove();\n      },\n      // Change the view's element (`this.el` property) and re-delegate the\n      // view's events on the new element.\n      setElement: function (element) {\n        this.undelegateEvents();\n        this._setElement(element);\n        this.delegateEvents();\n        return this;\n      },\n      // Creates the `this.el` and `this.$el` references for this view using the\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n      // context or an element. Subclasses can override this to utilize an\n      // alternative DOM manipulation API and are only required to set the\n      // `this.el` property.\n      _setElement: function (el) {\n        this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n        this.el = this.$el[0];\n      },\n      // Set callbacks, where `this.events` is a hash of\n      //\n      // *{\"event selector\": \"callback\"}*\n      //\n      //     {\n      //       'mousedown .title':  'edit',\n      //       'click .button':     'save',\n      //       'click .open':       function(e) { ... }\n      //     }\n      //\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\n      // Uses event delegation for efficiency.\n      // Omitting the selector binds the event to `this.el`.\n      delegateEvents: function (events) {\n        events || (events = _.result(this, 'events'));\n        if (!events) return this;\n        this.undelegateEvents();\n        for (var key in events) {\n          var method = events[key];\n          if (!_.isFunction(method)) method = this[method];\n          if (!method) continue;\n          var match = key.match(delegateEventSplitter);\n          this.delegate(match[1], match[2], method.bind(this));\n        }\n        return this;\n      },\n      // Add a single event listener to the view's element (or a child element\n      // using `selector`). This only works for delegate-able events: not `focus`,\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n      delegate: function (eventName, selector, listener) {\n        this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n        return this;\n      },\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\n      // You usually don't need to use this, but may wish to if you have multiple\n      // Backbone views attached to the same DOM element.\n      undelegateEvents: function () {\n        if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n        return this;\n      },\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\n      // `selector` and `listener` are both optional.\n      undelegate: function (eventName, selector, listener) {\n        this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n        return this;\n      },\n      // Produces a DOM element to be assigned to your view. Exposed for\n      // subclasses using an alternative DOM manipulation API.\n      _createElement: function (tagName) {\n        return document.createElement(tagName);\n      },\n      // Ensure that the View has a DOM element to render into.\n      // If `this.el` is a string, pass it through `$()`, take the first\n      // matching element, and re-assign it to `el`. Otherwise, create\n      // an element from the `id`, `className` and `tagName` properties.\n      _ensureElement: function () {\n        if (!this.el) {\n          var attrs = _.extend({}, _.result(this, 'attributes'));\n          if (this.id) attrs.id = _.result(this, 'id');\n          if (this.className) attrs['class'] = _.result(this, 'className');\n          this.setElement(this._createElement(_.result(this, 'tagName')));\n          this._setAttributes(attrs);\n        } else {\n          this.setElement(_.result(this, 'el'));\n        }\n      },\n      // Set attributes from a hash on this view's element.  Exposed for\n      // subclasses using an alternative DOM manipulation API.\n      _setAttributes: function (attributes) {\n        this.$el.attr(attributes);\n      }\n    }); // Proxy Backbone class methods to Underscore functions, wrapping the model's\n    // `attributes` object or collection's `models` array behind the scenes.\n    //\n    // collection.filter(function(model) { return model.get('age') > 10 });\n    // collection.each(this.addView);\n    //\n    // `Function#apply` can be slow so we use the method's arg count, if we know it.\n\n    var addMethod = function (base, length, method, attribute) {\n      switch (length) {\n        case 1:\n          return function () {\n            return base[method](this[attribute]);\n          };\n        case 2:\n          return function (value) {\n            return base[method](this[attribute], value);\n          };\n        case 3:\n          return function (iteratee, context) {\n            return base[method](this[attribute], cb(iteratee, this), context);\n          };\n        case 4:\n          return function (iteratee, defaultVal, context) {\n            return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n          };\n        default:\n          return function () {\n            var args = slice.call(arguments);\n            args.unshift(this[attribute]);\n            return base[method].apply(base, args);\n          };\n      }\n    };\n    var addUnderscoreMethods = function (Class, base, methods, attribute) {\n      _.each(methods, function (length, method) {\n        if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n      });\n    }; // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n\n    var cb = function (iteratee, instance) {\n      if (_.isFunction(iteratee)) return iteratee;\n      if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n      if (_.isString(iteratee)) return function (model) {\n        return model.get(iteratee);\n      };\n      return iteratee;\n    };\n    var modelMatcher = function (attrs) {\n      var matcher = _.matches(attrs);\n      return function (model) {\n        return matcher(model.attributes);\n      };\n    }; // Underscore methods that we want to implement on the Collection.\n    // 90% of the core usefulness of Backbone Collections is actually implemented\n    // right here:\n\n    var collectionMethods = {\n      forEach: 3,\n      each: 3,\n      map: 3,\n      collect: 3,\n      reduce: 0,\n      foldl: 0,\n      inject: 0,\n      reduceRight: 0,\n      foldr: 0,\n      find: 3,\n      detect: 3,\n      filter: 3,\n      select: 3,\n      reject: 3,\n      every: 3,\n      all: 3,\n      some: 3,\n      any: 3,\n      include: 3,\n      includes: 3,\n      contains: 3,\n      invoke: 0,\n      max: 3,\n      min: 3,\n      toArray: 1,\n      size: 1,\n      first: 3,\n      head: 3,\n      take: 3,\n      initial: 3,\n      rest: 3,\n      tail: 3,\n      drop: 3,\n      last: 3,\n      without: 0,\n      difference: 0,\n      indexOf: 3,\n      shuffle: 1,\n      lastIndexOf: 3,\n      isEmpty: 1,\n      chain: 1,\n      sample: 3,\n      partition: 3,\n      groupBy: 3,\n      countBy: 3,\n      sortBy: 3,\n      indexBy: 3,\n      findIndex: 3,\n      findLastIndex: 3\n    }; // Underscore methods that we want to implement on the Model, mapped to the\n    // number of arguments they take.\n\n    var modelMethods = {\n      keys: 1,\n      values: 1,\n      pairs: 1,\n      invert: 1,\n      pick: 0,\n      omit: 0,\n      chain: 1,\n      isEmpty: 1\n    }; // Mix in each Underscore method as a proxy to `Collection#models`.\n\n    _.each([[Collection, collectionMethods, 'models'], [Model, modelMethods, 'attributes']], function (config) {\n      var Base = config[0],\n        methods = config[1],\n        attribute = config[2];\n      Base.mixin = function (obj) {\n        var mappings = _.reduce(_.functions(obj), function (memo, name) {\n          memo[name] = 0;\n          return memo;\n        }, {});\n        addUnderscoreMethods(Base, obj, mappings, attribute);\n      };\n      addUnderscoreMethods(Base, _, methods, attribute);\n    }); // Backbone.sync\n    // -------------\n    // Override this function to change the manner in which Backbone persists\n    // models to the server. You will be passed the type of request, and the\n    // model in question. By default, makes a RESTful Ajax request\n    // to the model's `url()`. Some possible customizations could be:\n    //\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\n    // * Send up the models as XML instead of JSON.\n    // * Persist models via WebSockets instead of Ajax.\n    //\n    // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n    // as `POST`, with a `_method` parameter containing the true HTTP method,\n    // as well as all requests with the body as `application/x-www-form-urlencoded`\n    // instead of `application/json` with the model in a param named `model`.\n    // Useful when interfacing with server-side languages like **PHP** that make\n    // it difficult to read the body of `PUT` requests.\n\n    Backbone.sync = function (method, model, options) {\n      var type = methodMap[method]; // Default options, unless specified.\n\n      _.defaults(options || (options = {}), {\n        emulateHTTP: Backbone.emulateHTTP,\n        emulateJSON: Backbone.emulateJSON\n      }); // Default JSON-request options.\n\n      var params = {\n        type: type,\n        dataType: 'json'\n      }; // Ensure that we have a URL.\n\n      if (!options.url) {\n        params.url = _.result(model, 'url') || urlError();\n      } // Ensure that we have the appropriate request data.\n\n      if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n        params.contentType = 'application/json';\n        params.data = JSON.stringify(options.attrs || model.toJSON(options));\n      } // For older servers, emulate JSON by encoding the request into an HTML-form.\n\n      if (options.emulateJSON) {\n        params.contentType = 'application/x-www-form-urlencoded';\n        params.data = params.data ? {\n          model: params.data\n        } : {};\n      } // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n      // And an `X-HTTP-Method-Override` header.\n\n      if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n        params.type = 'POST';\n        if (options.emulateJSON) params.data._method = type;\n        var beforeSend = options.beforeSend;\n        options.beforeSend = function (xhr) {\n          xhr.setRequestHeader('X-HTTP-Method-Override', type);\n          if (beforeSend) return beforeSend.apply(this, arguments);\n        };\n      } // Don't process data on a non-GET request.\n\n      if (params.type !== 'GET' && !options.emulateJSON) {\n        params.processData = false;\n      } // Pass along `textStatus` and `errorThrown` from jQuery.\n\n      var error = options.error;\n      options.error = function (xhr, textStatus, errorThrown) {\n        options.textStatus = textStatus;\n        options.errorThrown = errorThrown;\n        if (error) error.call(options.context, xhr, textStatus, errorThrown);\n      }; // Make the request, allowing the user to override any Ajax options.\n\n      var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n      model.trigger('request', model, xhr, options);\n      return xhr;\n    }; // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n\n    var methodMap = {\n      create: 'POST',\n      update: 'PUT',\n      patch: 'PATCH',\n      delete: 'DELETE',\n      read: 'GET'\n    }; // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n    // Override this if you'd like to use a different library.\n\n    Backbone.ajax = function () {\n      return Backbone.$.ajax.apply(Backbone.$, arguments);\n    }; // Backbone.Router\n    // ---------------\n    // Routers map faux-URLs to actions, and fire events when routes are\n    // matched. Creating a new one sets its `routes` hash, if not set statically.\n\n    var Router = Backbone.Router = function (options) {\n      options || (options = {});\n      this.preinitialize.apply(this, arguments);\n      if (options.routes) this.routes = options.routes;\n      this._bindRoutes();\n      this.initialize.apply(this, arguments);\n    }; // Cached regular expressions for matching named param parts and splatted\n    // parts of route strings.\n\n    var optionalParam = /\\((.*?)\\)/g;\n    var namedParam = /(\\(\\?)?:\\w+/g;\n    var splatParam = /\\*\\w+/g;\n    var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g; // Set up all inheritable **Backbone.Router** properties and methods.\n\n    _.extend(Router.prototype, Events, {\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the Router.\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // Manually bind a single named route to a callback. For example:\n      //\n      //     this.route('search/:query/p:num', 'search', function(query, num) {\n      //       ...\n      //     });\n      //\n      route: function (route, name, callback) {\n        if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n        if (_.isFunction(name)) {\n          callback = name;\n          name = '';\n        }\n        if (!callback) callback = this[name];\n        var router = this;\n        Backbone.history.route(route, function (fragment) {\n          var args = router._extractParameters(route, fragment);\n          if (router.execute(callback, args, name) !== false) {\n            router.trigger.apply(router, ['route:' + name].concat(args));\n            router.trigger('route', name, args);\n            Backbone.history.trigger('route', router, name, args);\n          }\n        });\n        return this;\n      },\n      // Execute a route handler with the provided parameters.  This is an\n      // excellent place to do pre-route setup or post-route cleanup.\n      execute: function (callback, args, name) {\n        if (callback) callback.apply(this, args);\n      },\n      // Simple proxy to `Backbone.history` to save a fragment into the history.\n      navigate: function (fragment, options) {\n        Backbone.history.navigate(fragment, options);\n        return this;\n      },\n      // Bind all defined routes to `Backbone.history`. We have to reverse the\n      // order of the routes here to support behavior where the most general\n      // routes can be defined at the bottom of the route map.\n      _bindRoutes: function () {\n        if (!this.routes) return;\n        this.routes = _.result(this, 'routes');\n        var route,\n          routes = _.keys(this.routes);\n        while ((route = routes.pop()) != null) {\n          this.route(route, this.routes[route]);\n        }\n      },\n      // Convert a route string into a regular expression, suitable for matching\n      // against the current location hash.\n      _routeToRegExp: function (route) {\n        route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n          return optional ? match : '([^/?]+)';\n        }).replace(splatParam, '([^?]*?)');\n        return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n      },\n      // Given a route, and a URL fragment that it matches, return the array of\n      // extracted decoded parameters. Empty or unmatched parameters will be\n      // treated as `null` to normalize cross-browser behavior.\n      _extractParameters: function (route, fragment) {\n        var params = route.exec(fragment).slice(1);\n        return _.map(params, function (param, i) {\n          // Don't decode the search params.\n          if (i === params.length - 1) return param || null;\n          return param ? decodeURIComponent(param) : null;\n        });\n      }\n    }); // Backbone.History\n    // ----------------\n    // Handles cross-browser history management, based on either\n    // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n    // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n    // and URL fragments. If the browser supports neither (old IE, natch),\n    // falls back to polling.\n\n    var History = Backbone.History = function () {\n      this.handlers = [];\n      this.checkUrl = this.checkUrl.bind(this); // Ensure that `History` can be used outside of the browser.\n\n      if (typeof window !== 'undefined') {\n        this.location = window.location;\n        this.history = window.history;\n      }\n    }; // Cached regex for stripping a leading hash/slash and trailing space.\n\n    var routeStripper = /^[#\\/]|\\s+$/g; // Cached regex for stripping leading and trailing slashes.\n\n    var rootStripper = /^\\/+|\\/+$/g; // Cached regex for stripping urls of hash.\n\n    var pathStripper = /#.*$/; // Has the history handling already been started?\n\n    History.started = false; // Set up all inheritable **Backbone.History** properties and methods.\n\n    _.extend(History.prototype, Events, {\n      // The default interval to poll for hash changes, if necessary, is\n      // twenty times a second.\n      interval: 50,\n      // Are we at the app root?\n      atRoot: function () {\n        var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n        return path === this.root && !this.getSearch();\n      },\n      // Does the pathname match the root?\n      matchRoot: function () {\n        var path = this.decodeFragment(this.location.pathname);\n        var rootPath = path.slice(0, this.root.length - 1) + '/';\n        return rootPath === this.root;\n      },\n      // Unicode characters in `location.pathname` are percent encoded so they're\n      // decoded for comparison. `%25` should not be decoded since it may be part\n      // of an encoded parameter.\n      decodeFragment: function (fragment) {\n        return decodeURI(fragment.replace(/%25/g, '%2525'));\n      },\n      // In IE6, the hash fragment and search params are incorrect if the\n      // fragment contains `?`.\n      getSearch: function () {\n        var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n        return match ? match[0] : '';\n      },\n      // Gets the true hash value. Cannot use location.hash directly due to bug\n      // in Firefox where location.hash will always be decoded.\n      getHash: function (window) {\n        var match = (window || this).location.href.match(/#(.*)$/);\n        return match ? match[1] : '';\n      },\n      // Get the pathname and search params, without the root.\n      getPath: function () {\n        var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n        return path.charAt(0) === '/' ? path.slice(1) : path;\n      },\n      // Get the cross-browser normalized URL fragment from the path or hash.\n      getFragment: function (fragment) {\n        if (fragment == null) {\n          if (this._usePushState || !this._wantsHashChange) {\n            fragment = this.getPath();\n          } else {\n            fragment = this.getHash();\n          }\n        }\n        return fragment.replace(routeStripper, '');\n      },\n      // Start the hash change handling, returning `true` if the current URL matches\n      // an existing route, and `false` otherwise.\n      start: function (options) {\n        if (History.started) throw new Error('Backbone.history has already been started');\n        History.started = true; // Figure out the initial configuration. Do we need an iframe?\n        // Is pushState desired ... is it available?\n\n        this.options = _.extend({\n          root: '/'\n        }, this.options, options);\n        this.root = this.options.root;\n        this._wantsHashChange = this.options.hashChange !== false;\n        this._hasHashChange = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n        this._useHashChange = this._wantsHashChange && this._hasHashChange;\n        this._wantsPushState = !!this.options.pushState;\n        this._hasPushState = !!(this.history && this.history.pushState);\n        this._usePushState = this._wantsPushState && this._hasPushState;\n        this.fragment = this.getFragment(); // Normalize root to always include a leading and trailing slash.\n\n        this.root = ('/' + this.root + '/').replace(rootStripper, '/'); // Transition from hashChange to pushState or vice versa if both are\n        // requested.\n\n        if (this._wantsHashChange && this._wantsPushState) {\n          // If we've started off with a route from a `pushState`-enabled\n          // browser, but we're currently in a browser that doesn't support it...\n          if (!this._hasPushState && !this.atRoot()) {\n            var rootPath = this.root.slice(0, -1) || '/';\n            this.location.replace(rootPath + '#' + this.getPath()); // Return immediately as browser will do redirect to new url\n\n            return true; // Or if we've started out with a hash-based route, but we're currently\n            // in a browser where it could be `pushState`-based instead...\n          } else if (this._hasPushState && this.atRoot()) {\n            this.navigate(this.getHash(), {\n              replace: true\n            });\n          }\n        } // Proxy an iframe to handle location events if the browser doesn't\n        // support the `hashchange` event, HTML5 history, or the user wants\n        // `hashChange` but not `pushState`.\n\n        if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n          this.iframe = document.createElement('iframe');\n          this.iframe.src = 'javascript:0';\n          this.iframe.style.display = 'none';\n          this.iframe.tabIndex = -1;\n          var body = document.body; // Using `appendChild` will throw on IE < 9 if the document is not ready.\n\n          var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n          iWindow.document.open();\n          iWindow.document.close();\n          iWindow.location.hash = '#' + this.fragment;\n        } // Add a cross-platform `addEventListener` shim for older browsers.\n\n        var addEventListener = window.addEventListener || function (eventName, listener) {\n          return attachEvent('on' + eventName, listener);\n        }; // Depending on whether we're using pushState or hashes, and whether\n        // 'onhashchange' is supported, determine how we check the URL state.\n\n        if (this._usePushState) {\n          addEventListener('popstate', this.checkUrl, false);\n        } else if (this._useHashChange && !this.iframe) {\n          addEventListener('hashchange', this.checkUrl, false);\n        } else if (this._wantsHashChange) {\n          this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n        }\n        if (!this.options.silent) return this.loadUrl();\n      },\n      // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n      // but possibly useful for unit testing Routers.\n      stop: function () {\n        // Add a cross-platform `removeEventListener` shim for older browsers.\n        var removeEventListener = window.removeEventListener || function (eventName, listener) {\n          return detachEvent('on' + eventName, listener);\n        }; // Remove window listeners.\n\n        if (this._usePushState) {\n          removeEventListener('popstate', this.checkUrl, false);\n        } else if (this._useHashChange && !this.iframe) {\n          removeEventListener('hashchange', this.checkUrl, false);\n        } // Clean up the iframe if necessary.\n\n        if (this.iframe) {\n          document.body.removeChild(this.iframe);\n          this.iframe = null;\n        } // Some environments will throw when clearing an undefined interval.\n\n        if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n        History.started = false;\n      },\n      // Add a route to be tested when the fragment changes. Routes added later\n      // may override previous routes.\n      route: function (route, callback) {\n        this.handlers.unshift({\n          route: route,\n          callback: callback\n        });\n      },\n      // Checks the current URL to see if it has changed, and if it has,\n      // calls `loadUrl`, normalizing across the hidden iframe.\n      checkUrl: function (e) {\n        var current = this.getFragment(); // If the user pressed the back button, the iframe's hash will have\n        // changed and we should use that for comparison.\n\n        if (current === this.fragment && this.iframe) {\n          current = this.getHash(this.iframe.contentWindow);\n        }\n        if (current === this.fragment) return false;\n        if (this.iframe) this.navigate(current);\n        this.loadUrl();\n      },\n      // Attempt to load the current URL fragment. If a route succeeds with a\n      // match, returns `true`. If no defined routes matches the fragment,\n      // returns `false`.\n      loadUrl: function (fragment) {\n        // If the root doesn't match, no routes can match either.\n        if (!this.matchRoot()) return false;\n        fragment = this.fragment = this.getFragment(fragment);\n        return _.some(this.handlers, function (handler) {\n          if (handler.route.test(fragment)) {\n            handler.callback(fragment);\n            return true;\n          }\n        });\n      },\n      // Save a fragment into the hash history, or replace the URL state if the\n      // 'replace' option is passed. You are responsible for properly URL-encoding\n      // the fragment in advance.\n      //\n      // The options object can contain `trigger: true` if you wish to have the\n      // route callback be fired (not usually desirable), or `replace: true`, if\n      // you wish to modify the current URL without adding an entry to the history.\n      navigate: function (fragment, options) {\n        if (!History.started) return false;\n        if (!options || options === true) options = {\n          trigger: !!options\n        }; // Normalize the fragment.\n\n        fragment = this.getFragment(fragment || ''); // Don't include a trailing slash on the root.\n\n        var rootPath = this.root;\n        if (fragment === '' || fragment.charAt(0) === '?') {\n          rootPath = rootPath.slice(0, -1) || '/';\n        }\n        var url = rootPath + fragment; // Strip the fragment of the query and hash for matching.\n\n        fragment = fragment.replace(pathStripper, ''); // Decode for matching.\n\n        var decodedFragment = this.decodeFragment(fragment);\n        if (this.fragment === decodedFragment) return;\n        this.fragment = decodedFragment; // If pushState is available, we use it to set the fragment as a real URL.\n\n        if (this._usePushState) {\n          this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url); // If hash changes haven't been explicitly disabled, update the hash\n          // fragment to store history.\n        } else if (this._wantsHashChange) {\n          this._updateHash(this.location, fragment, options.replace);\n          if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n            var iWindow = this.iframe.contentWindow; // Opening and closing the iframe tricks IE7 and earlier to push a\n            // history entry on hash-tag change.  When replace is true, we don't\n            // want this.\n\n            if (!options.replace) {\n              iWindow.document.open();\n              iWindow.document.close();\n            }\n            this._updateHash(iWindow.location, fragment, options.replace);\n          } // If you've told us that you explicitly don't want fallback hashchange-\n          // based history, then `navigate` becomes a page refresh.\n        } else {\n          return this.location.assign(url);\n        }\n        if (options.trigger) return this.loadUrl(fragment);\n      },\n      // Update the hash location, either replacing the current entry, or adding\n      // a new one to the browser history.\n      _updateHash: function (location, fragment, replace) {\n        if (replace) {\n          var href = location.href.replace(/(javascript:|#).*$/, '');\n          location.replace(href + '#' + fragment);\n        } else {\n          // Some browsers require that `hash` contains a leading #.\n          location.hash = '#' + fragment;\n        }\n      }\n    }); // Create the default Backbone.history.\n\n    Backbone.history = new History(); // Helpers\n    // -------\n    // Helper function to correctly set up the prototype chain for subclasses.\n    // Similar to `goog.inherits`, but uses a hash of prototype properties and\n    // class properties to be extended.\n\n    var extend = function (protoProps, staticProps) {\n      var parent = this;\n      var child; // The constructor function for the new subclass is either defined by you\n      // (the \"constructor\" property in your `extend` definition), or defaulted\n      // by us to simply call the parent constructor.\n\n      if (protoProps && _.has(protoProps, 'constructor')) {\n        child = protoProps.constructor;\n      } else {\n        child = function () {\n          return parent.apply(this, arguments);\n        };\n      } // Add static properties to the constructor function, if supplied.\n\n      _.extend(child, parent, staticProps); // Set the prototype chain to inherit from `parent`, without calling\n      // `parent`'s constructor function and add the prototype properties.\n\n      child.prototype = _.create(parent.prototype, protoProps);\n      child.prototype.constructor = child; // Set a convenience property in case the parent's prototype is needed\n      // later.\n\n      child.__super__ = parent.prototype;\n      return child;\n    }; // Set up inheritance for the model, collection, router, view and history.\n\n    Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend; // Throw an error when a URL is needed, and none is supplied.\n\n    var urlError = function () {\n      throw new Error('A \"url\" property or function must be specified');\n    }; // Wrap an optional error callback with a fallback error event.\n\n    var wrapError = function (model, options) {\n      var error = options.error;\n      options.error = function (resp) {\n        if (error) error.call(options.context, model, resp, options);\n        model.trigger('error', model, resp, options);\n      };\n    };\n    return Backbone;\n  });\n})(backbone, backbone.exports);\nvar Backbone = backbone.exports;\nexport { Backbone as default };","map":{"version":3,"names":["commonjsGlobal","b","backbone","j","jquery1_12_4","u","underscoreMin","module","exports","jQuery","factory","root","self","global","_","$","e","Backbone","previousBackbone","slice","Array","prototype","VERSION","noConflict","emulateHTTP","emulateJSON","Events","eventSplitter","_listening","eventsApi","iteratee","events","name","callback","opts","i","names","context","keys","length","test","split","on","_events","onApi","ctx","listening","listeners","_listeners","id","interop","listenTo","obj","_listenId","uniqueId","listeningTo","_listeningTo","Listening","error","tryCatchOn","options","handlers","count","push","off","offApi","stopListening","ids","isEmpty","cleanup","remaining","handler","_callback","once","onceMap","bind","listenToOnce","map","offer","apply","arguments","trigger","Math","max","args","triggerApi","objEvents","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","call","listener","unbind","extend","Model","attributes","attrs","preinitialize","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","validate","wait","method","isNew","patch","xhr","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","splice","array","insert","at","min","tail","singular","isArray","removed","_removeModels","added","merged","_isModel","toAdd","toMerge","toRemove","modelMap","sort","sortable","sortAttr","isString","existing","_prepareModel","_addReference","orderChanged","some","m","index","_removeReference","previousModels","pop","unshift","shift","_byId","modelId","where","first","findWhere","Error","isFunction","sortBy","pluck","create","callbackOpts","values","CollectionIterator","ITERATOR_VALUES","ITERATOR_KEYS","entries","ITERATOR_KEYSVALUES","indexOf","_onModelEvent","event","prevId","$$iterator","Symbol","iterator","kind","_collection","_kind","_index","next","value","done","View","pick","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","find","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","undelegate","_createElement","document","createElement","className","_setAttributes","addMethod","attribute","cb","defaultVal","addUnderscoreMethods","Class","methods","each","instance","isObject","modelMatcher","matcher","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","detect","filter","select","reject","every","any","include","includes","contains","invoke","toArray","size","head","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","chain","sample","partition","groupBy","countBy","indexBy","findIndex","findLastIndex","modelMethods","pairs","invert","omit","config","Base","mixin","mappings","functions","memo","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","checkUrl","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","rootPath","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","decodedFragment","title","_updateHash","assign","protoProps","staticProps","parent","child","__super__","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js"],"sourcesContent":["import { commonjsGlobal } from '../../../../_virtual/_commonjsHelpers.js';\nimport { b as backbone } from '../../../../_virtual/backbone.js';\nimport './jquery-1.12.4.js';\nimport '../../../../lib/underscore/underscore-min.js';\nimport { j as jquery1_12_4 } from '../../../../_virtual/jquery-1.12.4.js';\nimport { u as underscoreMin } from '../../../../_virtual/underscore-min.js';\n\n(function (module, exports) {\n  //     Backbone.js 1.4.0\n  //     (c) 2010-2019 Jeremy Ashkenas and DocumentCloud\n  //     Backbone may be freely distributed under the MIT license.\n  //     For all details and documentation:\n  //     http://backbonejs.org\n  const jQuery = jquery1_12_4.exports;\n\n  (function (factory) {\n    // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n    // We use `self` instead of `window` for `WebWorker` support.\n    var root = typeof self == 'object' && self.self === self && self || typeof commonjsGlobal == 'object' && commonjsGlobal.global === commonjsGlobal && commonjsGlobal; // Set up Backbone appropriately for the environment. Start with AMD.\n\n    {\n      var _ = underscoreMin.exports,\n          $;\n\n      try {\n        $ = jQuery;\n      } catch (e) {}\n\n      factory(root, exports, _, $); // Finally, as a browser global.\n    }\n  })(function (root, Backbone, _, $) {\n    // Initial Setup\n    // -------------\n    // Save the previous value of the `Backbone` variable, so that it can be\n    // restored later on, if `noConflict` is used.\n    var previousBackbone = root.Backbone; // Create a local reference to a common array method we'll want to use later.\n\n    var slice = Array.prototype.slice; // Current version of the library. Keep in sync with `package.json`.\n\n    Backbone.VERSION = '1.4.0'; // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n    // the `$` variable.\n\n    Backbone.$ = $; // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n    // to its previous owner. Returns a reference to this Backbone object.\n\n    Backbone.noConflict = function () {\n      root.Backbone = previousBackbone;\n      return this;\n    }; // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n    // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n    // set a `X-Http-Method-Override` header.\n\n\n    Backbone.emulateHTTP = false; // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n    // `application/json` requests ... this will encode the body as\n    // `application/x-www-form-urlencoded` instead and will send the model in a\n    // form param named `model`.\n\n    Backbone.emulateJSON = false; // Backbone.Events\n    // ---------------\n    // A module that can be mixed in to *any object* in order to provide it with\n    // a custom event channel. You may bind a callback to an event with `on` or\n    // remove with `off`; `trigger`-ing an event fires all callbacks in\n    // succession.\n    //\n    //     var object = {};\n    //     _.extend(object, Backbone.Events);\n    //     object.on('expand', function(){ alert('expanded'); });\n    //     object.trigger('expand');\n    //\n\n    var Events = Backbone.Events = {}; // Regular expression used to split event strings.\n\n    var eventSplitter = /\\s+/; // A private global variable to share between listeners and listenees.\n\n    var _listening; // Iterates over the standard `event, callback` (as well as the fancy multiple\n    // space-separated events `\"change blur\", callback` and jQuery-style event\n    // maps `{event: callback}`).\n\n\n    var eventsApi = function (iteratee, events, name, callback, opts) {\n      var i = 0,\n          names;\n\n      if (name && typeof name === 'object') {\n        // Handle event maps.\n        if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n\n        for (names = _.keys(name); i < names.length; i++) {\n          events = eventsApi(iteratee, events, names[i], name[names[i]], opts);\n        }\n      } else if (name && eventSplitter.test(name)) {\n        // Handle space-separated event names by delegating them individually.\n        for (names = name.split(eventSplitter); i < names.length; i++) {\n          events = iteratee(events, names[i], callback, opts);\n        }\n      } else {\n        // Finally, standard events.\n        events = iteratee(events, name, callback, opts);\n      }\n\n      return events;\n    }; // Bind an event to a `callback` function. Passing `\"all\"` will bind\n    // the callback to all events fired.\n\n\n    Events.on = function (name, callback, context) {\n      this._events = eventsApi(onApi, this._events || {}, name, callback, {\n        context: context,\n        ctx: this,\n        listening: _listening\n      });\n\n      if (_listening) {\n        var listeners = this._listeners || (this._listeners = {});\n        listeners[_listening.id] = _listening; // Allow the listening to use a counter, instead of tracking\n        // callbacks for library interop\n\n        _listening.interop = false;\n      }\n\n      return this;\n    }; // Inversion-of-control versions of `on`. Tell *this* object to listen to\n    // an event in another object... keeping track of what it's listening to\n    // for easier unbinding later.\n\n\n    Events.listenTo = function (obj, name, callback) {\n      if (!obj) return this;\n\n      var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n\n      var listeningTo = this._listeningTo || (this._listeningTo = {});\n      var listening = _listening = listeningTo[id]; // This object is not listening to any other events on `obj` yet.\n      // Setup the necessary references to track the listening callbacks.\n\n      if (!listening) {\n        this._listenId || (this._listenId = _.uniqueId('l'));\n        listening = _listening = listeningTo[id] = new Listening(this, obj);\n      } // Bind callbacks on obj.\n\n\n      var error = tryCatchOn(obj, name, callback, this);\n      _listening = void 0;\n      if (error) throw error; // If the target obj is not Backbone.Events, track events manually.\n\n      if (listening.interop) listening.on(name, callback);\n      return this;\n    }; // The reducing API that adds a callback to the `events` object.\n\n\n    var onApi = function (events, name, callback, options) {\n      if (callback) {\n        var handlers = events[name] || (events[name] = []);\n        var context = options.context,\n            ctx = options.ctx,\n            listening = options.listening;\n        if (listening) listening.count++;\n        handlers.push({\n          callback: callback,\n          context: context,\n          ctx: context || ctx,\n          listening: listening\n        });\n      }\n\n      return events;\n    }; // An try-catch guarded #on function, to prevent poisoning the global\n    // `_listening` variable.\n\n\n    var tryCatchOn = function (obj, name, callback, context) {\n      try {\n        obj.on(name, callback, context);\n      } catch (e) {\n        return e;\n      }\n    }; // Remove one or many callbacks. If `context` is null, removes all\n    // callbacks with that function. If `callback` is null, removes all\n    // callbacks for the event. If `name` is null, removes all bound\n    // callbacks for all events.\n\n\n    Events.off = function (name, callback, context) {\n      if (!this._events) return this;\n      this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n      });\n      return this;\n    }; // Tell this object to stop listening to either specific events ... or\n    // to every object it's currently listening to.\n\n\n    Events.stopListening = function (obj, name, callback) {\n      var listeningTo = this._listeningTo;\n      if (!listeningTo) return this;\n      var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n      for (var i = 0; i < ids.length; i++) {\n        var listening = listeningTo[ids[i]]; // If listening doesn't exist, this object is not currently\n        // listening to obj. Break out early.\n\n        if (!listening) break;\n        listening.obj.off(name, callback, this);\n        if (listening.interop) listening.off(name, callback);\n      }\n\n      if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n      return this;\n    }; // The reducing API that removes a callback from the `events` object.\n\n\n    var offApi = function (events, name, callback, options) {\n      if (!events) return;\n      var context = options.context,\n          listeners = options.listeners;\n      var i = 0,\n          names; // Delete all event listeners and \"drop\" events.\n\n      if (!name && !context && !callback) {\n        for (names = _.keys(listeners); i < names.length; i++) {\n          listeners[names[i]].cleanup();\n        }\n\n        return;\n      }\n\n      names = name ? [name] : _.keys(events);\n\n      for (; i < names.length; i++) {\n        name = names[i];\n        var handlers = events[name]; // Bail out if there are no events stored.\n\n        if (!handlers) break; // Find any remaining events.\n\n        var remaining = [];\n\n        for (var j = 0; j < handlers.length; j++) {\n          var handler = handlers[j];\n\n          if (callback && callback !== handler.callback && callback !== handler.callback._callback || context && context !== handler.context) {\n            remaining.push(handler);\n          } else {\n            var listening = handler.listening;\n            if (listening) listening.off(name, callback);\n          }\n        } // Replace events if there are any remaining.  Otherwise, clean up.\n\n\n        if (remaining.length) {\n          events[name] = remaining;\n        } else {\n          delete events[name];\n        }\n      }\n\n      return events;\n    }; // Bind an event to only be triggered a single time. After the first time\n    // the callback is invoked, its listener will be removed. If multiple events\n    // are passed in using the space-separated syntax, the handler will fire\n    // once for each event, not once for a combination of all events.\n\n\n    Events.once = function (name, callback, context) {\n      // Map the event into a `{event: once}` object.\n      var events = eventsApi(onceMap, {}, name, callback, this.off.bind(this));\n      if (typeof name === 'string' && context == null) callback = void 0;\n      return this.on(events, callback, context);\n    }; // Inversion-of-control versions of `once`.\n\n\n    Events.listenToOnce = function (obj, name, callback) {\n      // Map the event into a `{event: once}` object.\n      var events = eventsApi(onceMap, {}, name, callback, this.stopListening.bind(this, obj));\n      return this.listenTo(obj, events);\n    }; // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n    // `offer` unbinds the `onceWrapper` after it has been called.\n\n\n    var onceMap = function (map, name, callback, offer) {\n      if (callback) {\n        var once = map[name] = _.once(function () {\n          offer(name, once);\n          callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n      }\n\n      return map;\n    }; // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n\n\n    Events.trigger = function (name) {\n      if (!this._events) return this;\n      var length = Math.max(0, arguments.length - 1);\n      var args = Array(length);\n\n      for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n      eventsApi(triggerApi, this._events, name, void 0, args);\n      return this;\n    }; // Handles triggering the appropriate event callbacks.\n\n\n    var triggerApi = function (objEvents, name, callback, args) {\n      if (objEvents) {\n        var events = objEvents[name];\n        var allEvents = objEvents.all;\n        if (events && allEvents) allEvents = allEvents.slice();\n        if (events) triggerEvents(events, args);\n        if (allEvents) triggerEvents(allEvents, [name].concat(args));\n      }\n\n      return objEvents;\n    }; // A difficult-to-believe, but optimized internal dispatch function for\n    // triggering events. Tries to keep the usual cases speedy (most internal\n    // Backbone events have 3 arguments).\n\n\n    var triggerEvents = function (events, args) {\n      var ev,\n          i = -1,\n          l = events.length,\n          a1 = args[0],\n          a2 = args[1],\n          a3 = args[2];\n\n      switch (args.length) {\n        case 0:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx);\n\n          return;\n\n        case 1:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1);\n\n          return;\n\n        case 2:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2);\n\n          return;\n\n        case 3:\n          while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3);\n\n          return;\n\n        default:\n          while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);\n\n          return;\n      }\n    }; // A listening class that tracks and cleans up memory bindings\n    // when all callbacks have been offed.\n\n\n    var Listening = function (listener, obj) {\n      this.id = listener._listenId;\n      this.listener = listener;\n      this.obj = obj;\n      this.interop = true;\n      this.count = 0;\n      this._events = void 0;\n    };\n\n    Listening.prototype.on = Events.on; // Offs a callback (or several).\n    // Uses an optimized counter if the listenee uses Backbone.Events.\n    // Otherwise, falls back to manual tracking to support events\n    // library interop.\n\n    Listening.prototype.off = function (name, callback) {\n      var cleanup;\n\n      if (this.interop) {\n        this._events = eventsApi(offApi, this._events, name, callback, {\n          context: void 0,\n          listeners: void 0\n        });\n        cleanup = !this._events;\n      } else {\n        this.count--;\n        cleanup = this.count === 0;\n      }\n\n      if (cleanup) this.cleanup();\n    }; // Cleans up memory bindings between the listener and the listenee.\n\n\n    Listening.prototype.cleanup = function () {\n      delete this.listener._listeningTo[this.obj._listenId];\n      if (!this.interop) delete this.obj._listeners[this.id];\n    }; // Aliases for backwards compatibility.\n\n\n    Events.bind = Events.on;\n    Events.unbind = Events.off; // Allow the `Backbone` object to serve as a global event bus, for folks who\n    // want global \"pubsub\" in a convenient place.\n\n    _.extend(Backbone, Events); // Backbone.Model\n    // --------------\n    // Backbone **Models** are the basic data object in the framework --\n    // frequently representing a row in a table in a database on your server.\n    // A discrete chunk of data and a bunch of useful, related methods for\n    // performing computations and transformations on that data.\n    // Create a new model with the specified attributes. A client id (`cid`)\n    // is automatically generated and assigned for you.\n\n\n    var Model = Backbone.Model = function (attributes, options) {\n      var attrs = attributes || {};\n      options || (options = {});\n      this.preinitialize.apply(this, arguments);\n      this.cid = _.uniqueId(this.cidPrefix);\n      this.attributes = {};\n      if (options.collection) this.collection = options.collection;\n      if (options.parse) attrs = this.parse(attrs, options) || {};\n\n      var defaults = _.result(this, 'defaults');\n\n      attrs = _.defaults(_.extend({}, defaults, attrs), defaults);\n      this.set(attrs, options);\n      this.changed = {};\n      this.initialize.apply(this, arguments);\n    }; // Attach all inheritable methods to the Model prototype.\n\n\n    _.extend(Model.prototype, Events, {\n      // A hash of attributes whose current and previous value differ.\n      changed: null,\n      // The value returned during the last failed validation.\n      validationError: null,\n      // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n      // CouchDB users may want to set this to `\"_id\"`.\n      idAttribute: 'id',\n      // The prefix is used to create the client id which is used to identify models locally.\n      // You may want to override this if you're experiencing name clashes with model ids.\n      cidPrefix: 'c',\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the Model.\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // Return a copy of the model's `attributes` object.\n      toJSON: function (options) {\n        return _.clone(this.attributes);\n      },\n      // Proxy `Backbone.sync` by default -- but override this if you need\n      // custom syncing semantics for *this* particular model.\n      sync: function () {\n        return Backbone.sync.apply(this, arguments);\n      },\n      // Get the value of an attribute.\n      get: function (attr) {\n        return this.attributes[attr];\n      },\n      // Get the HTML-escaped value of an attribute.\n      escape: function (attr) {\n        return _.escape(this.get(attr));\n      },\n      // Returns `true` if the attribute contains a value that is not null\n      // or undefined.\n      has: function (attr) {\n        return this.get(attr) != null;\n      },\n      // Special-cased proxy to underscore's `_.matches` method.\n      matches: function (attrs) {\n        return !!_.iteratee(attrs, this)(this.attributes);\n      },\n      // Set a hash of model attributes on the object, firing `\"change\"`. This is\n      // the core primitive operation of a model, updating the data and notifying\n      // anyone who needs to know about the change in state. The heart of the beast.\n      set: function (key, val, options) {\n        if (key == null) return this; // Handle both `\"key\", value` and `{key: value}` -style arguments.\n\n        var attrs;\n\n        if (typeof key === 'object') {\n          attrs = key;\n          options = val;\n        } else {\n          (attrs = {})[key] = val;\n        }\n\n        options || (options = {}); // Run validation.\n\n        if (!this._validate(attrs, options)) return false; // Extract attributes and options.\n\n        var unset = options.unset;\n        var silent = options.silent;\n        var changes = [];\n        var changing = this._changing;\n        this._changing = true;\n\n        if (!changing) {\n          this._previousAttributes = _.clone(this.attributes);\n          this.changed = {};\n        }\n\n        var current = this.attributes;\n        var changed = this.changed;\n        var prev = this._previousAttributes; // For each `set` attribute, update or delete the current value.\n\n        for (var attr in attrs) {\n          val = attrs[attr];\n          if (!_.isEqual(current[attr], val)) changes.push(attr);\n\n          if (!_.isEqual(prev[attr], val)) {\n            changed[attr] = val;\n          } else {\n            delete changed[attr];\n          }\n\n          unset ? delete current[attr] : current[attr] = val;\n        } // Update the `id`.\n\n\n        if (this.idAttribute in attrs) this.id = this.get(this.idAttribute); // Trigger all relevant attribute changes.\n\n        if (!silent) {\n          if (changes.length) this._pending = options;\n\n          for (var i = 0; i < changes.length; i++) {\n            this.trigger('change:' + changes[i], this, current[changes[i]], options);\n          }\n        } // You might be wondering why there's a `while` loop here. Changes can\n        // be recursively nested within `\"change\"` events.\n\n\n        if (changing) return this;\n\n        if (!silent) {\n          while (this._pending) {\n            options = this._pending;\n            this._pending = false;\n            this.trigger('change', this, options);\n          }\n        }\n\n        this._pending = false;\n        this._changing = false;\n        return this;\n      },\n      // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n      // if the attribute doesn't exist.\n      unset: function (attr, options) {\n        return this.set(attr, void 0, _.extend({}, options, {\n          unset: true\n        }));\n      },\n      // Clear all attributes on the model, firing `\"change\"`.\n      clear: function (options) {\n        var attrs = {};\n\n        for (var key in this.attributes) attrs[key] = void 0;\n\n        return this.set(attrs, _.extend({}, options, {\n          unset: true\n        }));\n      },\n      // Determine if the model has changed since the last `\"change\"` event.\n      // If you specify an attribute name, determine if that attribute has changed.\n      hasChanged: function (attr) {\n        if (attr == null) return !_.isEmpty(this.changed);\n        return _.has(this.changed, attr);\n      },\n      // Return an object containing all the attributes that have changed, or\n      // false if there are no changed attributes. Useful for determining what\n      // parts of a view need to be updated and/or what attributes need to be\n      // persisted to the server. Unset attributes will be set to undefined.\n      // You can also pass an attributes object to diff against the model,\n      // determining if there *would be* a change.\n      changedAttributes: function (diff) {\n        if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n        var old = this._changing ? this._previousAttributes : this.attributes;\n        var changed = {};\n        var hasChanged;\n\n        for (var attr in diff) {\n          var val = diff[attr];\n          if (_.isEqual(old[attr], val)) continue;\n          changed[attr] = val;\n          hasChanged = true;\n        }\n\n        return hasChanged ? changed : false;\n      },\n      // Get the previous value of an attribute, recorded at the time the last\n      // `\"change\"` event was fired.\n      previous: function (attr) {\n        if (attr == null || !this._previousAttributes) return null;\n        return this._previousAttributes[attr];\n      },\n      // Get all of the attributes of the model at the time of the previous\n      // `\"change\"` event.\n      previousAttributes: function () {\n        return _.clone(this._previousAttributes);\n      },\n      // Fetch the model from the server, merging the response with the model's\n      // local attributes. Any changed attributes will trigger a \"change\" event.\n      fetch: function (options) {\n        options = _.extend({\n          parse: true\n        }, options);\n        var model = this;\n        var success = options.success;\n\n        options.success = function (resp) {\n          var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n          if (!model.set(serverAttrs, options)) return false;\n          if (success) success.call(options.context, model, resp, options);\n          model.trigger('sync', model, resp, options);\n        };\n\n        wrapError(this, options);\n        return this.sync('read', this, options);\n      },\n      // Set a hash of model attributes, and sync the model to the server.\n      // If the server returns an attributes hash that differs, the model's\n      // state will be `set` again.\n      save: function (key, val, options) {\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\n        var attrs;\n\n        if (key == null || typeof key === 'object') {\n          attrs = key;\n          options = val;\n        } else {\n          (attrs = {})[key] = val;\n        }\n\n        options = _.extend({\n          validate: true,\n          parse: true\n        }, options);\n        var wait = options.wait; // If we're not waiting and attributes exist, save acts as\n        // `set(attr).save(null, opts)` with validation. Otherwise, check if\n        // the model will be valid when the attributes, if any, are set.\n\n        if (attrs && !wait) {\n          if (!this.set(attrs, options)) return false;\n        } else if (!this._validate(attrs, options)) {\n          return false;\n        } // After a successful server-side save, the client is (optionally)\n        // updated with the server-side state.\n\n\n        var model = this;\n        var success = options.success;\n        var attributes = this.attributes;\n\n        options.success = function (resp) {\n          // Ensure attributes are restored during synchronous saves.\n          model.attributes = attributes;\n          var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n          if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n          if (serverAttrs && !model.set(serverAttrs, options)) return false;\n          if (success) success.call(options.context, model, resp, options);\n          model.trigger('sync', model, resp, options);\n        };\n\n        wrapError(this, options); // Set temporary attributes if `{wait: true}` to properly find new ids.\n\n        if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n        var method = this.isNew() ? 'create' : options.patch ? 'patch' : 'update';\n        if (method === 'patch' && !options.attrs) options.attrs = attrs;\n        var xhr = this.sync(method, this, options); // Restore attributes.\n\n        this.attributes = attributes;\n        return xhr;\n      },\n      // Destroy this model on the server if it was already persisted.\n      // Optimistically removes the model from its collection, if it has one.\n      // If `wait: true` is passed, waits for the server to respond before removal.\n      destroy: function (options) {\n        options = options ? _.clone(options) : {};\n        var model = this;\n        var success = options.success;\n        var wait = options.wait;\n\n        var destroy = function () {\n          model.stopListening();\n          model.trigger('destroy', model, model.collection, options);\n        };\n\n        options.success = function (resp) {\n          if (wait) destroy();\n          if (success) success.call(options.context, model, resp, options);\n          if (!model.isNew()) model.trigger('sync', model, resp, options);\n        };\n\n        var xhr = false;\n\n        if (this.isNew()) {\n          _.defer(options.success);\n        } else {\n          wrapError(this, options);\n          xhr = this.sync('delete', this, options);\n        }\n\n        if (!wait) destroy();\n        return xhr;\n      },\n      // Default URL for the model's representation on the server -- if you're\n      // using Backbone's restful methods, override this to change the endpoint\n      // that will be called.\n      url: function () {\n        var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();\n        if (this.isNew()) return base;\n        var id = this.get(this.idAttribute);\n        return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n      },\n      // **parse** converts a response into the hash of attributes to be `set` on\n      // the model. The default implementation is just to pass the response along.\n      parse: function (resp, options) {\n        return resp;\n      },\n      // Create a new model with identical attributes to this one.\n      clone: function () {\n        return new this.constructor(this.attributes);\n      },\n      // A model is new if it has never been saved to the server, and lacks an id.\n      isNew: function () {\n        return !this.has(this.idAttribute);\n      },\n      // Check if the model is currently in a valid state.\n      isValid: function (options) {\n        return this._validate({}, _.extend({}, options, {\n          validate: true\n        }));\n      },\n      // Run validation against the next complete set of model attributes,\n      // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n      _validate: function (attrs, options) {\n        if (!options.validate || !this.validate) return true;\n        attrs = _.extend({}, this.attributes, attrs);\n        var error = this.validationError = this.validate(attrs, options) || null;\n        if (!error) return true;\n        this.trigger('invalid', this, error, _.extend(options, {\n          validationError: error\n        }));\n        return false;\n      }\n    }); // Backbone.Collection\n    // -------------------\n    // If models tend to represent a single row of data, a Backbone Collection is\n    // more analogous to a table full of data ... or a small slice or page of that\n    // table, or a collection of rows that belong together for a particular reason\n    // -- all of the messages in this particular folder, all of the documents\n    // belonging to this particular author, and so on. Collections maintain\n    // indexes of their models, both in order, and for lookup by `id`.\n    // Create a new **Collection**, perhaps to contain a specific type of `model`.\n    // If a `comparator` is specified, the Collection will maintain\n    // its models in sort order, as they're added and removed.\n\n\n    var Collection = Backbone.Collection = function (models, options) {\n      options || (options = {});\n      this.preinitialize.apply(this, arguments);\n      if (options.model) this.model = options.model;\n      if (options.comparator !== void 0) this.comparator = options.comparator;\n\n      this._reset();\n\n      this.initialize.apply(this, arguments);\n      if (models) this.reset(models, _.extend({\n        silent: true\n      }, options));\n    }; // Default options for `Collection#set`.\n\n\n    var setOptions = {\n      add: true,\n      remove: true,\n      merge: true\n    };\n    var addOptions = {\n      add: true,\n      remove: false\n    }; // Splices `insert` into `array` at index `at`.\n\n    var splice = function (array, insert, at) {\n      at = Math.min(Math.max(at, 0), array.length);\n      var tail = Array(array.length - at);\n      var length = insert.length;\n      var i;\n\n      for (i = 0; i < tail.length; i++) tail[i] = array[i + at];\n\n      for (i = 0; i < length; i++) array[i + at] = insert[i];\n\n      for (i = 0; i < tail.length; i++) array[i + length + at] = tail[i];\n    }; // Define the Collection's inheritable methods.\n\n\n    _.extend(Collection.prototype, Events, {\n      // The default model for a collection is just a **Backbone.Model**.\n      // This should be overridden in most cases.\n      model: Model,\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the Collection.\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // The JSON representation of a Collection is an array of the\n      // models' attributes.\n      toJSON: function (options) {\n        return this.map(function (model) {\n          return model.toJSON(options);\n        });\n      },\n      // Proxy `Backbone.sync` by default.\n      sync: function () {\n        return Backbone.sync.apply(this, arguments);\n      },\n      // Add a model, or list of models to the set. `models` may be Backbone\n      // Models or raw JavaScript objects to be converted to Models, or any\n      // combination of the two.\n      add: function (models, options) {\n        return this.set(models, _.extend({\n          merge: false\n        }, options, addOptions));\n      },\n      // Remove a model, or a list of models from the set.\n      remove: function (models, options) {\n        options = _.extend({}, options);\n        var singular = !_.isArray(models);\n        models = singular ? [models] : models.slice();\n\n        var removed = this._removeModels(models, options);\n\n        if (!options.silent && removed.length) {\n          options.changes = {\n            added: [],\n            merged: [],\n            removed: removed\n          };\n          this.trigger('update', this, options);\n        }\n\n        return singular ? removed[0] : removed;\n      },\n      // Update a collection by `set`-ing a new list of models, adding new ones,\n      // removing models that are no longer present, and merging models that\n      // already exist in the collection, as necessary. Similar to **Model#set**,\n      // the core operation for updating the data contained by the collection.\n      set: function (models, options) {\n        if (models == null) return;\n        options = _.extend({}, setOptions, options);\n\n        if (options.parse && !this._isModel(models)) {\n          models = this.parse(models, options) || [];\n        }\n\n        var singular = !_.isArray(models);\n        models = singular ? [models] : models.slice();\n        var at = options.at;\n        if (at != null) at = +at;\n        if (at > this.length) at = this.length;\n        if (at < 0) at += this.length + 1;\n        var set = [];\n        var toAdd = [];\n        var toMerge = [];\n        var toRemove = [];\n        var modelMap = {};\n        var add = options.add;\n        var merge = options.merge;\n        var remove = options.remove;\n        var sort = false;\n        var sortable = this.comparator && at == null && options.sort !== false;\n        var sortAttr = _.isString(this.comparator) ? this.comparator : null; // Turn bare objects into model references, and prevent invalid models\n        // from being added.\n\n        var model, i;\n\n        for (i = 0; i < models.length; i++) {\n          model = models[i]; // If a duplicate is found, prevent it from being added and\n          // optionally merge it into the existing model.\n\n          var existing = this.get(model);\n\n          if (existing) {\n            if (merge && model !== existing) {\n              var attrs = this._isModel(model) ? model.attributes : model;\n              if (options.parse) attrs = existing.parse(attrs, options);\n              existing.set(attrs, options);\n              toMerge.push(existing);\n              if (sortable && !sort) sort = existing.hasChanged(sortAttr);\n            }\n\n            if (!modelMap[existing.cid]) {\n              modelMap[existing.cid] = true;\n              set.push(existing);\n            }\n\n            models[i] = existing; // If this is a new, valid model, push it to the `toAdd` list.\n          } else if (add) {\n            model = models[i] = this._prepareModel(model, options);\n\n            if (model) {\n              toAdd.push(model);\n\n              this._addReference(model, options);\n\n              modelMap[model.cid] = true;\n              set.push(model);\n            }\n          }\n        } // Remove stale models.\n\n\n        if (remove) {\n          for (i = 0; i < this.length; i++) {\n            model = this.models[i];\n            if (!modelMap[model.cid]) toRemove.push(model);\n          }\n\n          if (toRemove.length) this._removeModels(toRemove, options);\n        } // See if sorting is needed, update `length` and splice in new models.\n\n\n        var orderChanged = false;\n        var replace = !sortable && add && remove;\n\n        if (set.length && replace) {\n          orderChanged = this.length !== set.length || _.some(this.models, function (m, index) {\n            return m !== set[index];\n          });\n          this.models.length = 0;\n          splice(this.models, set, 0);\n          this.length = this.models.length;\n        } else if (toAdd.length) {\n          if (sortable) sort = true;\n          splice(this.models, toAdd, at == null ? this.length : at);\n          this.length = this.models.length;\n        } // Silently sort the collection if appropriate.\n\n\n        if (sort) this.sort({\n          silent: true\n        }); // Unless silenced, it's time to fire all appropriate add/sort/update events.\n\n        if (!options.silent) {\n          for (i = 0; i < toAdd.length; i++) {\n            if (at != null) options.index = at + i;\n            model = toAdd[i];\n            model.trigger('add', model, this, options);\n          }\n\n          if (sort || orderChanged) this.trigger('sort', this, options);\n\n          if (toAdd.length || toRemove.length || toMerge.length) {\n            options.changes = {\n              added: toAdd,\n              removed: toRemove,\n              merged: toMerge\n            };\n            this.trigger('update', this, options);\n          }\n        } // Return the added (or merged) model (or models).\n\n\n        return singular ? models[0] : models;\n      },\n      // When you have more items than you want to add or remove individually,\n      // you can reset the entire set with a new list of models, without firing\n      // any granular `add` or `remove` events. Fires `reset` when finished.\n      // Useful for bulk operations and optimizations.\n      reset: function (models, options) {\n        options = options ? _.clone(options) : {};\n\n        for (var i = 0; i < this.models.length; i++) {\n          this._removeReference(this.models[i], options);\n        }\n\n        options.previousModels = this.models;\n\n        this._reset();\n\n        models = this.add(models, _.extend({\n          silent: true\n        }, options));\n        if (!options.silent) this.trigger('reset', this, options);\n        return models;\n      },\n      // Add a model to the end of the collection.\n      push: function (model, options) {\n        return this.add(model, _.extend({\n          at: this.length\n        }, options));\n      },\n      // Remove a model from the end of the collection.\n      pop: function (options) {\n        var model = this.at(this.length - 1);\n        return this.remove(model, options);\n      },\n      // Add a model to the beginning of the collection.\n      unshift: function (model, options) {\n        return this.add(model, _.extend({\n          at: 0\n        }, options));\n      },\n      // Remove a model from the beginning of the collection.\n      shift: function (options) {\n        var model = this.at(0);\n        return this.remove(model, options);\n      },\n      // Slice out a sub-array of models from the collection.\n      slice: function () {\n        return slice.apply(this.models, arguments);\n      },\n      // Get a model from the set by id, cid, model object with id or cid\n      // properties, or an attributes object that is transformed through modelId.\n      get: function (obj) {\n        if (obj == null) return void 0;\n        return this._byId[obj] || this._byId[this.modelId(this._isModel(obj) ? obj.attributes : obj)] || obj.cid && this._byId[obj.cid];\n      },\n      // Returns `true` if the model is in the collection.\n      has: function (obj) {\n        return this.get(obj) != null;\n      },\n      // Get the model at the given index.\n      at: function (index) {\n        if (index < 0) index += this.length;\n        return this.models[index];\n      },\n      // Return models with matching attributes. Useful for simple cases of\n      // `filter`.\n      where: function (attrs, first) {\n        return this[first ? 'find' : 'filter'](attrs);\n      },\n      // Return the first model with matching attributes. Useful for simple cases\n      // of `find`.\n      findWhere: function (attrs) {\n        return this.where(attrs, true);\n      },\n      // Force the collection to re-sort itself. You don't need to call this under\n      // normal circumstances, as the set will maintain sort order as each item\n      // is added.\n      sort: function (options) {\n        var comparator = this.comparator;\n        if (!comparator) throw new Error('Cannot sort a set without a comparator');\n        options || (options = {});\n        var length = comparator.length;\n        if (_.isFunction(comparator)) comparator = comparator.bind(this); // Run sort based on type of `comparator`.\n\n        if (length === 1 || _.isString(comparator)) {\n          this.models = this.sortBy(comparator);\n        } else {\n          this.models.sort(comparator);\n        }\n\n        if (!options.silent) this.trigger('sort', this, options);\n        return this;\n      },\n      // Pluck an attribute from each model in the collection.\n      pluck: function (attr) {\n        return this.map(attr + '');\n      },\n      // Fetch the default set of models for this collection, resetting the\n      // collection when they arrive. If `reset: true` is passed, the response\n      // data will be passed through the `reset` method instead of `set`.\n      fetch: function (options) {\n        options = _.extend({\n          parse: true\n        }, options);\n        var success = options.success;\n        var collection = this;\n\n        options.success = function (resp) {\n          var method = options.reset ? 'reset' : 'set';\n          collection[method](resp, options);\n          if (success) success.call(options.context, collection, resp, options);\n          collection.trigger('sync', collection, resp, options);\n        };\n\n        wrapError(this, options);\n        return this.sync('read', this, options);\n      },\n      // Create a new instance of a model in this collection. Add the model to the\n      // collection immediately, unless `wait: true` is passed, in which case we\n      // wait for the server to agree.\n      create: function (model, options) {\n        options = options ? _.clone(options) : {};\n        var wait = options.wait;\n        model = this._prepareModel(model, options);\n        if (!model) return false;\n        if (!wait) this.add(model, options);\n        var collection = this;\n        var success = options.success;\n\n        options.success = function (m, resp, callbackOpts) {\n          if (wait) collection.add(m, callbackOpts);\n          if (success) success.call(callbackOpts.context, m, resp, callbackOpts);\n        };\n\n        model.save(null, options);\n        return model;\n      },\n      // **parse** converts a response into a list of models to be added to the\n      // collection. The default implementation is just to pass it through.\n      parse: function (resp, options) {\n        return resp;\n      },\n      // Create a new collection with an identical list of models as this one.\n      clone: function () {\n        return new this.constructor(this.models, {\n          model: this.model,\n          comparator: this.comparator\n        });\n      },\n      // Define how to uniquely identify models in the collection.\n      modelId: function (attrs) {\n        return attrs[this.model.prototype.idAttribute || 'id'];\n      },\n      // Get an iterator of all models in this collection.\n      values: function () {\n        return new CollectionIterator(this, ITERATOR_VALUES);\n      },\n      // Get an iterator of all model IDs in this collection.\n      keys: function () {\n        return new CollectionIterator(this, ITERATOR_KEYS);\n      },\n      // Get an iterator of all [ID, model] tuples in this collection.\n      entries: function () {\n        return new CollectionIterator(this, ITERATOR_KEYSVALUES);\n      },\n      // Private method to reset all internal state. Called when the collection\n      // is first initialized or reset.\n      _reset: function () {\n        this.length = 0;\n        this.models = [];\n        this._byId = {};\n      },\n      // Prepare a hash of attributes (or other model) to be added to this\n      // collection.\n      _prepareModel: function (attrs, options) {\n        if (this._isModel(attrs)) {\n          if (!attrs.collection) attrs.collection = this;\n          return attrs;\n        }\n\n        options = options ? _.clone(options) : {};\n        options.collection = this;\n        var model = new this.model(attrs, options);\n        if (!model.validationError) return model;\n        this.trigger('invalid', this, model.validationError, options);\n        return false;\n      },\n      // Internal method called by both remove and set.\n      _removeModels: function (models, options) {\n        var removed = [];\n\n        for (var i = 0; i < models.length; i++) {\n          var model = this.get(models[i]);\n          if (!model) continue;\n          var index = this.indexOf(model);\n          this.models.splice(index, 1);\n          this.length--; // Remove references before triggering 'remove' event to prevent an\n          // infinite loop. #3693\n\n          delete this._byId[model.cid];\n          var id = this.modelId(model.attributes);\n          if (id != null) delete this._byId[id];\n\n          if (!options.silent) {\n            options.index = index;\n            model.trigger('remove', model, this, options);\n          }\n\n          removed.push(model);\n\n          this._removeReference(model, options);\n        }\n\n        return removed;\n      },\n      // Method for checking whether an object should be considered a model for\n      // the purposes of adding to the collection.\n      _isModel: function (model) {\n        return model instanceof Model;\n      },\n      // Internal method to create a model's ties to a collection.\n      _addReference: function (model, options) {\n        this._byId[model.cid] = model;\n        var id = this.modelId(model.attributes);\n        if (id != null) this._byId[id] = model;\n        model.on('all', this._onModelEvent, this);\n      },\n      // Internal method to sever a model's ties to a collection.\n      _removeReference: function (model, options) {\n        delete this._byId[model.cid];\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n        if (this === model.collection) delete model.collection;\n        model.off('all', this._onModelEvent, this);\n      },\n      // Internal method called every time a model in the set fires an event.\n      // Sets need to update their indexes when models change ids. All other\n      // events simply proxy through. \"add\" and \"remove\" events that originate\n      // in other collections are ignored.\n      _onModelEvent: function (event, model, collection, options) {\n        if (model) {\n          if ((event === 'add' || event === 'remove') && collection !== this) return;\n          if (event === 'destroy') this.remove(model, options);\n\n          if (event === 'change') {\n            var prevId = this.modelId(model.previousAttributes());\n            var id = this.modelId(model.attributes);\n\n            if (prevId !== id) {\n              if (prevId != null) delete this._byId[prevId];\n              if (id != null) this._byId[id] = model;\n            }\n          }\n        }\n\n        this.trigger.apply(this, arguments);\n      }\n    }); // Defining an @@iterator method implements JavaScript's Iterable protocol.\n    // In modern ES2015 browsers, this value is found at Symbol.iterator.\n\n    /* global Symbol */\n\n\n    var $$iterator = typeof Symbol === 'function' && Symbol.iterator;\n\n    if ($$iterator) {\n      Collection.prototype[$$iterator] = Collection.prototype.values;\n    } // CollectionIterator\n    // ------------------\n    // A CollectionIterator implements JavaScript's Iterator protocol, allowing the\n    // use of `for of` loops in modern browsers and interoperation between\n    // Backbone.Collection and other JavaScript functions and third-party libraries\n    // which can operate on Iterables.\n\n\n    var CollectionIterator = function (collection, kind) {\n      this._collection = collection;\n      this._kind = kind;\n      this._index = 0;\n    }; // This \"enum\" defines the three possible kinds of values which can be emitted\n    // by a CollectionIterator that correspond to the values(), keys() and entries()\n    // methods on Collection, respectively.\n\n\n    var ITERATOR_VALUES = 1;\n    var ITERATOR_KEYS = 2;\n    var ITERATOR_KEYSVALUES = 3; // All Iterators should themselves be Iterable.\n\n    if ($$iterator) {\n      CollectionIterator.prototype[$$iterator] = function () {\n        return this;\n      };\n    }\n\n    CollectionIterator.prototype.next = function () {\n      if (this._collection) {\n        // Only continue iterating if the iterated collection is long enough.\n        if (this._index < this._collection.length) {\n          var model = this._collection.at(this._index);\n\n          this._index++; // Construct a value depending on what kind of values should be iterated.\n\n          var value;\n\n          if (this._kind === ITERATOR_VALUES) {\n            value = model;\n          } else {\n            var id = this._collection.modelId(model.attributes);\n\n            if (this._kind === ITERATOR_KEYS) {\n              value = id;\n            } else {\n              // ITERATOR_KEYSVALUES\n              value = [id, model];\n            }\n          }\n\n          return {\n            value: value,\n            done: false\n          };\n        } // Once exhausted, remove the reference to the collection so future\n        // calls to the next method always return done.\n\n\n        this._collection = void 0;\n      }\n\n      return {\n        value: void 0,\n        done: true\n      };\n    }; // Backbone.View\n    // -------------\n    // Backbone Views are almost more convention than they are actual code. A View\n    // is simply a JavaScript object that represents a logical chunk of UI in the\n    // DOM. This might be a single item, an entire list, a sidebar or panel, or\n    // even the surrounding frame which wraps your whole app. Defining a chunk of\n    // UI as a **View** allows you to define your DOM events declaratively, without\n    // having to worry about render order ... and makes it easy for the view to\n    // react to specific changes in the state of your models.\n    // Creating a Backbone.View creates its initial element outside of the DOM,\n    // if an existing element is not provided...\n\n\n    var View = Backbone.View = function (options) {\n      this.cid = _.uniqueId('view');\n      this.preinitialize.apply(this, arguments);\n\n      _.extend(this, _.pick(options, viewOptions));\n\n      this._ensureElement();\n\n      this.initialize.apply(this, arguments);\n    }; // Cached regex to split keys for `delegate`.\n\n\n    var delegateEventSplitter = /^(\\S+)\\s*(.*)$/; // List of view options to be set as properties.\n\n    var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events']; // Set up all inheritable **Backbone.View** properties and methods.\n\n    _.extend(View.prototype, Events, {\n      // The default `tagName` of a View's element is `\"div\"`.\n      tagName: 'div',\n      // jQuery delegate for element lookup, scoped to DOM elements within the\n      // current view. This should be preferred to global lookups where possible.\n      $: function (selector) {\n        return this.$el.find(selector);\n      },\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the View\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // **render** is the core function that your view should override, in order\n      // to populate its element (`this.el`), with the appropriate HTML. The\n      // convention is for **render** to always return `this`.\n      render: function () {\n        return this;\n      },\n      // Remove this view by taking the element out of the DOM, and removing any\n      // applicable Backbone.Events listeners.\n      remove: function () {\n        this._removeElement();\n\n        this.stopListening();\n        return this;\n      },\n      // Remove this view's element from the document and all event listeners\n      // attached to it. Exposed for subclasses using an alternative DOM\n      // manipulation API.\n      _removeElement: function () {\n        this.$el.remove();\n      },\n      // Change the view's element (`this.el` property) and re-delegate the\n      // view's events on the new element.\n      setElement: function (element) {\n        this.undelegateEvents();\n\n        this._setElement(element);\n\n        this.delegateEvents();\n        return this;\n      },\n      // Creates the `this.el` and `this.$el` references for this view using the\n      // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n      // context or an element. Subclasses can override this to utilize an\n      // alternative DOM manipulation API and are only required to set the\n      // `this.el` property.\n      _setElement: function (el) {\n        this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n        this.el = this.$el[0];\n      },\n      // Set callbacks, where `this.events` is a hash of\n      //\n      // *{\"event selector\": \"callback\"}*\n      //\n      //     {\n      //       'mousedown .title':  'edit',\n      //       'click .button':     'save',\n      //       'click .open':       function(e) { ... }\n      //     }\n      //\n      // pairs. Callbacks will be bound to the view, with `this` set properly.\n      // Uses event delegation for efficiency.\n      // Omitting the selector binds the event to `this.el`.\n      delegateEvents: function (events) {\n        events || (events = _.result(this, 'events'));\n        if (!events) return this;\n        this.undelegateEvents();\n\n        for (var key in events) {\n          var method = events[key];\n          if (!_.isFunction(method)) method = this[method];\n          if (!method) continue;\n          var match = key.match(delegateEventSplitter);\n          this.delegate(match[1], match[2], method.bind(this));\n        }\n\n        return this;\n      },\n      // Add a single event listener to the view's element (or a child element\n      // using `selector`). This only works for delegate-able events: not `focus`,\n      // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n      delegate: function (eventName, selector, listener) {\n        this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n        return this;\n      },\n      // Clears all callbacks previously bound to the view by `delegateEvents`.\n      // You usually don't need to use this, but may wish to if you have multiple\n      // Backbone views attached to the same DOM element.\n      undelegateEvents: function () {\n        if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n        return this;\n      },\n      // A finer-grained `undelegateEvents` for removing a single delegated event.\n      // `selector` and `listener` are both optional.\n      undelegate: function (eventName, selector, listener) {\n        this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n        return this;\n      },\n      // Produces a DOM element to be assigned to your view. Exposed for\n      // subclasses using an alternative DOM manipulation API.\n      _createElement: function (tagName) {\n        return document.createElement(tagName);\n      },\n      // Ensure that the View has a DOM element to render into.\n      // If `this.el` is a string, pass it through `$()`, take the first\n      // matching element, and re-assign it to `el`. Otherwise, create\n      // an element from the `id`, `className` and `tagName` properties.\n      _ensureElement: function () {\n        if (!this.el) {\n          var attrs = _.extend({}, _.result(this, 'attributes'));\n\n          if (this.id) attrs.id = _.result(this, 'id');\n          if (this.className) attrs['class'] = _.result(this, 'className');\n          this.setElement(this._createElement(_.result(this, 'tagName')));\n\n          this._setAttributes(attrs);\n        } else {\n          this.setElement(_.result(this, 'el'));\n        }\n      },\n      // Set attributes from a hash on this view's element.  Exposed for\n      // subclasses using an alternative DOM manipulation API.\n      _setAttributes: function (attributes) {\n        this.$el.attr(attributes);\n      }\n    }); // Proxy Backbone class methods to Underscore functions, wrapping the model's\n    // `attributes` object or collection's `models` array behind the scenes.\n    //\n    // collection.filter(function(model) { return model.get('age') > 10 });\n    // collection.each(this.addView);\n    //\n    // `Function#apply` can be slow so we use the method's arg count, if we know it.\n\n\n    var addMethod = function (base, length, method, attribute) {\n      switch (length) {\n        case 1:\n          return function () {\n            return base[method](this[attribute]);\n          };\n\n        case 2:\n          return function (value) {\n            return base[method](this[attribute], value);\n          };\n\n        case 3:\n          return function (iteratee, context) {\n            return base[method](this[attribute], cb(iteratee, this), context);\n          };\n\n        case 4:\n          return function (iteratee, defaultVal, context) {\n            return base[method](this[attribute], cb(iteratee, this), defaultVal, context);\n          };\n\n        default:\n          return function () {\n            var args = slice.call(arguments);\n            args.unshift(this[attribute]);\n            return base[method].apply(base, args);\n          };\n      }\n    };\n\n    var addUnderscoreMethods = function (Class, base, methods, attribute) {\n      _.each(methods, function (length, method) {\n        if (base[method]) Class.prototype[method] = addMethod(base, length, method, attribute);\n      });\n    }; // Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\n\n\n    var cb = function (iteratee, instance) {\n      if (_.isFunction(iteratee)) return iteratee;\n      if (_.isObject(iteratee) && !instance._isModel(iteratee)) return modelMatcher(iteratee);\n      if (_.isString(iteratee)) return function (model) {\n        return model.get(iteratee);\n      };\n      return iteratee;\n    };\n\n    var modelMatcher = function (attrs) {\n      var matcher = _.matches(attrs);\n\n      return function (model) {\n        return matcher(model.attributes);\n      };\n    }; // Underscore methods that we want to implement on the Collection.\n    // 90% of the core usefulness of Backbone Collections is actually implemented\n    // right here:\n\n\n    var collectionMethods = {\n      forEach: 3,\n      each: 3,\n      map: 3,\n      collect: 3,\n      reduce: 0,\n      foldl: 0,\n      inject: 0,\n      reduceRight: 0,\n      foldr: 0,\n      find: 3,\n      detect: 3,\n      filter: 3,\n      select: 3,\n      reject: 3,\n      every: 3,\n      all: 3,\n      some: 3,\n      any: 3,\n      include: 3,\n      includes: 3,\n      contains: 3,\n      invoke: 0,\n      max: 3,\n      min: 3,\n      toArray: 1,\n      size: 1,\n      first: 3,\n      head: 3,\n      take: 3,\n      initial: 3,\n      rest: 3,\n      tail: 3,\n      drop: 3,\n      last: 3,\n      without: 0,\n      difference: 0,\n      indexOf: 3,\n      shuffle: 1,\n      lastIndexOf: 3,\n      isEmpty: 1,\n      chain: 1,\n      sample: 3,\n      partition: 3,\n      groupBy: 3,\n      countBy: 3,\n      sortBy: 3,\n      indexBy: 3,\n      findIndex: 3,\n      findLastIndex: 3\n    }; // Underscore methods that we want to implement on the Model, mapped to the\n    // number of arguments they take.\n\n    var modelMethods = {\n      keys: 1,\n      values: 1,\n      pairs: 1,\n      invert: 1,\n      pick: 0,\n      omit: 0,\n      chain: 1,\n      isEmpty: 1\n    }; // Mix in each Underscore method as a proxy to `Collection#models`.\n\n    _.each([[Collection, collectionMethods, 'models'], [Model, modelMethods, 'attributes']], function (config) {\n      var Base = config[0],\n          methods = config[1],\n          attribute = config[2];\n\n      Base.mixin = function (obj) {\n        var mappings = _.reduce(_.functions(obj), function (memo, name) {\n          memo[name] = 0;\n          return memo;\n        }, {});\n\n        addUnderscoreMethods(Base, obj, mappings, attribute);\n      };\n\n      addUnderscoreMethods(Base, _, methods, attribute);\n    }); // Backbone.sync\n    // -------------\n    // Override this function to change the manner in which Backbone persists\n    // models to the server. You will be passed the type of request, and the\n    // model in question. By default, makes a RESTful Ajax request\n    // to the model's `url()`. Some possible customizations could be:\n    //\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\n    // * Send up the models as XML instead of JSON.\n    // * Persist models via WebSockets instead of Ajax.\n    //\n    // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n    // as `POST`, with a `_method` parameter containing the true HTTP method,\n    // as well as all requests with the body as `application/x-www-form-urlencoded`\n    // instead of `application/json` with the model in a param named `model`.\n    // Useful when interfacing with server-side languages like **PHP** that make\n    // it difficult to read the body of `PUT` requests.\n\n\n    Backbone.sync = function (method, model, options) {\n      var type = methodMap[method]; // Default options, unless specified.\n\n      _.defaults(options || (options = {}), {\n        emulateHTTP: Backbone.emulateHTTP,\n        emulateJSON: Backbone.emulateJSON\n      }); // Default JSON-request options.\n\n\n      var params = {\n        type: type,\n        dataType: 'json'\n      }; // Ensure that we have a URL.\n\n      if (!options.url) {\n        params.url = _.result(model, 'url') || urlError();\n      } // Ensure that we have the appropriate request data.\n\n\n      if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n        params.contentType = 'application/json';\n        params.data = JSON.stringify(options.attrs || model.toJSON(options));\n      } // For older servers, emulate JSON by encoding the request into an HTML-form.\n\n\n      if (options.emulateJSON) {\n        params.contentType = 'application/x-www-form-urlencoded';\n        params.data = params.data ? {\n          model: params.data\n        } : {};\n      } // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n      // And an `X-HTTP-Method-Override` header.\n\n\n      if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n        params.type = 'POST';\n        if (options.emulateJSON) params.data._method = type;\n        var beforeSend = options.beforeSend;\n\n        options.beforeSend = function (xhr) {\n          xhr.setRequestHeader('X-HTTP-Method-Override', type);\n          if (beforeSend) return beforeSend.apply(this, arguments);\n        };\n      } // Don't process data on a non-GET request.\n\n\n      if (params.type !== 'GET' && !options.emulateJSON) {\n        params.processData = false;\n      } // Pass along `textStatus` and `errorThrown` from jQuery.\n\n\n      var error = options.error;\n\n      options.error = function (xhr, textStatus, errorThrown) {\n        options.textStatus = textStatus;\n        options.errorThrown = errorThrown;\n        if (error) error.call(options.context, xhr, textStatus, errorThrown);\n      }; // Make the request, allowing the user to override any Ajax options.\n\n\n      var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n      model.trigger('request', model, xhr, options);\n      return xhr;\n    }; // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n\n\n    var methodMap = {\n      create: 'POST',\n      update: 'PUT',\n      patch: 'PATCH',\n      delete: 'DELETE',\n      read: 'GET'\n    }; // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n    // Override this if you'd like to use a different library.\n\n    Backbone.ajax = function () {\n      return Backbone.$.ajax.apply(Backbone.$, arguments);\n    }; // Backbone.Router\n    // ---------------\n    // Routers map faux-URLs to actions, and fire events when routes are\n    // matched. Creating a new one sets its `routes` hash, if not set statically.\n\n\n    var Router = Backbone.Router = function (options) {\n      options || (options = {});\n      this.preinitialize.apply(this, arguments);\n      if (options.routes) this.routes = options.routes;\n\n      this._bindRoutes();\n\n      this.initialize.apply(this, arguments);\n    }; // Cached regular expressions for matching named param parts and splatted\n    // parts of route strings.\n\n\n    var optionalParam = /\\((.*?)\\)/g;\n    var namedParam = /(\\(\\?)?:\\w+/g;\n    var splatParam = /\\*\\w+/g;\n    var escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g; // Set up all inheritable **Backbone.Router** properties and methods.\n\n    _.extend(Router.prototype, Events, {\n      // preinitialize is an empty function by default. You can override it with a function\n      // or object.  preinitialize will run before any instantiation logic is run in the Router.\n      preinitialize: function () {},\n      // Initialize is an empty function by default. Override it with your own\n      // initialization logic.\n      initialize: function () {},\n      // Manually bind a single named route to a callback. For example:\n      //\n      //     this.route('search/:query/p:num', 'search', function(query, num) {\n      //       ...\n      //     });\n      //\n      route: function (route, name, callback) {\n        if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n\n        if (_.isFunction(name)) {\n          callback = name;\n          name = '';\n        }\n\n        if (!callback) callback = this[name];\n        var router = this;\n        Backbone.history.route(route, function (fragment) {\n          var args = router._extractParameters(route, fragment);\n\n          if (router.execute(callback, args, name) !== false) {\n            router.trigger.apply(router, ['route:' + name].concat(args));\n            router.trigger('route', name, args);\n            Backbone.history.trigger('route', router, name, args);\n          }\n        });\n        return this;\n      },\n      // Execute a route handler with the provided parameters.  This is an\n      // excellent place to do pre-route setup or post-route cleanup.\n      execute: function (callback, args, name) {\n        if (callback) callback.apply(this, args);\n      },\n      // Simple proxy to `Backbone.history` to save a fragment into the history.\n      navigate: function (fragment, options) {\n        Backbone.history.navigate(fragment, options);\n        return this;\n      },\n      // Bind all defined routes to `Backbone.history`. We have to reverse the\n      // order of the routes here to support behavior where the most general\n      // routes can be defined at the bottom of the route map.\n      _bindRoutes: function () {\n        if (!this.routes) return;\n        this.routes = _.result(this, 'routes');\n\n        var route,\n            routes = _.keys(this.routes);\n\n        while ((route = routes.pop()) != null) {\n          this.route(route, this.routes[route]);\n        }\n      },\n      // Convert a route string into a regular expression, suitable for matching\n      // against the current location hash.\n      _routeToRegExp: function (route) {\n        route = route.replace(escapeRegExp, '\\\\$&').replace(optionalParam, '(?:$1)?').replace(namedParam, function (match, optional) {\n          return optional ? match : '([^/?]+)';\n        }).replace(splatParam, '([^?]*?)');\n        return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n      },\n      // Given a route, and a URL fragment that it matches, return the array of\n      // extracted decoded parameters. Empty or unmatched parameters will be\n      // treated as `null` to normalize cross-browser behavior.\n      _extractParameters: function (route, fragment) {\n        var params = route.exec(fragment).slice(1);\n        return _.map(params, function (param, i) {\n          // Don't decode the search params.\n          if (i === params.length - 1) return param || null;\n          return param ? decodeURIComponent(param) : null;\n        });\n      }\n    }); // Backbone.History\n    // ----------------\n    // Handles cross-browser history management, based on either\n    // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n    // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n    // and URL fragments. If the browser supports neither (old IE, natch),\n    // falls back to polling.\n\n\n    var History = Backbone.History = function () {\n      this.handlers = [];\n      this.checkUrl = this.checkUrl.bind(this); // Ensure that `History` can be used outside of the browser.\n\n      if (typeof window !== 'undefined') {\n        this.location = window.location;\n        this.history = window.history;\n      }\n    }; // Cached regex for stripping a leading hash/slash and trailing space.\n\n\n    var routeStripper = /^[#\\/]|\\s+$/g; // Cached regex for stripping leading and trailing slashes.\n\n    var rootStripper = /^\\/+|\\/+$/g; // Cached regex for stripping urls of hash.\n\n    var pathStripper = /#.*$/; // Has the history handling already been started?\n\n    History.started = false; // Set up all inheritable **Backbone.History** properties and methods.\n\n    _.extend(History.prototype, Events, {\n      // The default interval to poll for hash changes, if necessary, is\n      // twenty times a second.\n      interval: 50,\n      // Are we at the app root?\n      atRoot: function () {\n        var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n        return path === this.root && !this.getSearch();\n      },\n      // Does the pathname match the root?\n      matchRoot: function () {\n        var path = this.decodeFragment(this.location.pathname);\n        var rootPath = path.slice(0, this.root.length - 1) + '/';\n        return rootPath === this.root;\n      },\n      // Unicode characters in `location.pathname` are percent encoded so they're\n      // decoded for comparison. `%25` should not be decoded since it may be part\n      // of an encoded parameter.\n      decodeFragment: function (fragment) {\n        return decodeURI(fragment.replace(/%25/g, '%2525'));\n      },\n      // In IE6, the hash fragment and search params are incorrect if the\n      // fragment contains `?`.\n      getSearch: function () {\n        var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n        return match ? match[0] : '';\n      },\n      // Gets the true hash value. Cannot use location.hash directly due to bug\n      // in Firefox where location.hash will always be decoded.\n      getHash: function (window) {\n        var match = (window || this).location.href.match(/#(.*)$/);\n        return match ? match[1] : '';\n      },\n      // Get the pathname and search params, without the root.\n      getPath: function () {\n        var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n        return path.charAt(0) === '/' ? path.slice(1) : path;\n      },\n      // Get the cross-browser normalized URL fragment from the path or hash.\n      getFragment: function (fragment) {\n        if (fragment == null) {\n          if (this._usePushState || !this._wantsHashChange) {\n            fragment = this.getPath();\n          } else {\n            fragment = this.getHash();\n          }\n        }\n\n        return fragment.replace(routeStripper, '');\n      },\n      // Start the hash change handling, returning `true` if the current URL matches\n      // an existing route, and `false` otherwise.\n      start: function (options) {\n        if (History.started) throw new Error('Backbone.history has already been started');\n        History.started = true; // Figure out the initial configuration. Do we need an iframe?\n        // Is pushState desired ... is it available?\n\n        this.options = _.extend({\n          root: '/'\n        }, this.options, options);\n        this.root = this.options.root;\n        this._wantsHashChange = this.options.hashChange !== false;\n        this._hasHashChange = 'onhashchange' in window && (document.documentMode === void 0 || document.documentMode > 7);\n        this._useHashChange = this._wantsHashChange && this._hasHashChange;\n        this._wantsPushState = !!this.options.pushState;\n        this._hasPushState = !!(this.history && this.history.pushState);\n        this._usePushState = this._wantsPushState && this._hasPushState;\n        this.fragment = this.getFragment(); // Normalize root to always include a leading and trailing slash.\n\n        this.root = ('/' + this.root + '/').replace(rootStripper, '/'); // Transition from hashChange to pushState or vice versa if both are\n        // requested.\n\n        if (this._wantsHashChange && this._wantsPushState) {\n          // If we've started off with a route from a `pushState`-enabled\n          // browser, but we're currently in a browser that doesn't support it...\n          if (!this._hasPushState && !this.atRoot()) {\n            var rootPath = this.root.slice(0, -1) || '/';\n            this.location.replace(rootPath + '#' + this.getPath()); // Return immediately as browser will do redirect to new url\n\n            return true; // Or if we've started out with a hash-based route, but we're currently\n            // in a browser where it could be `pushState`-based instead...\n          } else if (this._hasPushState && this.atRoot()) {\n            this.navigate(this.getHash(), {\n              replace: true\n            });\n          }\n        } // Proxy an iframe to handle location events if the browser doesn't\n        // support the `hashchange` event, HTML5 history, or the user wants\n        // `hashChange` but not `pushState`.\n\n\n        if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n          this.iframe = document.createElement('iframe');\n          this.iframe.src = 'javascript:0';\n          this.iframe.style.display = 'none';\n          this.iframe.tabIndex = -1;\n          var body = document.body; // Using `appendChild` will throw on IE < 9 if the document is not ready.\n\n          var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n          iWindow.document.open();\n          iWindow.document.close();\n          iWindow.location.hash = '#' + this.fragment;\n        } // Add a cross-platform `addEventListener` shim for older browsers.\n\n\n        var addEventListener = window.addEventListener || function (eventName, listener) {\n          return attachEvent('on' + eventName, listener);\n        }; // Depending on whether we're using pushState or hashes, and whether\n        // 'onhashchange' is supported, determine how we check the URL state.\n\n\n        if (this._usePushState) {\n          addEventListener('popstate', this.checkUrl, false);\n        } else if (this._useHashChange && !this.iframe) {\n          addEventListener('hashchange', this.checkUrl, false);\n        } else if (this._wantsHashChange) {\n          this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n        }\n\n        if (!this.options.silent) return this.loadUrl();\n      },\n      // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n      // but possibly useful for unit testing Routers.\n      stop: function () {\n        // Add a cross-platform `removeEventListener` shim for older browsers.\n        var removeEventListener = window.removeEventListener || function (eventName, listener) {\n          return detachEvent('on' + eventName, listener);\n        }; // Remove window listeners.\n\n\n        if (this._usePushState) {\n          removeEventListener('popstate', this.checkUrl, false);\n        } else if (this._useHashChange && !this.iframe) {\n          removeEventListener('hashchange', this.checkUrl, false);\n        } // Clean up the iframe if necessary.\n\n\n        if (this.iframe) {\n          document.body.removeChild(this.iframe);\n          this.iframe = null;\n        } // Some environments will throw when clearing an undefined interval.\n\n\n        if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n        History.started = false;\n      },\n      // Add a route to be tested when the fragment changes. Routes added later\n      // may override previous routes.\n      route: function (route, callback) {\n        this.handlers.unshift({\n          route: route,\n          callback: callback\n        });\n      },\n      // Checks the current URL to see if it has changed, and if it has,\n      // calls `loadUrl`, normalizing across the hidden iframe.\n      checkUrl: function (e) {\n        var current = this.getFragment(); // If the user pressed the back button, the iframe's hash will have\n        // changed and we should use that for comparison.\n\n        if (current === this.fragment && this.iframe) {\n          current = this.getHash(this.iframe.contentWindow);\n        }\n\n        if (current === this.fragment) return false;\n        if (this.iframe) this.navigate(current);\n        this.loadUrl();\n      },\n      // Attempt to load the current URL fragment. If a route succeeds with a\n      // match, returns `true`. If no defined routes matches the fragment,\n      // returns `false`.\n      loadUrl: function (fragment) {\n        // If the root doesn't match, no routes can match either.\n        if (!this.matchRoot()) return false;\n        fragment = this.fragment = this.getFragment(fragment);\n        return _.some(this.handlers, function (handler) {\n          if (handler.route.test(fragment)) {\n            handler.callback(fragment);\n            return true;\n          }\n        });\n      },\n      // Save a fragment into the hash history, or replace the URL state if the\n      // 'replace' option is passed. You are responsible for properly URL-encoding\n      // the fragment in advance.\n      //\n      // The options object can contain `trigger: true` if you wish to have the\n      // route callback be fired (not usually desirable), or `replace: true`, if\n      // you wish to modify the current URL without adding an entry to the history.\n      navigate: function (fragment, options) {\n        if (!History.started) return false;\n        if (!options || options === true) options = {\n          trigger: !!options\n        }; // Normalize the fragment.\n\n        fragment = this.getFragment(fragment || ''); // Don't include a trailing slash on the root.\n\n        var rootPath = this.root;\n\n        if (fragment === '' || fragment.charAt(0) === '?') {\n          rootPath = rootPath.slice(0, -1) || '/';\n        }\n\n        var url = rootPath + fragment; // Strip the fragment of the query and hash for matching.\n\n        fragment = fragment.replace(pathStripper, ''); // Decode for matching.\n\n        var decodedFragment = this.decodeFragment(fragment);\n        if (this.fragment === decodedFragment) return;\n        this.fragment = decodedFragment; // If pushState is available, we use it to set the fragment as a real URL.\n\n        if (this._usePushState) {\n          this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url); // If hash changes haven't been explicitly disabled, update the hash\n          // fragment to store history.\n        } else if (this._wantsHashChange) {\n          this._updateHash(this.location, fragment, options.replace);\n\n          if (this.iframe && fragment !== this.getHash(this.iframe.contentWindow)) {\n            var iWindow = this.iframe.contentWindow; // Opening and closing the iframe tricks IE7 and earlier to push a\n            // history entry on hash-tag change.  When replace is true, we don't\n            // want this.\n\n            if (!options.replace) {\n              iWindow.document.open();\n              iWindow.document.close();\n            }\n\n            this._updateHash(iWindow.location, fragment, options.replace);\n          } // If you've told us that you explicitly don't want fallback hashchange-\n          // based history, then `navigate` becomes a page refresh.\n\n        } else {\n          return this.location.assign(url);\n        }\n\n        if (options.trigger) return this.loadUrl(fragment);\n      },\n      // Update the hash location, either replacing the current entry, or adding\n      // a new one to the browser history.\n      _updateHash: function (location, fragment, replace) {\n        if (replace) {\n          var href = location.href.replace(/(javascript:|#).*$/, '');\n          location.replace(href + '#' + fragment);\n        } else {\n          // Some browsers require that `hash` contains a leading #.\n          location.hash = '#' + fragment;\n        }\n      }\n    }); // Create the default Backbone.history.\n\n\n    Backbone.history = new History(); // Helpers\n    // -------\n    // Helper function to correctly set up the prototype chain for subclasses.\n    // Similar to `goog.inherits`, but uses a hash of prototype properties and\n    // class properties to be extended.\n\n    var extend = function (protoProps, staticProps) {\n      var parent = this;\n      var child; // The constructor function for the new subclass is either defined by you\n      // (the \"constructor\" property in your `extend` definition), or defaulted\n      // by us to simply call the parent constructor.\n\n      if (protoProps && _.has(protoProps, 'constructor')) {\n        child = protoProps.constructor;\n      } else {\n        child = function () {\n          return parent.apply(this, arguments);\n        };\n      } // Add static properties to the constructor function, if supplied.\n\n\n      _.extend(child, parent, staticProps); // Set the prototype chain to inherit from `parent`, without calling\n      // `parent`'s constructor function and add the prototype properties.\n\n\n      child.prototype = _.create(parent.prototype, protoProps);\n      child.prototype.constructor = child; // Set a convenience property in case the parent's prototype is needed\n      // later.\n\n      child.__super__ = parent.prototype;\n      return child;\n    }; // Set up inheritance for the model, collection, router, view and history.\n\n\n    Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend; // Throw an error when a URL is needed, and none is supplied.\n\n    var urlError = function () {\n      throw new Error('A \"url\" property or function must be specified');\n    }; // Wrap an optional error callback with a fallback error event.\n\n\n    var wrapError = function (model, options) {\n      var error = options.error;\n\n      options.error = function (resp) {\n        if (error) error.call(options.context, model, resp, options);\n        model.trigger('error', model, resp, options);\n      };\n    };\n\n    return Backbone;\n  });\n})(backbone, backbone.exports);\n\nvar Backbone = backbone.exports;\n\nexport { Backbone as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}