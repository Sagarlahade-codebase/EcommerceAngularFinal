{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { warn } from './util/console.js';\nimport { isPromise } from './util/types.js';\nclass PromiseQueue {\n  constructor(options = {\n    quiet: false\n  }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n  push(method, thisObject, ...args) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        if (this.options.quiet !== false) {\n          warn('Async method is being called but another async method is already running. ' + 'The new method will be delayed until the previous method completes.');\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    var queueItem = this.queue.shift();\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n    if (isPromise(res)) {\n      res.then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\nexport { PromiseQueue as default };","map":{"version":3,"names":["warn","isPromise","PromiseQueue","constructor","options","quiet","queue","running","push","method","thisObject","args","Promise","resolve","reject","length","run","queueItem","shift","res","apply","then","finally","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/PromiseQueue.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { warn } from './util/console.js';\nimport { isPromise } from './util/types.js';\n\nclass PromiseQueue {\n    constructor(options = { quiet: false }) {\n        this.queue = [];\n        this.running = false;\n        this.options = options;\n    }\n    push(method, thisObject, ...args) {\n        return new Promise((resolve, reject) => {\n            if (this.queue.length > 0) {\n                if (this.options.quiet !== false) {\n                    warn('Async method is being called but another async method is already running. ' +\n                        'The new method will be delayed until the previous method completes.');\n                }\n            }\n            this.queue.push({\n                method,\n                thisObject,\n                args,\n                resolve,\n                reject\n            });\n            this.run();\n        });\n    }\n    run() {\n        if (this.running) {\n            return;\n        }\n        if (this.queue.length === 0) {\n            return;\n        }\n        this.running = true;\n        var queueItem = this.queue.shift();\n        var res = queueItem.method.apply(queueItem.thisObject, queueItem.args);\n        if (isPromise(res)) {\n            res.then(queueItem.resolve, queueItem.reject).finally(() => {\n                this.running = false;\n                this.run();\n            });\n        }\n        else {\n            queueItem.resolve(res);\n            this.running = false;\n            this.run();\n        }\n    }\n}\n\nexport { PromiseQueue as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,IAAI,QAAQ,mBAAmB;AACxC,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAACC,OAAO,GAAG;IAAEC,KAAK,EAAE;EAAM,CAAC,EAAE;IACpC,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACH,OAAO,GAAGA,OAAO;EAC1B;EACAI,IAAIA,CAACC,MAAM,EAAEC,UAAU,EAAE,GAAGC,IAAI,EAAE;IAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpC,IAAI,IAAI,CAACR,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;QACvB,IAAI,IAAI,CAACX,OAAO,CAACC,KAAK,KAAK,KAAK,EAAE;UAC9BL,IAAI,CAAC,4EAA4E,GAC7E,qEAAqE,CAAC;QAC9E;MACJ;MACA,IAAI,CAACM,KAAK,CAACE,IAAI,CAAC;QACZC,MAAM;QACNC,UAAU;QACVC,IAAI;QACJE,OAAO;QACPC;MACJ,CAAC,CAAC;MACF,IAAI,CAACE,GAAG,CAAC,CAAC;IACd,CAAC,CAAC;EACN;EACAA,GAAGA,CAAA,EAAG;IACF,IAAI,IAAI,CAACT,OAAO,EAAE;MACd;IACJ;IACA,IAAI,IAAI,CAACD,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MACzB;IACJ;IACA,IAAI,CAACR,OAAO,GAAG,IAAI;IACnB,IAAIU,SAAS,GAAG,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,CAAC;IAClC,IAAIC,GAAG,GAAGF,SAAS,CAACR,MAAM,CAACW,KAAK,CAACH,SAAS,CAACP,UAAU,EAAEO,SAAS,CAACN,IAAI,CAAC;IACtE,IAAIV,SAAS,CAACkB,GAAG,CAAC,EAAE;MAChBA,GAAG,CAACE,IAAI,CAACJ,SAAS,CAACJ,OAAO,EAAEI,SAAS,CAACH,MAAM,CAAC,CAACQ,OAAO,CAAC,MAAM;QACxD,IAAI,CAACf,OAAO,GAAG,KAAK;QACpB,IAAI,CAACS,GAAG,CAAC,CAAC;MACd,CAAC,CAAC;IACN,CAAC,MACI;MACDC,SAAS,CAACJ,OAAO,CAACM,GAAG,CAAC;MACtB,IAAI,CAACZ,OAAO,GAAG,KAAK;MACpB,IAAI,CAACS,GAAG,CAAC,CAAC;IACd;EACJ;AACJ;AAEA,SAASd,YAAY,IAAIqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}