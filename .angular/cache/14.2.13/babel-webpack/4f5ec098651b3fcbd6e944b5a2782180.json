{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { validateVersionConfig, makeIdxState } from './idxState/index.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\nimport { isAuthApiError } from '../errors/index.js';\nimport { httpRequest } from '../http/request.js';\nimport { getOAuthDomain } from '../oidc/util/oauth.js';\nimport { IDX_API_VERSION } from '../constants.js';\nimport './types/api.js';\nimport '../myaccount/types.js';\nfunction introspect(_x) {\n  return _introspect.apply(this, arguments);\n}\nfunction _introspect() {\n  _introspect = _asyncToGenerator(function* (authClient, options = {}) {\n    var _a;\n    let rawIdxResponse;\n    let requestDidSucceed;\n    const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n    if (savedIdxResponse) {\n      rawIdxResponse = savedIdxResponse.rawIdxResponse;\n      requestDidSucceed = savedIdxResponse.requestDidSucceed;\n    }\n    if (!rawIdxResponse) {\n      const version = options.version || IDX_API_VERSION;\n      const domain = getOAuthDomain(authClient);\n      const {\n        interactionHandle,\n        stateHandle\n      } = options;\n      const withCredentials = (_a = options.withCredentials) !== null && _a !== void 0 ? _a : true;\n      try {\n        requestDidSucceed = true;\n        validateVersionConfig(version);\n        const url = `${domain}/idp/idx/introspect`;\n        const body = stateHandle ? {\n          stateToken: stateHandle\n        } : {\n          interactionHandle\n        };\n        const headers = {\n          'Content-Type': `application/ion+json; okta-version=${version}`,\n          Accept: `application/ion+json; okta-version=${version}`\n        };\n        rawIdxResponse = yield httpRequest(authClient, {\n          method: 'POST',\n          url,\n          headers,\n          withCredentials,\n          args: body\n        });\n      } catch (err) {\n        if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n          rawIdxResponse = err.xhr.responseJSON;\n          requestDidSucceed = false;\n        } else {\n          throw err;\n        }\n      }\n    }\n    const {\n      withCredentials\n    } = options;\n    return makeIdxState(authClient, rawIdxResponse, {\n      withCredentials\n    }, requestDidSucceed);\n  });\n  return _introspect.apply(this, arguments);\n}\nexport { introspect };","map":{"version":3,"names":["validateVersionConfig","makeIdxState","isRawIdxResponse","isAuthApiError","httpRequest","getOAuthDomain","IDX_API_VERSION","introspect","_x","_introspect","apply","arguments","_asyncToGenerator","authClient","options","_a","rawIdxResponse","requestDidSucceed","savedIdxResponse","transactionManager","loadIdxResponse","version","domain","interactionHandle","stateHandle","withCredentials","url","body","stateToken","headers","Accept","method","args","err","xhr","responseJSON"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/introspect.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { validateVersionConfig, makeIdxState } from './idxState/index.js';\nimport { isRawIdxResponse } from './types/idx-js.js';\nimport { isAuthApiError } from '../errors/index.js';\nimport { httpRequest } from '../http/request.js';\nimport { getOAuthDomain } from '../oidc/util/oauth.js';\nimport { IDX_API_VERSION } from '../constants.js';\nimport './types/api.js';\nimport '../myaccount/types.js';\n\nasync function introspect(authClient, options = {}) {\n    var _a;\n    let rawIdxResponse;\n    let requestDidSucceed;\n    const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n    if (savedIdxResponse) {\n        rawIdxResponse = savedIdxResponse.rawIdxResponse;\n        requestDidSucceed = savedIdxResponse.requestDidSucceed;\n    }\n    if (!rawIdxResponse) {\n        const version = options.version || IDX_API_VERSION;\n        const domain = getOAuthDomain(authClient);\n        const { interactionHandle, stateHandle } = options;\n        const withCredentials = (_a = options.withCredentials) !== null && _a !== void 0 ? _a : true;\n        try {\n            requestDidSucceed = true;\n            validateVersionConfig(version);\n            const url = `${domain}/idp/idx/introspect`;\n            const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n            const headers = {\n                'Content-Type': `application/ion+json; okta-version=${version}`,\n                Accept: `application/ion+json; okta-version=${version}`,\n            };\n            rawIdxResponse = await httpRequest(authClient, {\n                method: 'POST',\n                url,\n                headers,\n                withCredentials,\n                args: body\n            });\n        }\n        catch (err) {\n            if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n                rawIdxResponse = err.xhr.responseJSON;\n                requestDidSucceed = false;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    const { withCredentials } = options;\n    return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n\nexport { introspect };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,qBAAqB,EAAEC,YAAY,QAAQ,qBAAqB;AACzE,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,eAAe,QAAQ,iBAAiB;AACjD,OAAO,gBAAgB;AACvB,OAAO,uBAAuB;AAAC,SAEhBC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAChD,IAAIC,EAAE;IACN,IAAIC,cAAc;IAClB,IAAIC,iBAAiB;IACrB,MAAMC,gBAAgB,GAAGL,UAAU,CAACM,kBAAkB,CAACC,eAAe,CAACN,OAAO,CAAC;IAC/E,IAAII,gBAAgB,EAAE;MAClBF,cAAc,GAAGE,gBAAgB,CAACF,cAAc;MAChDC,iBAAiB,GAAGC,gBAAgB,CAACD,iBAAiB;IAC1D;IACA,IAAI,CAACD,cAAc,EAAE;MACjB,MAAMK,OAAO,GAAGP,OAAO,CAACO,OAAO,IAAIf,eAAe;MAClD,MAAMgB,MAAM,GAAGjB,cAAc,CAACQ,UAAU,CAAC;MACzC,MAAM;QAAEU,iBAAiB;QAAEC;MAAY,CAAC,GAAGV,OAAO;MAClD,MAAMW,eAAe,GAAG,CAACV,EAAE,GAAGD,OAAO,CAACW,eAAe,MAAM,IAAI,IAAIV,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;MAC5F,IAAI;QACAE,iBAAiB,GAAG,IAAI;QACxBjB,qBAAqB,CAACqB,OAAO,CAAC;QAC9B,MAAMK,GAAG,GAAG,GAAGJ,MAAM,qBAAqB;QAC1C,MAAMK,IAAI,GAAGH,WAAW,GAAG;UAAEI,UAAU,EAAEJ;QAAY,CAAC,GAAG;UAAED;QAAkB,CAAC;QAC9E,MAAMM,OAAO,GAAG;UACZ,cAAc,EAAE,sCAAsCR,OAAO,EAAE;UAC/DS,MAAM,EAAE,sCAAsCT,OAAO;QACzD,CAAC;QACDL,cAAc,SAASZ,WAAW,CAACS,UAAU,EAAE;UAC3CkB,MAAM,EAAE,MAAM;UACdL,GAAG;UACHG,OAAO;UACPJ,eAAe;UACfO,IAAI,EAAEL;QACV,CAAC,CAAC;MACN,CAAC,CACD,OAAOM,GAAG,EAAE;QACR,IAAI9B,cAAc,CAAC8B,GAAG,CAAC,IAAIA,GAAG,CAACC,GAAG,IAAIhC,gBAAgB,CAAC+B,GAAG,CAACC,GAAG,CAACC,YAAY,CAAC,EAAE;UAC1EnB,cAAc,GAAGiB,GAAG,CAACC,GAAG,CAACC,YAAY;UACrClB,iBAAiB,GAAG,KAAK;QAC7B,CAAC,MACI;UACD,MAAMgB,GAAG;QACb;MACJ;IACJ;IACA,MAAM;MAAER;IAAgB,CAAC,GAAGX,OAAO;IACnC,OAAOb,YAAY,CAACY,UAAU,EAAEG,cAAc,EAAE;MAAES;IAAgB,CAAC,EAAER,iBAAiB,CAAC;EAC3F,CAAC;EAAA,OAAAR,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASJ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}