{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { base64UrlToString } from '../crypto/base64.js';\nfunction decodeToken(token) {\n  var jwt = token.split('.');\n  var decodedToken;\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n  return decodedToken;\n}\nexport { decodeToken };","map":{"version":3,"names":["AuthSdkError","base64UrlToString","decodeToken","token","jwt","split","decodedToken","header","JSON","parse","payload","signature","e"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/decodeToken.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { base64UrlToString } from '../crypto/base64.js';\n\nfunction decodeToken(token) {\n    var jwt = token.split('.');\n    var decodedToken;\n    try {\n        decodedToken = {\n            header: JSON.parse(base64UrlToString(jwt[0])),\n            payload: JSON.parse(base64UrlToString(jwt[1])),\n            signature: jwt[2]\n        };\n    }\n    catch (e) {\n        throw new AuthSdkError('Malformed token');\n    }\n    return decodedToken;\n}\n\nexport { decodeToken };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,SAASC,iBAAiB,QAAQ,qBAAqB;AAEvD,SAASC,WAAWA,CAACC,KAAK,EAAE;EACxB,IAAIC,GAAG,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;EAC1B,IAAIC,YAAY;EAChB,IAAI;IACAA,YAAY,GAAG;MACXC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACR,iBAAiB,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7CM,OAAO,EAAEF,IAAI,CAACC,KAAK,CAACR,iBAAiB,CAACG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9CO,SAAS,EAAEP,GAAG,CAAC,CAAC;IACpB,CAAC;EACL,CAAC,CACD,OAAOQ,CAAC,EAAE;IACN,MAAM,IAAIZ,YAAY,CAAC,iBAAiB,CAAC;EAC7C;EACA,OAAOM,YAAY;AACvB;AAEA,SAASJ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}