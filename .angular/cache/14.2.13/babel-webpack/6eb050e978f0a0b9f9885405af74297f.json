{"ast":null,"code":"import { internal } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport TextBox from '../views/shared/TextBox.js';\n\n/* eslint max-statements: [2, 23],  max-depth: [2, 3], complexity: [2, 13] */\nlet {\n  SchemaFormFactory: SchemaFormFactory\n} = internal.views.forms.helpers;\nconst getParts = function (username) {\n  const usernameArr = username.split('');\n  const minPartsLength = 3;\n  const userNameParts = [];\n  const delimiters = [',', '.', '-', '_', '#', '@'];\n  let userNamePart = '';\n  oktaUnderscore.each(usernameArr, function (part) {\n    if (delimiters.indexOf(part) === -1) {\n      userNamePart += part;\n    } else {\n      if (userNamePart.length >= minPartsLength) {\n        userNameParts.push(oktaUnderscore.clone(userNamePart));\n      }\n      userNamePart = '';\n    }\n  });\n  if (userNamePart.length >= minPartsLength) {\n    userNameParts.push(oktaUnderscore.clone(userNamePart));\n  }\n  return userNameParts.filter(Boolean);\n};\nconst passwordContainsFormField = function (formField, password) {\n  if (!formField) {\n    return false;\n  }\n  formField = formField.toLowerCase();\n  password = password.toLowerCase();\n  const formFieldArr = getParts(formField); //check if each formField part contains password\n\n  for (var i = 0; i < formFieldArr.length; i++) {\n    const formFieldPart = formFieldArr[i];\n    if (password.indexOf(formFieldPart) !== -1) {\n      return true;\n    }\n  }\n  return false;\n};\nconst checkSubSchema = function (subSchema, value, model) {\n  const minLength = subSchema.get('minLength');\n  const maxLength = subSchema.get('maxLength');\n  const regex = subSchema.get('format');\n  if (oktaUnderscore.isNumber(minLength)) {\n    if (value.length < minLength) {\n      return false;\n    }\n  }\n  if (oktaUnderscore.isNumber(maxLength)) {\n    if (value.length > maxLength) {\n      return false;\n    }\n  }\n  const password = value;\n  if (oktaUnderscore.isString(regex)) {\n    // call passwordContainsFormField if regex is userName, firstName, lastName\n    if (regex === '^[#/userName]' || regex === '^[#/firstName]' || regex === '^[#/lastName]') {\n      const fieldName = regex.split('^[#/')[1].split(']')[0];\n      let fieldValue = model.get(fieldName);\n      if (fieldName === 'userName') {\n        // with email as login enabled, we only have email populated\n        // Therefore we fallback and run validation with email attribute.\n        fieldValue = model.has('userName') ? model.get('userName') : model.get('email');\n      }\n      return !passwordContainsFormField(fieldValue, password);\n    } else {\n      if (!new RegExp(regex).test(value)) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst checkSubSchemas = function (fieldName, model, subSchemas, showError) {\n  const value = model.get(fieldName);\n  if (!oktaUnderscore.isString(value)) {\n    return;\n  }\n  subSchemas.each(function (subSchema, index) {\n    const ele = oktaJQueryStatic('#subschemas-' + fieldName + ' .subschema-' + index); //hide password complexity if no password\n\n    if (value) {\n      ele.children('p').removeClass('default-schema');\n    } else {\n      ele.children('p').addClass('default-schema');\n    } // clear aria role and live-region for re-validation\n\n    ele.children('p').removeAttr('role').removeAttr('aria-live'); // reset errors\n\n    ele.removeClass('subschema-satisfied subschema-unsatisfied subschema-error'); // validate\n\n    if (checkSubSchema(subSchema, value, model)) {\n      // passed\n      ele.addClass('subschema-satisfied');\n      ele.find('p span').removeClass('error error-16-small');\n      ele.find('p span').addClass('confirm-16');\n    } else {\n      // failed\n      if (showError) {\n        ele.find('p span').removeClass('confirm-16');\n        ele.find('p span').addClass('error error-16-small');\n        ele.addClass('subschema-error subschema-unsatisfied');\n        ele.find('p') // set role=\"alert\" so the password requirement is read by\n        // screen-readers\n        .attr('role', 'alert') // set aria-live=\"polite\" so it will \"debounce\" and wait to read the\n        // message between keystrokes\n        .attr('aria-live', 'polite');\n      }\n    }\n  });\n};\nconst fnCreateInputOptions = function (schemaProperty) {\n  let inputOptions = SchemaFormFactory.createInputOptions(schemaProperty);\n  if (inputOptions.type === 'select') {\n    inputOptions = oktaUnderscore.extend(inputOptions, {\n      label: schemaProperty.get('title')\n    });\n  } else {\n    let placeholder = schemaProperty.get('title');\n    if (schemaProperty.get('required')) {\n      placeholder += ' *';\n    }\n    inputOptions = oktaUnderscore.extend(inputOptions, {\n      label: false,\n      'label-top': true,\n      placeholder: placeholder\n    });\n  }\n  const fieldName = schemaProperty.get('name');\n  switch (fieldName) {\n    case 'userName':\n      inputOptions.input = TextBox;\n      inputOptions.params = {\n        icon: 'person-16-gray'\n      };\n      break;\n    case 'password':\n      inputOptions.type = 'password';\n      inputOptions.input = TextBox;\n      inputOptions.params = {\n        icon: 'remote-lock-16'\n      };\n  }\n  const subSchemas = schemaProperty.get('subSchemas');\n  if (subSchemas) {\n    inputOptions.events = {\n      input: function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      focusout: function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:userName': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:firstName': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:lastName': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:email': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      }\n    };\n  }\n  return inputOptions;\n};\nvar RegistrationFormFactory = {\n  createInputOptions: fnCreateInputOptions,\n  getUsernameParts: getParts,\n  passwordContainsFormField: passwordContainsFormField\n};\nexport { RegistrationFormFactory as default };","map":{"version":3,"names":["internal","oktaJQueryStatic","oktaUnderscore","TextBox","SchemaFormFactory","views","forms","helpers","getParts","username","usernameArr","split","minPartsLength","userNameParts","delimiters","userNamePart","each","part","indexOf","length","push","clone","filter","Boolean","passwordContainsFormField","formField","password","toLowerCase","formFieldArr","i","formFieldPart","checkSubSchema","subSchema","value","model","minLength","get","maxLength","regex","isNumber","isString","fieldName","fieldValue","has","RegExp","test","checkSubSchemas","subSchemas","showError","index","ele","children","removeClass","addClass","removeAttr","find","attr","fnCreateInputOptions","schemaProperty","inputOptions","createInputOptions","type","extend","label","placeholder","input","params","icon","events","focusout","change:userName","change:firstName","change:lastName","change:email","RegistrationFormFactory","getUsernameParts","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/util/RegistrationFormFactory.js"],"sourcesContent":["import { internal } from '../../../packages/@okta/courage-dist/esm/src/CourageForSigninWidget.js';\nimport '../../../packages/@okta/courage-dist/esm/lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/handle-url.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-base64.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-i18n.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-img.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-markdown.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/util/handlebars/helper-xsrfTokenInput.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/vendor/lib/backbone.js';\nimport oktaJQueryStatic from '../../../packages/@okta/courage-dist/esm/src/courage/util/jquery-wrapper.js';\nimport oktaUnderscore from '../../../packages/@okta/courage-dist/esm/src/courage/util/underscore-wrapper.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/Model.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/models/BaseModel.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/framework/View.js';\nimport '../../../packages/@okta/courage-dist/esm/src/courage/views/Backbone.ListView.js';\nimport TextBox from '../views/shared/TextBox.js';\n\n/* eslint max-statements: [2, 23],  max-depth: [2, 3], complexity: [2, 13] */\nlet {\n  SchemaFormFactory: SchemaFormFactory\n} = internal.views.forms.helpers;\n\nconst getParts = function (username) {\n  const usernameArr = username.split('');\n  const minPartsLength = 3;\n  const userNameParts = [];\n  const delimiters = [',', '.', '-', '_', '#', '@'];\n  let userNamePart = '';\n\n  oktaUnderscore.each(usernameArr, function (part) {\n    if (delimiters.indexOf(part) === -1) {\n      userNamePart += part;\n    } else {\n      if (userNamePart.length >= minPartsLength) {\n        userNameParts.push(oktaUnderscore.clone(userNamePart));\n      }\n\n      userNamePart = '';\n    }\n  });\n\n  if (userNamePart.length >= minPartsLength) {\n    userNameParts.push(oktaUnderscore.clone(userNamePart));\n  }\n\n  return userNameParts.filter(Boolean);\n};\n\nconst passwordContainsFormField = function (formField, password) {\n  if (!formField) {\n    return false;\n  }\n\n  formField = formField.toLowerCase();\n  password = password.toLowerCase();\n  const formFieldArr = getParts(formField); //check if each formField part contains password\n\n  for (var i = 0; i < formFieldArr.length; i++) {\n    const formFieldPart = formFieldArr[i];\n\n    if (password.indexOf(formFieldPart) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst checkSubSchema = function (subSchema, value, model) {\n  const minLength = subSchema.get('minLength');\n  const maxLength = subSchema.get('maxLength');\n  const regex = subSchema.get('format');\n\n  if (oktaUnderscore.isNumber(minLength)) {\n    if (value.length < minLength) {\n      return false;\n    }\n  }\n\n  if (oktaUnderscore.isNumber(maxLength)) {\n    if (value.length > maxLength) {\n      return false;\n    }\n  }\n\n  const password = value;\n\n  if (oktaUnderscore.isString(regex)) {\n    // call passwordContainsFormField if regex is userName, firstName, lastName\n    if (regex === '^[#/userName]' || regex === '^[#/firstName]' || regex === '^[#/lastName]') {\n      const fieldName = regex.split('^[#/')[1].split(']')[0];\n      let fieldValue = model.get(fieldName);\n\n      if (fieldName === 'userName') {\n        // with email as login enabled, we only have email populated\n        // Therefore we fallback and run validation with email attribute.\n        fieldValue = model.has('userName') ? model.get('userName') : model.get('email');\n      }\n\n      return !passwordContainsFormField(fieldValue, password);\n    } else {\n      if (!new RegExp(regex).test(value)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst checkSubSchemas = function (fieldName, model, subSchemas, showError) {\n  const value = model.get(fieldName);\n\n  if (!oktaUnderscore.isString(value)) {\n    return;\n  }\n\n  subSchemas.each(function (subSchema, index) {\n    const ele = oktaJQueryStatic('#subschemas-' + fieldName + ' .subschema-' + index); //hide password complexity if no password\n\n    if (value) {\n      ele.children('p').removeClass('default-schema');\n    } else {\n      ele.children('p').addClass('default-schema');\n    } // clear aria role and live-region for re-validation\n\n\n    ele.children('p').removeAttr('role').removeAttr('aria-live'); // reset errors\n\n    ele.removeClass('subschema-satisfied subschema-unsatisfied subschema-error'); // validate\n\n    if (checkSubSchema(subSchema, value, model)) {\n      // passed\n      ele.addClass('subschema-satisfied');\n      ele.find('p span').removeClass('error error-16-small');\n      ele.find('p span').addClass('confirm-16');\n    } else {\n      // failed\n      if (showError) {\n        ele.find('p span').removeClass('confirm-16');\n        ele.find('p span').addClass('error error-16-small');\n        ele.addClass('subschema-error subschema-unsatisfied');\n        ele.find('p') // set role=\"alert\" so the password requirement is read by\n        // screen-readers\n        .attr('role', 'alert') // set aria-live=\"polite\" so it will \"debounce\" and wait to read the\n        // message between keystrokes\n        .attr('aria-live', 'polite');\n      }\n    }\n  });\n};\n\nconst fnCreateInputOptions = function (schemaProperty) {\n  let inputOptions = SchemaFormFactory.createInputOptions(schemaProperty);\n\n  if (inputOptions.type === 'select') {\n    inputOptions = oktaUnderscore.extend(inputOptions, {\n      label: schemaProperty.get('title')\n    });\n  } else {\n    let placeholder = schemaProperty.get('title');\n\n    if (schemaProperty.get('required')) {\n      placeholder += ' *';\n    }\n\n    inputOptions = oktaUnderscore.extend(inputOptions, {\n      label: false,\n      'label-top': true,\n      placeholder: placeholder\n    });\n  }\n\n  const fieldName = schemaProperty.get('name');\n\n  switch (fieldName) {\n    case 'userName':\n      inputOptions.input = TextBox;\n      inputOptions.params = {\n        icon: 'person-16-gray'\n      };\n      break;\n\n    case 'password':\n      inputOptions.type = 'password';\n      inputOptions.input = TextBox;\n      inputOptions.params = {\n        icon: 'remote-lock-16'\n      };\n  }\n\n  const subSchemas = schemaProperty.get('subSchemas');\n\n  if (subSchemas) {\n    inputOptions.events = {\n      input: function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      focusout: function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:userName': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:firstName': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:lastName': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      },\n      'change:email': function () {\n        checkSubSchemas(fieldName, this.model, subSchemas, true);\n      }\n    };\n  }\n\n  return inputOptions;\n};\n\nvar RegistrationFormFactory = {\n  createInputOptions: fnCreateInputOptions,\n  getUsernameParts: getParts,\n  passwordContainsFormField: passwordContainsFormField\n};\n\nexport { RegistrationFormFactory as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}