{"ast":null,"code":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\nclass ReEnrollAuthenticator extends Remediator {\n  mapCredentials() {\n    const {\n      newPassword\n    } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return {\n      passcode: newPassword\n    };\n  }\n  getInputCredentials(input) {\n    const challengeType = this.getAuthenticator().type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return Object.assign(Object.assign({}, input.form.value[0]), {\n      name\n    });\n  }\n}\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\nexport { ReEnrollAuthenticator };","map":{"version":3,"names":["Remediator","ReEnrollAuthenticator","mapCredentials","newPassword","values","passcode","getInputCredentials","input","challengeType","getAuthenticator","type","name","Object","assign","form","value","remediationName"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/remediators/ReEnrollAuthenticator.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator } from './Base/Remediator.js';\n\nclass ReEnrollAuthenticator extends Remediator {\n    mapCredentials() {\n        const { newPassword } = this.values;\n        if (!newPassword) {\n            return;\n        }\n        return {\n            passcode: newPassword,\n        };\n    }\n    getInputCredentials(input) {\n        const challengeType = this.getAuthenticator().type;\n        const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n        return Object.assign(Object.assign({}, input.form.value[0]), { name });\n    }\n}\nReEnrollAuthenticator.remediationName = 'reenroll-authenticator';\n\nexport { ReEnrollAuthenticator };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,MAAMC,qBAAqB,SAASD,UAAU,CAAC;EAC3CE,cAAcA,CAAA,EAAG;IACb,MAAM;MAAEC;IAAY,CAAC,GAAG,IAAI,CAACC,MAAM;IACnC,IAAI,CAACD,WAAW,EAAE;MACd;IACJ;IACA,OAAO;MACHE,QAAQ,EAAEF;IACd,CAAC;EACL;EACAG,mBAAmBA,CAACC,KAAK,EAAE;IACvB,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CAAC,CAAC,CAACC,IAAI;IAClD,MAAMC,IAAI,GAAGH,aAAa,KAAK,UAAU,GAAG,aAAa,GAAG,kBAAkB;IAC9E,OAAOI,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEN,KAAK,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;MAAEJ;IAAK,CAAC,CAAC;EAC1E;AACJ;AACAV,qBAAqB,CAACe,eAAe,GAAG,wBAAwB;AAEhE,SAASf,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}