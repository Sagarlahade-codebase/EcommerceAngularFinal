{"ast":null,"code":"import _Handlebars2 from '../../../../lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport oktaJQueryStatic from '../../util/jquery-wrapper.js';\nimport oktaUnderscore from '../../util/underscore-wrapper.js';\nimport ButtonFactory from '../../util/ButtonFactory.js';\nimport StringUtil from '../../util/StringUtil.js';\nimport BaseView from '../BaseView.js';\nimport Callout from '../components/Callout.js';\nimport Keys from '../../util/Keys.js';\nconst props = {\n  tagName: 'span',\n  attributes: function () {\n    return {\n      'data-se': 'o-form-input-' + this.getNameString()\n    };\n  },\n  /**\n   * default placeholder text when options.placeholder is not defined\n   */\n  defaultPlaceholder: '',\n  constructor: function (options) {\n    /* eslint complexity: [2, 9] */\n    options = oktaUnderscore.defaults(options || {}, {\n      inputId: options.id || oktaUnderscore.uniqueId('input'),\n      placeholder: this.defaultPlaceholder,\n      inlineValidation: true,\n      validateOnlyIfDirty: false\n    });\n    delete options.id; // decorate the `enable` and `disable` and toggle the `o-form-disabled` class.\n    // so we wont need to worry about this when overriding the methods\n\n    const self = this;\n    oktaUnderscore.each({\n      enable: 'removeClass',\n      disable: 'addClass'\n    }, function (method, action) {\n      self[action] = oktaUnderscore.wrap(self[action], function (fn) {\n        fn.apply(self, arguments);\n        self.$el[method]('o-form-disabled');\n      });\n    });\n    BaseView.call(this, options);\n    if (oktaUnderscore.result(options, 'readOnly') !== true && oktaUnderscore.result(options, 'read') === true) {\n      this.listenTo(this.model, 'change:__edit__', this.render);\n    }\n    if (oktaUnderscore.isFunction(this.focus)) {\n      this.focus = oktaUnderscore.debounce(oktaUnderscore.bind(this.focus, this), 50);\n    } // Enable inline validation if this is not the first field in the form.\n\n    if (!oktaUnderscore.result(options, 'validateOnlyIfDirty')) {\n      this.addInlineValidation();\n    }\n    this.addModelListeners();\n    this.$el.addClass('o-form-input-name-' + this.getNameString());\n  },\n  addAriaLabel: function () {\n    const ariaLabel = this.options.ariaLabel;\n    if (ariaLabel) {\n      this.$(':input').attr('aria-label', ariaLabel);\n    }\n  },\n  addInlineValidation: function () {\n    if (oktaUnderscore.result(this.options, 'inlineValidation')) {\n      this.$el.on('focusout', ':input', oktaUnderscore.bind(this.validate, this));\n    }\n  },\n  toModelValue: function () {\n    let value = this.val();\n    if (oktaUnderscore.isFunction(this.to)) {\n      value = this.to.call(this, value);\n    }\n    if (oktaUnderscore.isFunction(this.options.to)) {\n      value = this.options.to.call(this, value);\n    }\n    return value;\n  },\n  __getDependencyCalloutBtn: function (btnConfig) {\n    const self = this;\n    const btnOptions = oktaUnderscore.clone(btnConfig);\n    const originalClick = btnOptions.click || function () {}; // add onfocus listener to re-evaluate depedency when callout button is clicked\n\n    btnOptions.click = function () {\n      oktaJQueryStatic(window).one('focus.dependency', function () {\n        self.__showInputDependencies();\n      });\n      originalClick.call(self);\n    };\n    const BaseInputCalloutBtn = BaseView.extend({\n      children: [ButtonFactory.create(btnOptions)]\n    });\n    return new BaseInputCalloutBtn();\n  },\n  getCalloutParent: function () {\n    return this.$('input[value=\"' + this.getModelValue() + '\"]').parent();\n  },\n  __getCalloutMsgContainer: function (calloutMsg) {\n    return BaseView.extend({\n      template: _Handlebars2.template({\n        \"compiler\": [8, \">= 4.3.0\"],\n        \"main\": function (container, depth0, helpers, partials, data) {\n          var helper,\n            lookupProperty = container.lookupProperty || function (parent, propertyName) {\n              if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n                return parent[propertyName];\n              }\n              return undefined;\n            };\n          return \"<span class=\\\"o-form-explain\\\">\" + container.escapeExpression((helper = (helper = lookupProperty(helpers, \"msg\") || (depth0 != null ? lookupProperty(depth0, \"msg\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n            \"name\": \"msg\",\n            \"hash\": {},\n            \"data\": data,\n            \"loc\": {\n              \"start\": {\n                \"line\": 1,\n                \"column\": 29\n              },\n              \"end\": {\n                \"line\": 1,\n                \"column\": 36\n              }\n            }\n          }) : helper)) + \"</span>\";\n        },\n        \"useData\": true\n      }),\n      getTemplateData: function () {\n        return {\n          msg: calloutMsg\n        };\n      }\n    });\n  },\n  showCallout: function (calloutConfig, dependencyResolved) {\n    const callout = oktaUnderscore.clone(calloutConfig);\n    callout.className = 'dependency-callout';\n    if (callout.btn) {\n      callout.content = this.__getDependencyCalloutBtn(callout.btn);\n      delete callout.btn;\n    }\n    const dependencyCallout = Callout.create(callout);\n    if (!dependencyResolved) {\n      dependencyCallout.add(this.__getCalloutMsgContainer(StringUtil.localize('dependency.callout.msg', 'courage')));\n    }\n    const calloutParent = this.getCalloutParent();\n    calloutParent.append(dependencyCallout.render().el);\n    if (callout.type === 'success') {\n      oktaUnderscore.delay(function () {\n        // fade out success callout\n        dependencyCallout.$el.fadeOut(800);\n      }, 1000);\n    }\n  },\n  removeCallout: function () {\n    this.$el.find('.dependency-callout').remove();\n  },\n  __evaluateCalloutObject: function (dependencyResolved, calloutTitle) {\n    let defaultCallout;\n    if (dependencyResolved) {\n      defaultCallout = {\n        title: StringUtil.localize('dependency.action.completed', 'courage'),\n        size: 'large',\n        type: 'success'\n      };\n    } else {\n      defaultCallout = {\n        title: StringUtil.localize('dependency.action.required', 'courage', [calloutTitle]),\n        size: 'large',\n        type: 'warning'\n      };\n    }\n    return defaultCallout;\n  },\n  __handleDependency: function (result, callout) {\n    const self = this;\n    const calloutConfig = oktaUnderscore.isFunction(callout) ? callout(result) : oktaUnderscore.extend({}, callout, self.__evaluateCalloutObject(result.resolved, callout.title)); // remove existing callouts if any\n\n    self.removeCallout();\n    self.showCallout(calloutConfig, result.resolved);\n  },\n  __showInputDependencies: function () {\n    const self = this;\n    const fieldDependency = self.options.deps[self.getModelValue()];\n    if (fieldDependency && oktaUnderscore.isFunction(fieldDependency.func)) {\n      fieldDependency.func().done(function (data) {\n        self.__handleDependency({\n          resolved: true,\n          data: data\n        }, fieldDependency.callout);\n      }).fail(function (data) {\n        self.__handleDependency({\n          resolved: false,\n          data: data\n        }, fieldDependency.callout);\n      });\n    } else {\n      self.removeCallout();\n    }\n  },\n  _isEdited: false,\n  hasIMESupport: false,\n  /**\n   * updates the model with the input's value\n   */\n  update: function (e) {\n    var _window, _window$okta;\n    if (!this._isEdited && oktaUnderscore.result(this.options, 'validateOnlyIfDirty')) {\n      this._isEdited = true;\n      this.addInlineValidation();\n    }\n    this.model.set(this.options.name, this.toModelValue());\n    if (this.options.deps) {\n      // check for dependencies\n      this.__showInputDependencies();\n    }\n    /*\n      To add IME support for more components\n      - Add hasIMESupport boolean flag and compositionend and compositionstart event listeners to the component\n      - Supported components: TextBox.js, TextSelect.js\n      - Additionally window.okta.enableIMESupport is an org level FF to toggle IME support\n    */\n\n    if (this.hasIMESupport && (_window = window) !== null && _window !== void 0 && (_window$okta = _window.okta) !== null && _window$okta !== void 0 && _window$okta.enableIMESupport) {\n      if (this.isComposing) {\n        return;\n      }\n      if (e && Keys.isEnter(e)) {\n        this.model.trigger('form:save');\n      }\n    }\n  },\n  /**\n   * Is the input in edit mode\n   * @return {Boolean}\n   */\n  isEditMode: function () {\n    const ret = !oktaUnderscore.result(this.options, 'readOnly') && (oktaUnderscore.result(this.options, 'read') !== true || this.model.get('__edit__') === true);\n    return ret;\n  },\n  /**\n   * Renders the input\n   * @readonly\n   */\n  render: function () {\n    this.preRender();\n    const params = this.options.params;\n    this.options.params = oktaUnderscore.resultCtx(this.options, 'params', this);\n    if (this.isEditMode()) {\n      this.editMode();\n      if (oktaUnderscore.resultCtx(this.options, 'disabled', this)) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    } else {\n      this.readMode();\n    }\n    this.options.params = params;\n    this.addAriaLabel();\n    this.postRender();\n    return this;\n  },\n  /**\n   * checks if the current value in the model is valid for this field\n   */\n  validate: function () {\n    if (!this.model.get('__pending__') && this.isEditMode() && oktaUnderscore.isFunction(this.model.validateField)) {\n      const validationError = this.model.validateField(this.options.name);\n      if (validationError) {\n        oktaUnderscore.delay(function () {\n          this.model.trigger('form:clear-error:' + this.options.name);\n          this.model.trigger('invalid', this.model, validationError, false);\n        }.bind(this), 100);\n      }\n    }\n  },\n  /**\n   * Add model event listeners\n   */\n  addModelListeners: function () {\n    this.listenTo(this.model, 'form:field-error', function (name) {\n      if (this.options.name === name) {\n        this.__markError();\n      }\n    });\n    this.listenTo(this.model, 'form:clear-errors change:' + this.options.name, this.__clearError);\n    this.listenTo(this.model, 'form:clear-error:' + this.options.name, this.__clearError);\n  },\n  /**\n   * The value of the input\n   * @return {Mixed}\n   */\n  val: function () {\n    throw new Error('val() is an abstract method');\n  },\n  /**\n   * Set focus on the input\n   */\n  focus: function () {\n    throw new Error('focus() is an abstract method');\n  },\n  /**\n   * Default value in read mode\n   * When model has no value for the field\n   */\n  defaultValue: function () {\n    return '';\n  },\n  /**\n   * Renders the input in edit mode\n   */\n  editMode: function () {\n    const options = oktaUnderscore.extend({}, this.options, {\n      value: this.getModelValue()\n    });\n    this.$el.html(this.template(options));\n    this.options.multi && this.$el.removeClass('margin-r');\n    return this;\n  },\n  /**\n   * Renders the readable value of the input in read mode\n   */\n  readMode: function () {\n    this.$el.text(this.getReadModeString());\n    this.$el.removeClass('error-field');\n    this.options.multi && this.$el.addClass('margin-r');\n    return this;\n  },\n  getReadModeString: function () {\n    const readModeStr = oktaUnderscore.resultCtx(this.options, 'readModeString', this);\n    if (readModeStr) {\n      return readModeStr;\n    }\n    return this.toStringValue();\n  },\n  /**\n   * The model value off the field associated with the input\n   * @return {Mixed}\n   */\n  getModelValue: function () {\n    let value = this.model.get(this.options.name);\n    if (oktaUnderscore.isFunction(this.from)) {\n      value = this.from.call(this, value);\n    }\n    if (oktaUnderscore.isFunction(this.options.from)) {\n      value = this.options.from.call(this, value);\n    }\n    return value;\n  },\n  /*\n  * convenience method to get the textual value from the model\n  * will return the textual label rather than value in case of select/radio\n  * @return {String}\n  */\n  toStringValue: function () {\n    let value = this.getModelValue();\n    if (this.options.options) {\n      // dropdown or radio\n      value = this.options.options[value];\n    }\n    if (Number.isInteger(value) || typeof value === 'boolean') {\n      value = String(value);\n    }\n    return value || this.defaultValue();\n  },\n  /**\n   * Triggers a form:resize event in order to tell dialogs content size has changed\n   */\n  resize: function () {\n    this.model.trigger('form:resize');\n  },\n  /**\n   * Disable the input\n   */\n  disable: function () {\n    this.$(':input').prop('disabled', true);\n  },\n  /**\n   * Enable the input\n   */\n  enable: function () {\n    this.$(':input').prop('disabled', false);\n  },\n  /**\n   * Change the type of the input field. (e.g., text <--> password)\n   * @param type\n   */\n  changeType: function (type) {\n    this.$(':input').prop('type', type); // Update the options so that it keeps the uptodate state\n\n    this.options.type = type;\n  },\n  getNameString: function () {\n    if (oktaUnderscore.isArray(this.options.name)) {\n      return this.options.name.join('-');\n    }\n    return this.options.name;\n  },\n  /**\n   * Get parameters, computing _.result\n   * @param  {[type]} options alternative options\n   * @return {Object} the params\n   */\n  getParams: function (options) {\n    const opts = options || this.options || {};\n    return oktaUnderscore.clone(oktaUnderscore.resultCtx(opts, 'params', this) || {});\n  },\n  /**\n   * get a parameter from options.params, compute _.result when needed.\n   * @param  {String} key\n   * @param  {Object} defaultValue\n   * @return {Object} the params\n   */\n  getParam: function (key, defaultValue) {\n    const result = oktaUnderscore.resultCtx(this.getParams(), key, this);\n    return !oktaUnderscore.isUndefined(result) ? result : defaultValue;\n  },\n  /**\n   * Get a parameter from options.params or if empty, object attribute.\n   *\n   * @param  {String} key\n   * @return {Object} the param or attribute\n   */\n  getParamOrAttribute: function (key) {\n    return this.getParam(key) || oktaUnderscore.result(this, key);\n  },\n  __markError: function () {\n    this.$el.addClass('o-form-has-errors');\n  },\n  __clearError: function () {\n    this.$el.removeClass('o-form-has-errors');\n  }\n};\n/**\n * @class BaseInput\n * @private\n * An abstract object that defines an input for {@link Okta.Form}\n *\n * BaseInputs are typically not created directly, but being passed to {@link Okta.Form#addInput}\n * @extends Okta.View\n */\n\nvar BaseInput = BaseView.extend(props);\nexport { BaseInput as default };","map":{"version":3,"names":["_Handlebars2","oktaJQueryStatic","oktaUnderscore","ButtonFactory","StringUtil","BaseView","Callout","Keys","props","tagName","attributes","getNameString","defaultPlaceholder","constructor","options","defaults","inputId","id","uniqueId","placeholder","inlineValidation","validateOnlyIfDirty","self","each","enable","disable","method","action","wrap","fn","apply","arguments","$el","call","result","listenTo","model","render","isFunction","focus","debounce","bind","addInlineValidation","addModelListeners","addClass","addAriaLabel","ariaLabel","$","attr","on","validate","toModelValue","value","val","to","__getDependencyCalloutBtn","btnConfig","btnOptions","clone","originalClick","click","window","one","__showInputDependencies","BaseInputCalloutBtn","extend","children","create","getCalloutParent","getModelValue","parent","__getCalloutMsgContainer","calloutMsg","template","main","container","depth0","helpers","partials","data","helper","lookupProperty","propertyName","Object","prototype","hasOwnProperty","undefined","escapeExpression","hooks","helperMissing","nullContext","getTemplateData","msg","showCallout","calloutConfig","dependencyResolved","callout","className","btn","content","dependencyCallout","add","localize","calloutParent","append","el","type","delay","fadeOut","removeCallout","find","remove","__evaluateCalloutObject","calloutTitle","defaultCallout","title","size","__handleDependency","resolved","fieldDependency","deps","func","done","fail","_isEdited","hasIMESupport","update","e","_window","_window$okta","set","name","okta","enableIMESupport","isComposing","isEnter","trigger","isEditMode","ret","get","preRender","params","resultCtx","editMode","readMode","postRender","validateField","validationError","__markError","__clearError","Error","defaultValue","html","multi","removeClass","text","getReadModeString","readModeStr","toStringValue","from","Number","isInteger","String","resize","prop","changeType","isArray","join","getParams","opts","getParam","key","isUndefined","getParamOrAttribute","BaseInput","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/views/forms/BaseInput.js"],"sourcesContent":["import _Handlebars2 from '../../../../lib/handlebars/dist/cjs/handlebars.runtime.js';\nimport oktaJQueryStatic from '../../util/jquery-wrapper.js';\nimport oktaUnderscore from '../../util/underscore-wrapper.js';\nimport ButtonFactory from '../../util/ButtonFactory.js';\nimport StringUtil from '../../util/StringUtil.js';\nimport BaseView from '../BaseView.js';\nimport Callout from '../components/Callout.js';\nimport Keys from '../../util/Keys.js';\n\nconst props = {\n  tagName: 'span',\n  attributes: function () {\n    return {\n      'data-se': 'o-form-input-' + this.getNameString()\n    };\n  },\n\n  /**\n   * default placeholder text when options.placeholder is not defined\n   */\n  defaultPlaceholder: '',\n  constructor: function (options) {\n    /* eslint complexity: [2, 9] */\n    options = oktaUnderscore.defaults(options || {}, {\n      inputId: options.id || oktaUnderscore.uniqueId('input'),\n      placeholder: this.defaultPlaceholder,\n      inlineValidation: true,\n      validateOnlyIfDirty: false\n    });\n    delete options.id; // decorate the `enable` and `disable` and toggle the `o-form-disabled` class.\n    // so we wont need to worry about this when overriding the methods\n\n    const self = this;\n    oktaUnderscore.each({\n      enable: 'removeClass',\n      disable: 'addClass'\n    }, function (method, action) {\n      self[action] = oktaUnderscore.wrap(self[action], function (fn) {\n        fn.apply(self, arguments);\n        self.$el[method]('o-form-disabled');\n      });\n    });\n    BaseView.call(this, options);\n\n    if (oktaUnderscore.result(options, 'readOnly') !== true && oktaUnderscore.result(options, 'read') === true) {\n      this.listenTo(this.model, 'change:__edit__', this.render);\n    }\n\n    if (oktaUnderscore.isFunction(this.focus)) {\n      this.focus = oktaUnderscore.debounce(oktaUnderscore.bind(this.focus, this), 50);\n    } // Enable inline validation if this is not the first field in the form.\n\n\n    if (!oktaUnderscore.result(options, 'validateOnlyIfDirty')) {\n      this.addInlineValidation();\n    }\n\n    this.addModelListeners();\n    this.$el.addClass('o-form-input-name-' + this.getNameString());\n  },\n  addAriaLabel: function () {\n    const ariaLabel = this.options.ariaLabel;\n\n    if (ariaLabel) {\n      this.$(':input').attr('aria-label', ariaLabel);\n    }\n  },\n  addInlineValidation: function () {\n    if (oktaUnderscore.result(this.options, 'inlineValidation')) {\n      this.$el.on('focusout', ':input', oktaUnderscore.bind(this.validate, this));\n    }\n  },\n  toModelValue: function () {\n    let value = this.val();\n\n    if (oktaUnderscore.isFunction(this.to)) {\n      value = this.to.call(this, value);\n    }\n\n    if (oktaUnderscore.isFunction(this.options.to)) {\n      value = this.options.to.call(this, value);\n    }\n\n    return value;\n  },\n  __getDependencyCalloutBtn: function (btnConfig) {\n    const self = this;\n    const btnOptions = oktaUnderscore.clone(btnConfig);\n\n    const originalClick = btnOptions.click || function () {}; // add onfocus listener to re-evaluate depedency when callout button is clicked\n\n\n    btnOptions.click = function () {\n      oktaJQueryStatic(window).one('focus.dependency', function () {\n        self.__showInputDependencies();\n      });\n      originalClick.call(self);\n    };\n\n    const BaseInputCalloutBtn = BaseView.extend({\n      children: [ButtonFactory.create(btnOptions)]\n    });\n    return new BaseInputCalloutBtn();\n  },\n  getCalloutParent: function () {\n    return this.$('input[value=\"' + this.getModelValue() + '\"]').parent();\n  },\n  __getCalloutMsgContainer: function (calloutMsg) {\n    return BaseView.extend({\n      template: _Handlebars2.template({\n        \"compiler\": [8, \">= 4.3.0\"],\n        \"main\": function (container, depth0, helpers, partials, data) {\n          var helper,\n              lookupProperty = container.lookupProperty || function (parent, propertyName) {\n            if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n              return parent[propertyName];\n            }\n\n            return undefined;\n          };\n\n          return \"<span class=\\\"o-form-explain\\\">\" + container.escapeExpression((helper = (helper = lookupProperty(helpers, \"msg\") || (depth0 != null ? lookupProperty(depth0, \"msg\") : depth0)) != null ? helper : container.hooks.helperMissing, typeof helper === \"function\" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {\n            \"name\": \"msg\",\n            \"hash\": {},\n            \"data\": data,\n            \"loc\": {\n              \"start\": {\n                \"line\": 1,\n                \"column\": 29\n              },\n              \"end\": {\n                \"line\": 1,\n                \"column\": 36\n              }\n            }\n          }) : helper)) + \"</span>\";\n        },\n        \"useData\": true\n      }),\n      getTemplateData: function () {\n        return {\n          msg: calloutMsg\n        };\n      }\n    });\n  },\n  showCallout: function (calloutConfig, dependencyResolved) {\n    const callout = oktaUnderscore.clone(calloutConfig);\n    callout.className = 'dependency-callout';\n\n    if (callout.btn) {\n      callout.content = this.__getDependencyCalloutBtn(callout.btn);\n      delete callout.btn;\n    }\n\n    const dependencyCallout = Callout.create(callout);\n\n    if (!dependencyResolved) {\n      dependencyCallout.add(this.__getCalloutMsgContainer(StringUtil.localize('dependency.callout.msg', 'courage')));\n    }\n\n    const calloutParent = this.getCalloutParent();\n    calloutParent.append(dependencyCallout.render().el);\n\n    if (callout.type === 'success') {\n      oktaUnderscore.delay(function () {\n        // fade out success callout\n        dependencyCallout.$el.fadeOut(800);\n      }, 1000);\n    }\n  },\n  removeCallout: function () {\n    this.$el.find('.dependency-callout').remove();\n  },\n  __evaluateCalloutObject: function (dependencyResolved, calloutTitle) {\n    let defaultCallout;\n\n    if (dependencyResolved) {\n      defaultCallout = {\n        title: StringUtil.localize('dependency.action.completed', 'courage'),\n        size: 'large',\n        type: 'success'\n      };\n    } else {\n      defaultCallout = {\n        title: StringUtil.localize('dependency.action.required', 'courage', [calloutTitle]),\n        size: 'large',\n        type: 'warning'\n      };\n    }\n\n    return defaultCallout;\n  },\n  __handleDependency: function (result, callout) {\n    const self = this;\n    const calloutConfig = oktaUnderscore.isFunction(callout) ? callout(result) : oktaUnderscore.extend({}, callout, self.__evaluateCalloutObject(result.resolved, callout.title)); // remove existing callouts if any\n\n    self.removeCallout();\n    self.showCallout(calloutConfig, result.resolved);\n  },\n  __showInputDependencies: function () {\n    const self = this;\n    const fieldDependency = self.options.deps[self.getModelValue()];\n\n    if (fieldDependency && oktaUnderscore.isFunction(fieldDependency.func)) {\n      fieldDependency.func().done(function (data) {\n        self.__handleDependency({\n          resolved: true,\n          data: data\n        }, fieldDependency.callout);\n      }).fail(function (data) {\n        self.__handleDependency({\n          resolved: false,\n          data: data\n        }, fieldDependency.callout);\n      });\n    } else {\n      self.removeCallout();\n    }\n  },\n  _isEdited: false,\n  hasIMESupport: false,\n\n  /**\n   * updates the model with the input's value\n   */\n  update: function (e) {\n    var _window, _window$okta;\n\n    if (!this._isEdited && oktaUnderscore.result(this.options, 'validateOnlyIfDirty')) {\n      this._isEdited = true;\n      this.addInlineValidation();\n    }\n\n    this.model.set(this.options.name, this.toModelValue());\n\n    if (this.options.deps) {\n      // check for dependencies\n      this.__showInputDependencies();\n    }\n    /*\n      To add IME support for more components\n      - Add hasIMESupport boolean flag and compositionend and compositionstart event listeners to the component\n      - Supported components: TextBox.js, TextSelect.js\n      - Additionally window.okta.enableIMESupport is an org level FF to toggle IME support\n    */\n\n\n    if (this.hasIMESupport && (_window = window) !== null && _window !== void 0 && (_window$okta = _window.okta) !== null && _window$okta !== void 0 && _window$okta.enableIMESupport) {\n      if (this.isComposing) {\n        return;\n      }\n\n      if (e && Keys.isEnter(e)) {\n        this.model.trigger('form:save');\n      }\n    }\n  },\n\n  /**\n   * Is the input in edit mode\n   * @return {Boolean}\n   */\n  isEditMode: function () {\n    const ret = !oktaUnderscore.result(this.options, 'readOnly') && (oktaUnderscore.result(this.options, 'read') !== true || this.model.get('__edit__') === true);\n    return ret;\n  },\n\n  /**\n   * Renders the input\n   * @readonly\n   */\n  render: function () {\n    this.preRender();\n    const params = this.options.params;\n    this.options.params = oktaUnderscore.resultCtx(this.options, 'params', this);\n\n    if (this.isEditMode()) {\n      this.editMode();\n\n      if (oktaUnderscore.resultCtx(this.options, 'disabled', this)) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    } else {\n      this.readMode();\n    }\n\n    this.options.params = params;\n    this.addAriaLabel();\n    this.postRender();\n    return this;\n  },\n\n  /**\n   * checks if the current value in the model is valid for this field\n   */\n  validate: function () {\n    if (!this.model.get('__pending__') && this.isEditMode() && oktaUnderscore.isFunction(this.model.validateField)) {\n      const validationError = this.model.validateField(this.options.name);\n\n      if (validationError) {\n        oktaUnderscore.delay(function () {\n          this.model.trigger('form:clear-error:' + this.options.name);\n          this.model.trigger('invalid', this.model, validationError, false);\n        }.bind(this), 100);\n      }\n    }\n  },\n\n  /**\n   * Add model event listeners\n   */\n  addModelListeners: function () {\n    this.listenTo(this.model, 'form:field-error', function (name) {\n      if (this.options.name === name) {\n        this.__markError();\n      }\n    });\n    this.listenTo(this.model, 'form:clear-errors change:' + this.options.name, this.__clearError);\n    this.listenTo(this.model, 'form:clear-error:' + this.options.name, this.__clearError);\n  },\n\n  /**\n   * The value of the input\n   * @return {Mixed}\n   */\n  val: function () {\n    throw new Error('val() is an abstract method');\n  },\n\n  /**\n   * Set focus on the input\n   */\n  focus: function () {\n    throw new Error('focus() is an abstract method');\n  },\n\n  /**\n   * Default value in read mode\n   * When model has no value for the field\n   */\n  defaultValue: function () {\n    return '';\n  },\n\n  /**\n   * Renders the input in edit mode\n   */\n  editMode: function () {\n    const options = oktaUnderscore.extend({}, this.options, {\n      value: this.getModelValue()\n    });\n    this.$el.html(this.template(options));\n    this.options.multi && this.$el.removeClass('margin-r');\n    return this;\n  },\n\n  /**\n   * Renders the readable value of the input in read mode\n   */\n  readMode: function () {\n    this.$el.text(this.getReadModeString());\n    this.$el.removeClass('error-field');\n    this.options.multi && this.$el.addClass('margin-r');\n    return this;\n  },\n  getReadModeString: function () {\n    const readModeStr = oktaUnderscore.resultCtx(this.options, 'readModeString', this);\n\n    if (readModeStr) {\n      return readModeStr;\n    }\n\n    return this.toStringValue();\n  },\n\n  /**\n   * The model value off the field associated with the input\n   * @return {Mixed}\n   */\n  getModelValue: function () {\n    let value = this.model.get(this.options.name);\n\n    if (oktaUnderscore.isFunction(this.from)) {\n      value = this.from.call(this, value);\n    }\n\n    if (oktaUnderscore.isFunction(this.options.from)) {\n      value = this.options.from.call(this, value);\n    }\n\n    return value;\n  },\n\n  /*\n  * convenience method to get the textual value from the model\n  * will return the textual label rather than value in case of select/radio\n  * @return {String}\n  */\n  toStringValue: function () {\n    let value = this.getModelValue();\n\n    if (this.options.options) {\n      // dropdown or radio\n      value = this.options.options[value];\n    }\n\n    if (Number.isInteger(value) || typeof value === 'boolean') {\n      value = String(value);\n    }\n\n    return value || this.defaultValue();\n  },\n\n  /**\n   * Triggers a form:resize event in order to tell dialogs content size has changed\n   */\n  resize: function () {\n    this.model.trigger('form:resize');\n  },\n\n  /**\n   * Disable the input\n   */\n  disable: function () {\n    this.$(':input').prop('disabled', true);\n  },\n\n  /**\n   * Enable the input\n   */\n  enable: function () {\n    this.$(':input').prop('disabled', false);\n  },\n\n  /**\n   * Change the type of the input field. (e.g., text <--> password)\n   * @param type\n   */\n  changeType: function (type) {\n    this.$(':input').prop('type', type); // Update the options so that it keeps the uptodate state\n\n    this.options.type = type;\n  },\n  getNameString: function () {\n    if (oktaUnderscore.isArray(this.options.name)) {\n      return this.options.name.join('-');\n    }\n\n    return this.options.name;\n  },\n\n  /**\n   * Get parameters, computing _.result\n   * @param  {[type]} options alternative options\n   * @return {Object} the params\n   */\n  getParams: function (options) {\n    const opts = options || this.options || {};\n    return oktaUnderscore.clone(oktaUnderscore.resultCtx(opts, 'params', this) || {});\n  },\n\n  /**\n   * get a parameter from options.params, compute _.result when needed.\n   * @param  {String} key\n   * @param  {Object} defaultValue\n   * @return {Object} the params\n   */\n  getParam: function (key, defaultValue) {\n    const result = oktaUnderscore.resultCtx(this.getParams(), key, this);\n    return !oktaUnderscore.isUndefined(result) ? result : defaultValue;\n  },\n\n  /**\n   * Get a parameter from options.params or if empty, object attribute.\n   *\n   * @param  {String} key\n   * @return {Object} the param or attribute\n   */\n  getParamOrAttribute: function (key) {\n    return this.getParam(key) || oktaUnderscore.result(this, key);\n  },\n  __markError: function () {\n    this.$el.addClass('o-form-has-errors');\n  },\n  __clearError: function () {\n    this.$el.removeClass('o-form-has-errors');\n  }\n};\n/**\n * @class BaseInput\n * @private\n * An abstract object that defines an input for {@link Okta.Form}\n *\n * BaseInputs are typically not created directly, but being passed to {@link Okta.Form#addInput}\n * @extends Okta.View\n */\n\nvar BaseInput = BaseView.extend(props);\n\nexport { BaseInput as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}