{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from './_virtual/_tslib.js';\nimport * as constants from './constants.js';\nimport { DEFAULT_MAX_CLOCK_SKEW, REFERRER_PATH_STORAGE_KEY } from './constants.js';\nimport { transactionStatus, resumeTransaction, transactionExists, introspectAuthn, postToTransaction } from './tx/api.js';\nimport { AuthTransaction } from './tx/AuthTransaction.js';\nimport { setRequestHeader } from './http/headers.js';\nimport { get, httpRequest } from './http/request.js';\nimport { clone } from './util/object.js';\nimport { toAbsoluteUrl, toQueryString } from './util/url.js';\nimport PKCE from './oidc/util/pkce.js';\nimport { closeSession, sessionExists, getSession, refreshSession, setCookieAndRedirect } from './session.js';\nimport { getOAuthUrls } from './oidc/util/oauth.js';\nimport * as features from './features.js';\nimport { isBrowser } from './features.js';\nimport { isInteractionRequiredError } from './oidc/util/errors.js';\nimport { isLoginRedirect, isInteractionRequired } from './oidc/util/loginRedirect.js';\nimport { prepareTokenParams } from './oidc/util/prepareTokenParams.js';\nimport './idx/types/api.js';\nimport './myaccount/types.js';\nimport { decodeToken } from './oidc/decodeToken.js';\nimport { revokeToken } from './oidc/revokeToken.js';\nimport { renewToken } from './oidc/renewToken.js';\nimport { renewTokensWithRefresh } from './oidc/renewTokensWithRefresh.js';\nimport { renewTokens } from './oidc/renewTokens.js';\nimport { verifyToken } from './oidc/verifyToken.js';\nimport { getUserInfo } from './oidc/getUserInfo.js';\nimport { exchangeCodeForTokens } from './oidc/exchangeCodeForTokens.js';\nimport { getWithoutPrompt } from './oidc/getWithoutPrompt.js';\nimport { getWithPopup } from './oidc/getWithPopup.js';\nimport { getWithRedirect } from './oidc/getWithRedirect.js';\nimport { parseFromUrl, parseOAuthResponseFromUrl } from './oidc/parseFromUrl.js';\nimport * as index from './crypto/index.js';\nimport * as webauthn from './crypto/webauthn.js';\nimport storageUtil from './browser/browserStorage.js';\nimport { TokenManager } from './TokenManager.js';\nimport { ServiceManager } from './ServiceManager.js';\nimport PromiseQueue from './PromiseQueue.js';\nimport fingerprint from './browser/fingerprint.js';\nimport { AuthStateManager } from './AuthStateManager.js';\nimport { StorageManager } from './StorageManager.js';\nimport TransactionManager from './TransactionManager.js';\nimport { buildOptions } from './options/index.js';\nimport { authenticate } from './idx/authenticate.js';\nimport { cancel } from './idx/cancel.js';\nimport { handleEmailVerifyCallback, isEmailVerifyCallback, parseEmailVerifyCallback, isEmailVerifyCallbackError } from './idx/emailVerify.js';\nimport { interact } from './idx/interact.js';\nimport { introspect } from './idx/introspect.js';\nimport { poll } from './idx/poll.js';\nimport { proceed, canProceed } from './idx/proceed.js';\nimport { register } from './idx/register.js';\nimport { recoverPassword } from './idx/recoverPassword.js';\nimport { handleInteractionCodeRedirect } from './idx/handleInteractionCodeRedirect.js';\nimport { startTransaction } from './idx/startTransaction.js';\nimport { unlockAccount } from './idx/unlockAccount.js';\nimport { getSavedTransactionMeta, createTransactionMeta, getTransactionMeta, saveTransactionMeta, clearTransactionMeta, isTransactionMetaValid } from './idx/transactionMeta.js';\nimport { OktaUserAgent } from './OktaUserAgent.js';\nimport Emitter from 'tiny-emitter';\nimport { makeIdxState } from './idx/idxState/index.js';\nclass OktaAuth {\n  constructor(args) {\n    this.features = features;\n    const options = this.options = buildOptions(args);\n    this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n    this.transactionManager = new TransactionManager(Object.assign({\n      storageManager: this.storageManager\n    }, options.transactionManager));\n    this._oktaUserAgent = new OktaUserAgent();\n    this.tx = {\n      status: transactionStatus.bind(null, this),\n      resume: resumeTransaction.bind(null, this),\n      exists: Object.assign(transactionExists.bind(null, this), {\n        _get: name => {\n          const storage = options.storageUtil.storage;\n          return storage.get(name);\n        }\n      }),\n      introspect: introspectAuthn.bind(null, this),\n      createTransaction: res => {\n        return new AuthTransaction(this, res);\n      },\n      postToTransaction: (url, args, options) => {\n        return postToTransaction(this, url, args, options);\n      }\n    };\n    this.pkce = {\n      DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n      generateVerifier: PKCE.generateVerifier,\n      computeChallenge: PKCE.computeChallenge\n    };\n    Object.assign(this.options.storageUtil || {}, {\n      getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n      getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager)\n    });\n    this._pending = {\n      handleLogin: false\n    };\n    if (isBrowser()) {\n      this.options = Object.assign(this.options, {\n        redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin)\n      });\n    }\n    if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n      this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n    } else {\n      this.options.maxClockSkew = args.maxClockSkew;\n    }\n    this.options.ignoreLifetime = !!args.ignoreLifetime;\n    this.session = {\n      close: closeSession.bind(null, this),\n      exists: sessionExists.bind(null, this),\n      get: getSession.bind(null, this),\n      refresh: refreshSession.bind(null, this),\n      setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n    };\n    this._tokenQueue = new PromiseQueue();\n    const useQueue = method => {\n      return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n    };\n    const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this));\n    const getWithRedirectApi = Object.assign(getWithRedirectFn, {\n      _setLocation: function (url) {\n        if (options.setLocation) {\n          options.setLocation(url);\n        } else {\n          window.location = url;\n        }\n      }\n    });\n    const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this));\n    const parseFromUrlApi = Object.assign(parseFromUrlFn, {\n      _getHistory: function () {\n        return window.history;\n      },\n      _getLocation: function () {\n        return window.location;\n      },\n      _getDocument: function () {\n        return window.document;\n      }\n    });\n    this.token = {\n      prepareTokenParams: prepareTokenParams.bind(null, this),\n      exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n      getWithoutPrompt: getWithoutPrompt.bind(null, this),\n      getWithPopup: getWithPopup.bind(null, this),\n      getWithRedirect: getWithRedirectApi,\n      parseFromUrl: parseFromUrlApi,\n      decode: decodeToken,\n      revoke: revokeToken.bind(null, this),\n      renew: renewToken.bind(null, this),\n      renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n      renewTokens: renewTokens.bind(null, this),\n      getUserInfo: (accessTokenObject, idTokenObject) => {\n        return getUserInfo(this, accessTokenObject, idTokenObject);\n      },\n      verify: verifyToken.bind(null, this),\n      isLoginRedirect: isLoginRedirect.bind(null, this)\n    };\n    const toWrap = ['getWithoutPrompt', 'getWithPopup', 'revoke', 'renew', 'renewTokensWithRefresh', 'renewTokens'];\n    toWrap.forEach(key => {\n      this.token[key] = useQueue(this.token[key]);\n    });\n    const boundStartTransaction = startTransaction.bind(null, this);\n    this.idx = {\n      interact: interact.bind(null, this),\n      introspect: introspect.bind(null, this),\n      makeIdxResponse: makeIdxState.bind(null, this),\n      authenticate: authenticate.bind(null, this),\n      register: register.bind(null, this),\n      start: boundStartTransaction,\n      startTransaction: boundStartTransaction,\n      poll: poll.bind(null, this),\n      proceed: proceed.bind(null, this),\n      cancel: cancel.bind(null, this),\n      recoverPassword: recoverPassword.bind(null, this),\n      handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n      isInteractionRequired: isInteractionRequired.bind(null, this),\n      isInteractionRequiredError,\n      handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n      isEmailVerifyCallback,\n      parseEmailVerifyCallback,\n      isEmailVerifyCallbackError,\n      getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n      createTransactionMeta: createTransactionMeta.bind(null, this),\n      getTransactionMeta: getTransactionMeta.bind(null, this),\n      saveTransactionMeta: saveTransactionMeta.bind(null, this),\n      clearTransactionMeta: clearTransactionMeta.bind(null, this),\n      isTransactionMetaValid,\n      setFlow: flow => {\n        this.options.flow = flow;\n      },\n      getFlow: () => {\n        return this.options.flow;\n      },\n      canProceed: canProceed.bind(null, this),\n      unlockAccount: unlockAccount.bind(null, this)\n    };\n    this.http = {\n      setRequestHeader: setRequestHeader.bind(null, this)\n    };\n    this.fingerprint = fingerprint.bind(null, this);\n    this.emitter = new Emitter();\n    this.tokenManager = new TokenManager(this, args.tokenManager);\n    this.authStateManager = new AuthStateManager(this);\n    this.serviceManager = new ServiceManager(this, args.services);\n  }\n  start() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.serviceManager.start();\n      _this.tokenManager.start();\n      if (!_this.token.isLoginRedirect()) {\n        yield _this.authStateManager.updateAuthState();\n      }\n    })();\n  }\n  stop() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.tokenManager.stop();\n      yield _this2.serviceManager.stop();\n    })();\n  }\n  setHeaders(headers) {\n    this.options.headers = Object.assign({}, this.options.headers, headers);\n  }\n  signIn(opts) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.signInWithCredentials(opts);\n    })();\n  }\n  signInWithCredentials(opts) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      opts = clone(opts || {});\n      const _postToTransaction = options => {\n        delete opts.sendFingerprint;\n        return postToTransaction(_this4, '/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return _this4.fingerprint().then(function (fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    })();\n  }\n  signInWithRedirect(opts = {}) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const {\n          originalUri\n        } = opts,\n        additionalParams = __rest(opts, [\"originalUri\"]);\n      if (_this5._pending.handleLogin) {\n        return;\n      }\n      _this5._pending.handleLogin = true;\n      try {\n        if (originalUri) {\n          _this5.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          scopes: _this5.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        yield _this5.token.getWithRedirect(params);\n      } finally {\n        _this5._pending.handleLogin = false;\n      }\n    })();\n  }\n  closeSession() {\n    var _this6 = this;\n    return this.session.close().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      _this6.tokenManager.clear();\n    })).catch(function (e) {\n      if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n        return null;\n      }\n      throw e;\n    });\n  }\n  revokeAccessToken(accessToken) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!accessToken) {\n        accessToken = (yield _this7.tokenManager.getTokens()).accessToken;\n        const accessTokenKey = _this7.tokenManager.getStorageKeyByType('accessToken');\n        _this7.tokenManager.remove(accessTokenKey);\n      }\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return _this7.token.revoke(accessToken);\n    })();\n  }\n  revokeRefreshToken(refreshToken) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (!refreshToken) {\n        refreshToken = (yield _this8.tokenManager.getTokens()).refreshToken;\n        const refreshTokenKey = _this8.tokenManager.getStorageKeyByType('refreshToken');\n        _this8.tokenManager.remove(refreshTokenKey);\n      }\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return _this8.token.revoke(refreshToken);\n    })();\n  }\n  getSignOutRedirectUrl(options = {}) {\n    let {\n      idToken,\n      postLogoutRedirectUri,\n      state\n    } = options;\n    if (!idToken) {\n      idToken = this.tokenManager.getTokensSync().idToken;\n    }\n    if (!idToken) {\n      return '';\n    }\n    if (!postLogoutRedirectUri) {\n      postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n    }\n    const logoutUrl = getOAuthUrls(this).logoutUrl;\n    const idTokenHint = idToken.idToken;\n    let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n    if (postLogoutRedirectUri) {\n      logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n    }\n    if (state) {\n      logoutUri += '&state=' + encodeURIComponent(state);\n    }\n    return logoutUri;\n  }\n  signOut(options) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      options = Object.assign({}, options);\n      var defaultUri = window.location.origin;\n      var currentUri = window.location.href;\n      var postLogoutRedirectUri = options.postLogoutRedirectUri || _this9.options.postLogoutRedirectUri || defaultUri;\n      var accessToken = options.accessToken;\n      var refreshToken = options.refreshToken;\n      var revokeAccessToken = options.revokeAccessToken !== false;\n      var revokeRefreshToken = options.revokeRefreshToken !== false;\n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = _this9.tokenManager.getTokensSync().refreshToken;\n      }\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = _this9.tokenManager.getTokensSync().accessToken;\n      }\n      if (!options.idToken) {\n        options.idToken = _this9.tokenManager.getTokensSync().idToken;\n      }\n      if (revokeRefreshToken && refreshToken) {\n        yield _this9.revokeRefreshToken(refreshToken);\n      }\n      if (revokeAccessToken && accessToken) {\n        yield _this9.revokeAccessToken(accessToken);\n      }\n      const logoutUri = _this9.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), {\n        postLogoutRedirectUri\n      }));\n      if (!logoutUri) {\n        return _this9.closeSession().then(function () {\n          if (postLogoutRedirectUri === currentUri) {\n            window.location.reload();\n          } else {\n            window.location.assign(postLogoutRedirectUri);\n          }\n        });\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          _this9.tokenManager.clear();\n        } else {\n          _this9.tokenManager.addPendingRemoveFlags();\n        }\n        window.location.assign(logoutUri);\n      }\n    })();\n  }\n  webfinger(opts) {\n    var url = '/.well-known/webfinger' + toQueryString(opts);\n    var options = {\n      headers: {\n        'Accept': 'application/jrd+json'\n      }\n    };\n    return get(this, url, options);\n  }\n  isAuthenticated(options = {}) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        autoRenew,\n        autoRemove\n      } = _this10.tokenManager.getOptions();\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n      let {\n        accessToken\n      } = _this10.tokenManager.getTokensSync();\n      if (accessToken && _this10.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = yield _this10.tokenManager.renew('accessToken');\n          } catch (_a) {}\n        } else if (shouldRemove) {\n          _this10.tokenManager.remove('accessToken');\n        }\n      }\n      let {\n        idToken\n      } = _this10.tokenManager.getTokensSync();\n      if (idToken && _this10.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = yield _this10.tokenManager.renew('idToken');\n          } catch (_b) {}\n        } else if (shouldRemove) {\n          _this10.tokenManager.remove('idToken');\n        }\n      }\n      return !!(accessToken && idToken);\n    })();\n  }\n  getUser() {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        idToken,\n        accessToken\n      } = _this11.tokenManager.getTokensSync();\n      return _this11.token.getUserInfo(accessToken, idToken);\n    })();\n  }\n  getIdToken() {\n    const {\n      idToken\n    } = this.tokenManager.getTokensSync();\n    return idToken ? idToken.idToken : undefined;\n  }\n  getAccessToken() {\n    const {\n      accessToken\n    } = this.tokenManager.getTokensSync();\n    return accessToken ? accessToken.accessToken : undefined;\n  }\n  getRefreshToken() {\n    const {\n      refreshToken\n    } = this.tokenManager.getTokensSync();\n    return refreshToken ? refreshToken.refreshToken : undefined;\n  }\n  storeTokensFromRedirect() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        tokens\n      } = yield _this12.token.parseFromUrl();\n      _this12.tokenManager.setTokens(tokens);\n    })();\n  }\n  setOriginalUri(originalUri, state) {\n    const sessionStorage = storageUtil.getSessionStorage();\n    sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.setItem(state, originalUri);\n    }\n  }\n  getOriginalUri(state) {\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      const originalUri = sharedStorage.getItem(state);\n      if (originalUri) {\n        return originalUri;\n      }\n    }\n    const storage = storageUtil.getSessionStorage();\n    return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n  }\n  removeOriginalUri(state) {\n    const storage = storageUtil.getSessionStorage();\n    storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n    state = state || this.options.state;\n    if (state) {\n      const sharedStorage = this.storageManager.getOriginalUriStorage();\n      sharedStorage.removeItem && sharedStorage.removeItem(state);\n    }\n  }\n  isLoginRedirect() {\n    return isLoginRedirect(this);\n  }\n  handleLoginRedirect(tokens, originalUri) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      let state = _this13.options.state;\n      if (tokens) {\n        _this13.tokenManager.setTokens(tokens);\n        originalUri = originalUri || _this13.getOriginalUri(_this13.options.state);\n      } else if (_this13.isLoginRedirect()) {\n        try {\n          const oAuthResponse = yield parseOAuthResponseFromUrl(_this13, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || _this13.getOriginalUri(state);\n          yield _this13.storeTokensFromRedirect();\n        } catch (e) {\n          yield _this13.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return;\n      }\n      yield _this13.authStateManager.updateAuthState();\n      _this13.removeOriginalUri(state);\n      const {\n        restoreOriginalUri\n      } = _this13.options;\n      if (restoreOriginalUri) {\n        yield restoreOriginalUri(_this13, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    })();\n  }\n  isPKCE() {\n    return !!this.options.pkce;\n  }\n  hasResponseType(responseType) {\n    let hasResponseType = false;\n    if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n      hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n    } else {\n      hasResponseType = this.options.responseType === responseType;\n    }\n    return hasResponseType;\n  }\n  isAuthorizationCodeFlow() {\n    return this.hasResponseType('code');\n  }\n  getIssuerOrigin() {\n    return this.options.issuer.split('/oauth2/')[0];\n  }\n  forgotPassword(opts) {\n    return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n  }\n  unlockAccount(opts) {\n    return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n  }\n  verifyRecoveryToken(opts) {\n    return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n  }\n  invokeApiMethod(options) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      if (!options.accessToken) {\n        const accessToken = (yield _this14.tokenManager.getTokens()).accessToken;\n        options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n      }\n      return httpRequest(_this14, options);\n    })();\n  }\n}\nOktaAuth.features = features;\nOktaAuth.crypto = index;\nOktaAuth.webauthn = webauthn;\nOktaAuth.features = OktaAuth.prototype.features = features;\nObject.assign(OktaAuth, {\n  constants\n});\nexport { OktaAuth as default };","map":{"version":3,"names":["__rest","constants","DEFAULT_MAX_CLOCK_SKEW","REFERRER_PATH_STORAGE_KEY","transactionStatus","resumeTransaction","transactionExists","introspectAuthn","postToTransaction","AuthTransaction","setRequestHeader","get","httpRequest","clone","toAbsoluteUrl","toQueryString","PKCE","closeSession","sessionExists","getSession","refreshSession","setCookieAndRedirect","getOAuthUrls","features","isBrowser","isInteractionRequiredError","isLoginRedirect","isInteractionRequired","prepareTokenParams","decodeToken","revokeToken","renewToken","renewTokensWithRefresh","renewTokens","verifyToken","getUserInfo","exchangeCodeForTokens","getWithoutPrompt","getWithPopup","getWithRedirect","parseFromUrl","parseOAuthResponseFromUrl","index","webauthn","storageUtil","TokenManager","ServiceManager","PromiseQueue","fingerprint","AuthStateManager","StorageManager","TransactionManager","buildOptions","authenticate","cancel","handleEmailVerifyCallback","isEmailVerifyCallback","parseEmailVerifyCallback","isEmailVerifyCallbackError","interact","introspect","poll","proceed","canProceed","register","recoverPassword","handleInteractionCodeRedirect","startTransaction","unlockAccount","getSavedTransactionMeta","createTransactionMeta","getTransactionMeta","saveTransactionMeta","clearTransactionMeta","isTransactionMetaValid","OktaUserAgent","Emitter","makeIdxState","OktaAuth","constructor","args","options","storageManager","cookies","transactionManager","Object","assign","_oktaUserAgent","tx","status","bind","resume","exists","_get","name","storage","createTransaction","res","url","pkce","DEFAULT_CODE_CHALLENGE_METHOD","generateVerifier","computeChallenge","getPKCEStorage","getLegacyPKCEStorage","getHttpCache","_pending","handleLogin","redirectUri","window","location","origin","maxClockSkew","ignoreLifetime","session","close","refresh","_tokenQueue","useQueue","method","prototype","push","getWithRedirectFn","getWithRedirectApi","_setLocation","setLocation","parseFromUrlFn","parseFromUrlApi","_getHistory","history","_getLocation","_getDocument","document","token","decode","revoke","renew","accessTokenObject","idTokenObject","verify","toWrap","forEach","key","boundStartTransaction","idx","makeIdxResponse","start","setFlow","flow","getFlow","http","emitter","tokenManager","authStateManager","serviceManager","services","_this","_asyncToGenerator","updateAuthState","stop","_this2","setHeaders","headers","signIn","opts","_this3","signInWithCredentials","_this4","_postToTransaction","sendFingerprint","then","signInWithRedirect","_this5","originalUri","additionalParams","setOriginalUri","params","scopes","_this6","clear","catch","e","errorCode","revokeAccessToken","accessToken","_this7","getTokens","accessTokenKey","getStorageKeyByType","remove","Promise","resolve","revokeRefreshToken","refreshToken","_this8","refreshTokenKey","getSignOutRedirectUrl","idToken","postLogoutRedirectUri","state","getTokensSync","logoutUrl","idTokenHint","logoutUri","encodeURIComponent","signOut","_this9","defaultUri","currentUri","href","reload","clearTokensBeforeRedirect","addPendingRemoveFlags","webfinger","isAuthenticated","_this10","autoRenew","autoRemove","getOptions","shouldRenew","onExpiredToken","shouldRemove","hasExpired","undefined","_a","_b","getUser","_this11","getIdToken","getAccessToken","getRefreshToken","storeTokensFromRedirect","_this12","tokens","setTokens","sessionStorage","getSessionStorage","setItem","sharedStorage","getOriginalUriStorage","getOriginalUri","getItem","removeOriginalUri","removeItem","handleLoginRedirect","_this13","oAuthResponse","restoreOriginalUri","replace","isPKCE","hasResponseType","responseType","Array","isArray","length","indexOf","isAuthorizationCodeFlow","getIssuerOrigin","issuer","split","forgotPassword","verifyRecoveryToken","invokeApiMethod","_this14","crypto","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/OktaAuth.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { __rest } from './_virtual/_tslib.js';\nimport * as constants from './constants.js';\nimport { DEFAULT_MAX_CLOCK_SKEW, REFERRER_PATH_STORAGE_KEY } from './constants.js';\nimport { transactionStatus, resumeTransaction, transactionExists, introspectAuthn, postToTransaction } from './tx/api.js';\nimport { AuthTransaction } from './tx/AuthTransaction.js';\nimport { setRequestHeader } from './http/headers.js';\nimport { get, httpRequest } from './http/request.js';\nimport { clone } from './util/object.js';\nimport { toAbsoluteUrl, toQueryString } from './util/url.js';\nimport PKCE from './oidc/util/pkce.js';\nimport { closeSession, sessionExists, getSession, refreshSession, setCookieAndRedirect } from './session.js';\nimport { getOAuthUrls } from './oidc/util/oauth.js';\nimport * as features from './features.js';\nimport { isBrowser } from './features.js';\nimport { isInteractionRequiredError } from './oidc/util/errors.js';\nimport { isLoginRedirect, isInteractionRequired } from './oidc/util/loginRedirect.js';\nimport { prepareTokenParams } from './oidc/util/prepareTokenParams.js';\nimport './idx/types/api.js';\nimport './myaccount/types.js';\nimport { decodeToken } from './oidc/decodeToken.js';\nimport { revokeToken } from './oidc/revokeToken.js';\nimport { renewToken } from './oidc/renewToken.js';\nimport { renewTokensWithRefresh } from './oidc/renewTokensWithRefresh.js';\nimport { renewTokens } from './oidc/renewTokens.js';\nimport { verifyToken } from './oidc/verifyToken.js';\nimport { getUserInfo } from './oidc/getUserInfo.js';\nimport { exchangeCodeForTokens } from './oidc/exchangeCodeForTokens.js';\nimport { getWithoutPrompt } from './oidc/getWithoutPrompt.js';\nimport { getWithPopup } from './oidc/getWithPopup.js';\nimport { getWithRedirect } from './oidc/getWithRedirect.js';\nimport { parseFromUrl, parseOAuthResponseFromUrl } from './oidc/parseFromUrl.js';\nimport * as index from './crypto/index.js';\nimport * as webauthn from './crypto/webauthn.js';\nimport storageUtil from './browser/browserStorage.js';\nimport { TokenManager } from './TokenManager.js';\nimport { ServiceManager } from './ServiceManager.js';\nimport PromiseQueue from './PromiseQueue.js';\nimport fingerprint from './browser/fingerprint.js';\nimport { AuthStateManager } from './AuthStateManager.js';\nimport { StorageManager } from './StorageManager.js';\nimport TransactionManager from './TransactionManager.js';\nimport { buildOptions } from './options/index.js';\nimport { authenticate } from './idx/authenticate.js';\nimport { cancel } from './idx/cancel.js';\nimport { handleEmailVerifyCallback, isEmailVerifyCallback, parseEmailVerifyCallback, isEmailVerifyCallbackError } from './idx/emailVerify.js';\nimport { interact } from './idx/interact.js';\nimport { introspect } from './idx/introspect.js';\nimport { poll } from './idx/poll.js';\nimport { proceed, canProceed } from './idx/proceed.js';\nimport { register } from './idx/register.js';\nimport { recoverPassword } from './idx/recoverPassword.js';\nimport { handleInteractionCodeRedirect } from './idx/handleInteractionCodeRedirect.js';\nimport { startTransaction } from './idx/startTransaction.js';\nimport { unlockAccount } from './idx/unlockAccount.js';\nimport { getSavedTransactionMeta, createTransactionMeta, getTransactionMeta, saveTransactionMeta, clearTransactionMeta, isTransactionMetaValid } from './idx/transactionMeta.js';\nimport { OktaUserAgent } from './OktaUserAgent.js';\nimport Emitter from 'tiny-emitter';\nimport { makeIdxState } from './idx/idxState/index.js';\n\nclass OktaAuth {\n    constructor(args) {\n        this.features = features;\n        const options = this.options = buildOptions(args);\n        this.storageManager = new StorageManager(options.storageManager, options.cookies, options.storageUtil);\n        this.transactionManager = new TransactionManager(Object.assign({\n            storageManager: this.storageManager,\n        }, options.transactionManager));\n        this._oktaUserAgent = new OktaUserAgent();\n        this.tx = {\n            status: transactionStatus.bind(null, this),\n            resume: resumeTransaction.bind(null, this),\n            exists: Object.assign(transactionExists.bind(null, this), {\n                _get: (name) => {\n                    const storage = options.storageUtil.storage;\n                    return storage.get(name);\n                }\n            }),\n            introspect: introspectAuthn.bind(null, this),\n            createTransaction: (res) => {\n                return new AuthTransaction(this, res);\n            },\n            postToTransaction: (url, args, options) => {\n                return postToTransaction(this, url, args, options);\n            }\n        };\n        this.pkce = {\n            DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n            generateVerifier: PKCE.generateVerifier,\n            computeChallenge: PKCE.computeChallenge\n        };\n        Object.assign(this.options.storageUtil || {}, {\n            getPKCEStorage: this.storageManager.getLegacyPKCEStorage.bind(this.storageManager),\n            getHttpCache: this.storageManager.getHttpCache.bind(this.storageManager),\n        });\n        this._pending = { handleLogin: false };\n        if (isBrowser()) {\n            this.options = Object.assign(this.options, {\n                redirectUri: toAbsoluteUrl(args.redirectUri, window.location.origin),\n            });\n        }\n        if (!args.maxClockSkew && args.maxClockSkew !== 0) {\n            this.options.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n        }\n        else {\n            this.options.maxClockSkew = args.maxClockSkew;\n        }\n        this.options.ignoreLifetime = !!args.ignoreLifetime;\n        this.session = {\n            close: closeSession.bind(null, this),\n            exists: sessionExists.bind(null, this),\n            get: getSession.bind(null, this),\n            refresh: refreshSession.bind(null, this),\n            setCookieAndRedirect: setCookieAndRedirect.bind(null, this)\n        };\n        this._tokenQueue = new PromiseQueue();\n        const useQueue = (method) => {\n            return PromiseQueue.prototype.push.bind(this._tokenQueue, method, null);\n        };\n        const getWithRedirectFn = useQueue(getWithRedirect.bind(null, this));\n        const getWithRedirectApi = Object.assign(getWithRedirectFn, {\n            _setLocation: function (url) {\n                if (options.setLocation) {\n                    options.setLocation(url);\n                }\n                else {\n                    window.location = url;\n                }\n            }\n        });\n        const parseFromUrlFn = useQueue(parseFromUrl.bind(null, this));\n        const parseFromUrlApi = Object.assign(parseFromUrlFn, {\n            _getHistory: function () {\n                return window.history;\n            },\n            _getLocation: function () {\n                return window.location;\n            },\n            _getDocument: function () {\n                return window.document;\n            }\n        });\n        this.token = {\n            prepareTokenParams: prepareTokenParams.bind(null, this),\n            exchangeCodeForTokens: exchangeCodeForTokens.bind(null, this),\n            getWithoutPrompt: getWithoutPrompt.bind(null, this),\n            getWithPopup: getWithPopup.bind(null, this),\n            getWithRedirect: getWithRedirectApi,\n            parseFromUrl: parseFromUrlApi,\n            decode: decodeToken,\n            revoke: revokeToken.bind(null, this),\n            renew: renewToken.bind(null, this),\n            renewTokensWithRefresh: renewTokensWithRefresh.bind(null, this),\n            renewTokens: renewTokens.bind(null, this),\n            getUserInfo: (accessTokenObject, idTokenObject) => {\n                return getUserInfo(this, accessTokenObject, idTokenObject);\n            },\n            verify: verifyToken.bind(null, this),\n            isLoginRedirect: isLoginRedirect.bind(null, this)\n        };\n        const toWrap = [\n            'getWithoutPrompt',\n            'getWithPopup',\n            'revoke',\n            'renew',\n            'renewTokensWithRefresh',\n            'renewTokens'\n        ];\n        toWrap.forEach(key => {\n            this.token[key] = useQueue(this.token[key]);\n        });\n        const boundStartTransaction = startTransaction.bind(null, this);\n        this.idx = {\n            interact: interact.bind(null, this),\n            introspect: introspect.bind(null, this),\n            makeIdxResponse: makeIdxState.bind(null, this),\n            authenticate: authenticate.bind(null, this),\n            register: register.bind(null, this),\n            start: boundStartTransaction,\n            startTransaction: boundStartTransaction,\n            poll: poll.bind(null, this),\n            proceed: proceed.bind(null, this),\n            cancel: cancel.bind(null, this),\n            recoverPassword: recoverPassword.bind(null, this),\n            handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, this),\n            isInteractionRequired: isInteractionRequired.bind(null, this),\n            isInteractionRequiredError,\n            handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, this),\n            isEmailVerifyCallback,\n            parseEmailVerifyCallback,\n            isEmailVerifyCallbackError,\n            getSavedTransactionMeta: getSavedTransactionMeta.bind(null, this),\n            createTransactionMeta: createTransactionMeta.bind(null, this),\n            getTransactionMeta: getTransactionMeta.bind(null, this),\n            saveTransactionMeta: saveTransactionMeta.bind(null, this),\n            clearTransactionMeta: clearTransactionMeta.bind(null, this),\n            isTransactionMetaValid,\n            setFlow: (flow) => {\n                this.options.flow = flow;\n            },\n            getFlow: () => {\n                return this.options.flow;\n            },\n            canProceed: canProceed.bind(null, this),\n            unlockAccount: unlockAccount.bind(null, this),\n        };\n        this.http = {\n            setRequestHeader: setRequestHeader.bind(null, this)\n        };\n        this.fingerprint = fingerprint.bind(null, this);\n        this.emitter = new Emitter();\n        this.tokenManager = new TokenManager(this, args.tokenManager);\n        this.authStateManager = new AuthStateManager(this);\n        this.serviceManager = new ServiceManager(this, args.services);\n    }\n    async start() {\n        await this.serviceManager.start();\n        this.tokenManager.start();\n        if (!this.token.isLoginRedirect()) {\n            await this.authStateManager.updateAuthState();\n        }\n    }\n    async stop() {\n        this.tokenManager.stop();\n        await this.serviceManager.stop();\n    }\n    setHeaders(headers) {\n        this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n    async signIn(opts) {\n        return this.signInWithCredentials(opts);\n    }\n    async signInWithCredentials(opts) {\n        opts = clone(opts || {});\n        const _postToTransaction = (options) => {\n            delete opts.sendFingerprint;\n            return postToTransaction(this, '/api/v1/authn', opts, options);\n        };\n        if (!opts.sendFingerprint) {\n            return _postToTransaction();\n        }\n        return this.fingerprint()\n            .then(function (fingerprint) {\n            return _postToTransaction({\n                headers: {\n                    'X-Device-Fingerprint': fingerprint\n                }\n            });\n        });\n    }\n    async signInWithRedirect(opts = {}) {\n        const { originalUri } = opts, additionalParams = __rest(opts, [\"originalUri\"]);\n        if (this._pending.handleLogin) {\n            return;\n        }\n        this._pending.handleLogin = true;\n        try {\n            if (originalUri) {\n                this.setOriginalUri(originalUri);\n            }\n            const params = Object.assign({\n                scopes: this.options.scopes || ['openid', 'email', 'profile']\n            }, additionalParams);\n            await this.token.getWithRedirect(params);\n        }\n        finally {\n            this._pending.handleLogin = false;\n        }\n    }\n    closeSession() {\n        return this.session.close()\n            .then(async () => {\n            this.tokenManager.clear();\n        })\n            .catch(function (e) {\n            if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n                return null;\n            }\n            throw e;\n        });\n    }\n    async revokeAccessToken(accessToken) {\n        if (!accessToken) {\n            accessToken = (await this.tokenManager.getTokens()).accessToken;\n            const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n            this.tokenManager.remove(accessTokenKey);\n        }\n        if (!accessToken) {\n            return Promise.resolve(null);\n        }\n        return this.token.revoke(accessToken);\n    }\n    async revokeRefreshToken(refreshToken) {\n        if (!refreshToken) {\n            refreshToken = (await this.tokenManager.getTokens()).refreshToken;\n            const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n            this.tokenManager.remove(refreshTokenKey);\n        }\n        if (!refreshToken) {\n            return Promise.resolve(null);\n        }\n        return this.token.revoke(refreshToken);\n    }\n    getSignOutRedirectUrl(options = {}) {\n        let { idToken, postLogoutRedirectUri, state, } = options;\n        if (!idToken) {\n            idToken = this.tokenManager.getTokensSync().idToken;\n        }\n        if (!idToken) {\n            return '';\n        }\n        if (!postLogoutRedirectUri) {\n            postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n        }\n        const logoutUrl = getOAuthUrls(this).logoutUrl;\n        const idTokenHint = idToken.idToken;\n        let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n        if (postLogoutRedirectUri) {\n            logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n        }\n        if (state) {\n            logoutUri += '&state=' + encodeURIComponent(state);\n        }\n        return logoutUri;\n    }\n    async signOut(options) {\n        options = Object.assign({}, options);\n        var defaultUri = window.location.origin;\n        var currentUri = window.location.href;\n        var postLogoutRedirectUri = options.postLogoutRedirectUri\n            || this.options.postLogoutRedirectUri\n            || defaultUri;\n        var accessToken = options.accessToken;\n        var refreshToken = options.refreshToken;\n        var revokeAccessToken = options.revokeAccessToken !== false;\n        var revokeRefreshToken = options.revokeRefreshToken !== false;\n        if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n            refreshToken = this.tokenManager.getTokensSync().refreshToken;\n        }\n        if (revokeAccessToken && typeof accessToken === 'undefined') {\n            accessToken = this.tokenManager.getTokensSync().accessToken;\n        }\n        if (!options.idToken) {\n            options.idToken = this.tokenManager.getTokensSync().idToken;\n        }\n        if (revokeRefreshToken && refreshToken) {\n            await this.revokeRefreshToken(refreshToken);\n        }\n        if (revokeAccessToken && accessToken) {\n            await this.revokeAccessToken(accessToken);\n        }\n        const logoutUri = this.getSignOutRedirectUrl(Object.assign(Object.assign({}, options), { postLogoutRedirectUri }));\n        if (!logoutUri) {\n            return this.closeSession()\n                .then(function () {\n                if (postLogoutRedirectUri === currentUri) {\n                    window.location.reload();\n                }\n                else {\n                    window.location.assign(postLogoutRedirectUri);\n                }\n            });\n        }\n        else {\n            if (options.clearTokensBeforeRedirect) {\n                this.tokenManager.clear();\n            }\n            else {\n                this.tokenManager.addPendingRemoveFlags();\n            }\n            window.location.assign(logoutUri);\n        }\n    }\n    webfinger(opts) {\n        var url = '/.well-known/webfinger' + toQueryString(opts);\n        var options = {\n            headers: {\n                'Accept': 'application/jrd+json'\n            }\n        };\n        return get(this, url, options);\n    }\n    async isAuthenticated(options = {}) {\n        const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n        const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n        const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n        let { accessToken } = this.tokenManager.getTokensSync();\n        if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n            accessToken = undefined;\n            if (shouldRenew) {\n                try {\n                    accessToken = await this.tokenManager.renew('accessToken');\n                }\n                catch (_a) {\n                }\n            }\n            else if (shouldRemove) {\n                this.tokenManager.remove('accessToken');\n            }\n        }\n        let { idToken } = this.tokenManager.getTokensSync();\n        if (idToken && this.tokenManager.hasExpired(idToken)) {\n            idToken = undefined;\n            if (shouldRenew) {\n                try {\n                    idToken = await this.tokenManager.renew('idToken');\n                }\n                catch (_b) {\n                }\n            }\n            else if (shouldRemove) {\n                this.tokenManager.remove('idToken');\n            }\n        }\n        return !!(accessToken && idToken);\n    }\n    async getUser() {\n        const { idToken, accessToken } = this.tokenManager.getTokensSync();\n        return this.token.getUserInfo(accessToken, idToken);\n    }\n    getIdToken() {\n        const { idToken } = this.tokenManager.getTokensSync();\n        return idToken ? idToken.idToken : undefined;\n    }\n    getAccessToken() {\n        const { accessToken } = this.tokenManager.getTokensSync();\n        return accessToken ? accessToken.accessToken : undefined;\n    }\n    getRefreshToken() {\n        const { refreshToken } = this.tokenManager.getTokensSync();\n        return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n    async storeTokensFromRedirect() {\n        const { tokens } = await this.token.parseFromUrl();\n        this.tokenManager.setTokens(tokens);\n    }\n    setOriginalUri(originalUri, state) {\n        const sessionStorage = storageUtil.getSessionStorage();\n        sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n        state = state || this.options.state;\n        if (state) {\n            const sharedStorage = this.storageManager.getOriginalUriStorage();\n            sharedStorage.setItem(state, originalUri);\n        }\n    }\n    getOriginalUri(state) {\n        state = state || this.options.state;\n        if (state) {\n            const sharedStorage = this.storageManager.getOriginalUriStorage();\n            const originalUri = sharedStorage.getItem(state);\n            if (originalUri) {\n                return originalUri;\n            }\n        }\n        const storage = storageUtil.getSessionStorage();\n        return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n    removeOriginalUri(state) {\n        const storage = storageUtil.getSessionStorage();\n        storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n        state = state || this.options.state;\n        if (state) {\n            const sharedStorage = this.storageManager.getOriginalUriStorage();\n            sharedStorage.removeItem && sharedStorage.removeItem(state);\n        }\n    }\n    isLoginRedirect() {\n        return isLoginRedirect(this);\n    }\n    async handleLoginRedirect(tokens, originalUri) {\n        let state = this.options.state;\n        if (tokens) {\n            this.tokenManager.setTokens(tokens);\n            originalUri = originalUri || this.getOriginalUri(this.options.state);\n        }\n        else if (this.isLoginRedirect()) {\n            try {\n                const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n                state = oAuthResponse.state;\n                originalUri = originalUri || this.getOriginalUri(state);\n                await this.storeTokensFromRedirect();\n            }\n            catch (e) {\n                await this.authStateManager.updateAuthState();\n                throw e;\n            }\n        }\n        else {\n            return;\n        }\n        await this.authStateManager.updateAuthState();\n        this.removeOriginalUri(state);\n        const { restoreOriginalUri } = this.options;\n        if (restoreOriginalUri) {\n            await restoreOriginalUri(this, originalUri);\n        }\n        else if (originalUri) {\n            window.location.replace(originalUri);\n        }\n    }\n    isPKCE() {\n        return !!this.options.pkce;\n    }\n    hasResponseType(responseType) {\n        let hasResponseType = false;\n        if (Array.isArray(this.options.responseType) && this.options.responseType.length) {\n            hasResponseType = this.options.responseType.indexOf(responseType) >= 0;\n        }\n        else {\n            hasResponseType = this.options.responseType === responseType;\n        }\n        return hasResponseType;\n    }\n    isAuthorizationCodeFlow() {\n        return this.hasResponseType('code');\n    }\n    getIssuerOrigin() {\n        return this.options.issuer.split('/oauth2/')[0];\n    }\n    forgotPassword(opts) {\n        return postToTransaction(this, '/api/v1/authn/recovery/password', opts);\n    }\n    unlockAccount(opts) {\n        return postToTransaction(this, '/api/v1/authn/recovery/unlock', opts);\n    }\n    verifyRecoveryToken(opts) {\n        return postToTransaction(this, '/api/v1/authn/recovery/token', opts);\n    }\n    async invokeApiMethod(options) {\n        if (!options.accessToken) {\n            const accessToken = (await this.tokenManager.getTokens()).accessToken;\n            options.accessToken = accessToken === null || accessToken === void 0 ? void 0 : accessToken.accessToken;\n        }\n        return httpRequest(this, options);\n    }\n}\nOktaAuth.features = features;\nOktaAuth.crypto = index;\nOktaAuth.webauthn = webauthn;\nOktaAuth.features = OktaAuth.prototype.features = features;\nObject.assign(OktaAuth, {\n    constants\n});\n\nexport { OktaAuth as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}