{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { clone } from '../util/object.js';\nimport { createOAuthMeta } from './util/oauthMeta.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\nfunction getWithRedirect(_x, _x2) {\n  return _getWithRedirect.apply(this, arguments);\n}\nfunction _getWithRedirect() {\n  _getWithRedirect = _asyncToGenerator(function* (sdk, options) {\n    if (arguments.length > 2) {\n      return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n    }\n    options = clone(options) || {};\n    const tokenParams = yield prepareTokenParams(sdk, options);\n    const meta = createOAuthMeta(sdk, tokenParams);\n    const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n    sdk.transactionManager.save(meta, {\n      oauth: true\n    });\n    sdk.token.getWithRedirect._setLocation(requestUrl);\n  });\n  return _getWithRedirect.apply(this, arguments);\n}\nexport { getWithRedirect };","map":{"version":3,"names":["AuthSdkError","clone","createOAuthMeta","prepareTokenParams","buildAuthorizeParams","getWithRedirect","_x","_x2","_getWithRedirect","apply","arguments","_asyncToGenerator","sdk","options","length","Promise","reject","tokenParams","meta","requestUrl","urls","authorizeUrl","transactionManager","save","oauth","token","_setLocation"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/oidc/getWithRedirect.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthSdkError from '../errors/AuthSdkError.js';\nimport { clone } from '../util/object.js';\nimport { createOAuthMeta } from './util/oauthMeta.js';\nimport { prepareTokenParams } from './util/prepareTokenParams.js';\nimport '../idx/types/api.js';\nimport '../myaccount/types.js';\nimport { buildAuthorizeParams } from './endpoints/authorize.js';\n\nasync function getWithRedirect(sdk, options) {\n    if (arguments.length > 2) {\n        return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n    }\n    options = clone(options) || {};\n    const tokenParams = await prepareTokenParams(sdk, options);\n    const meta = createOAuthMeta(sdk, tokenParams);\n    const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n    sdk.transactionManager.save(meta, { oauth: true });\n    sdk.token.getWithRedirect._setLocation(requestUrl);\n}\n\nexport { getWithRedirect };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,YAAY,MAAM,2BAA2B;AACpD,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,eAAe,QAAQ,qBAAqB;AACrD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,OAAO,qBAAqB;AAC5B,OAAO,uBAAuB;AAC9B,SAASC,oBAAoB,QAAQ,0BAA0B;AAAC,SAEjDC,eAAeA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,iBAAA;EAAAA,gBAAA,GAAAG,iBAAA,CAA9B,WAA+BC,GAAG,EAAEC,OAAO,EAAE;IACzC,IAAIH,SAAS,CAACI,MAAM,GAAG,CAAC,EAAE;MACtB,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIhB,YAAY,CAAC,yEAAyE,CAAC,CAAC;IACtH;IACAa,OAAO,GAAGZ,KAAK,CAACY,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,MAAMI,WAAW,SAASd,kBAAkB,CAACS,GAAG,EAAEC,OAAO,CAAC;IAC1D,MAAMK,IAAI,GAAGhB,eAAe,CAACU,GAAG,EAAEK,WAAW,CAAC;IAC9C,MAAME,UAAU,GAAGD,IAAI,CAACE,IAAI,CAACC,YAAY,GAAGjB,oBAAoB,CAACa,WAAW,CAAC;IAC7EL,GAAG,CAACU,kBAAkB,CAACC,IAAI,CAACL,IAAI,EAAE;MAAEM,KAAK,EAAE;IAAK,CAAC,CAAC;IAClDZ,GAAG,CAACa,KAAK,CAACpB,eAAe,CAACqB,YAAY,CAACP,UAAU,CAAC;EACtD,CAAC;EAAA,OAAAX,gBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASL,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}