{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed.js';\nimport { getSavedTransactionMeta } from './transactionMeta.js';\nimport { warn } from '../util/console.js';\nfunction poll(_x) {\n  return _poll.apply(this, arguments);\n}\nfunction _poll() {\n  _poll = _asyncToGenerator(function* (authClient, options = {}) {\n    var _a;\n    let transaction = yield proceed(authClient, {\n      startPolling: true\n    });\n    const meta = getSavedTransactionMeta(authClient);\n    let availablePollingRemeditaions = (_a = meta === null || meta === void 0 ? void 0 : meta.remediations) === null || _a === void 0 ? void 0 : _a.find(remediation => remediation.includes('poll'));\n    if (!(availablePollingRemeditaions === null || availablePollingRemeditaions === void 0 ? void 0 : availablePollingRemeditaions.length)) {\n      warn('No polling remediations available at the current IDX flow stage');\n    }\n    if (Number.isInteger(options.refresh)) {\n      return new Promise(function (resolve, reject) {\n        setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n          var _a, _b;\n          try {\n            const refresh = (_b = (_a = transaction.nextStep) === null || _a === void 0 ? void 0 : _a.poll) === null || _b === void 0 ? void 0 : _b.refresh;\n            if (refresh) {\n              resolve(poll(authClient, {\n                refresh\n              }));\n            } else {\n              resolve(transaction);\n            }\n          } catch (err) {\n            reject(err);\n          }\n        }), options.refresh);\n      });\n    }\n    return transaction;\n  });\n  return _poll.apply(this, arguments);\n}\nexport { poll };","map":{"version":3,"names":["proceed","getSavedTransactionMeta","warn","poll","_x","_poll","apply","arguments","_asyncToGenerator","authClient","options","_a","transaction","startPolling","meta","availablePollingRemeditaions","remediations","find","remediation","includes","length","Number","isInteger","refresh","Promise","resolve","reject","setTimeout","_b","nextStep","err"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-auth-js/esm/browser/idx/poll.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed.js';\nimport { getSavedTransactionMeta } from './transactionMeta.js';\nimport { warn } from '../util/console.js';\n\nasync function poll(authClient, options = {}) {\n    var _a;\n    let transaction = await proceed(authClient, {\n        startPolling: true\n    });\n    const meta = getSavedTransactionMeta(authClient);\n    let availablePollingRemeditaions = (_a = meta === null || meta === void 0 ? void 0 : meta.remediations) === null || _a === void 0 ? void 0 : _a.find(remediation => remediation.includes('poll'));\n    if (!(availablePollingRemeditaions === null || availablePollingRemeditaions === void 0 ? void 0 : availablePollingRemeditaions.length)) {\n        warn('No polling remediations available at the current IDX flow stage');\n    }\n    if (Number.isInteger(options.refresh)) {\n        return new Promise(function (resolve, reject) {\n            setTimeout(async function () {\n                var _a, _b;\n                try {\n                    const refresh = (_b = (_a = transaction.nextStep) === null || _a === void 0 ? void 0 : _a.poll) === null || _b === void 0 ? void 0 : _b.refresh;\n                    if (refresh) {\n                        resolve(poll(authClient, {\n                            refresh\n                        }));\n                    }\n                    else {\n                        resolve(transaction);\n                    }\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }, options.refresh);\n        });\n    }\n    return transaction;\n}\n\nexport { poll };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,uBAAuB,QAAQ,sBAAsB;AAC9D,SAASC,IAAI,QAAQ,oBAAoB;AAAC,SAE3BC,IAAIA,CAAAC,EAAA;EAAA,OAAAC,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,MAAA;EAAAA,KAAA,GAAAG,iBAAA,CAAnB,WAAoBC,UAAU,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1C,IAAIC,EAAE;IACN,IAAIC,WAAW,SAASZ,OAAO,CAACS,UAAU,EAAE;MACxCI,YAAY,EAAE;IAClB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAGb,uBAAuB,CAACQ,UAAU,CAAC;IAChD,IAAIM,4BAA4B,GAAG,CAACJ,EAAE,GAAGG,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACE,YAAY,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACM,IAAI,CAACC,WAAW,IAAIA,WAAW,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACjM,IAAI,EAAEJ,4BAA4B,KAAK,IAAI,IAAIA,4BAA4B,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,4BAA4B,CAACK,MAAM,CAAC,EAAE;MACpIlB,IAAI,CAAC,iEAAiE,CAAC;IAC3E;IACA,IAAImB,MAAM,CAACC,SAAS,CAACZ,OAAO,CAACa,OAAO,CAAC,EAAE;MACnC,OAAO,IAAIC,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;QAC1CC,UAAU,eAAAnB,iBAAA,CAAC,aAAkB;UACzB,IAAIG,EAAE,EAAEiB,EAAE;UACV,IAAI;YACA,MAAML,OAAO,GAAG,CAACK,EAAE,GAAG,CAACjB,EAAE,GAAGC,WAAW,CAACiB,QAAQ,MAAM,IAAI,IAAIlB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACR,IAAI,MAAM,IAAI,IAAIyB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,OAAO;YAC/I,IAAIA,OAAO,EAAE;cACTE,OAAO,CAACtB,IAAI,CAACM,UAAU,EAAE;gBACrBc;cACJ,CAAC,CAAC,CAAC;YACP,CAAC,MACI;cACDE,OAAO,CAACb,WAAW,CAAC;YACxB;UACJ,CAAC,CACD,OAAOkB,GAAG,EAAE;YACRJ,MAAM,CAACI,GAAG,CAAC;UACf;QACJ,CAAC,GAAEpB,OAAO,CAACa,OAAO,CAAC;MACvB,CAAC,CAAC;IACN;IACA,OAAOX,WAAW;EACtB,CAAC;EAAA,OAAAP,KAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASJ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}