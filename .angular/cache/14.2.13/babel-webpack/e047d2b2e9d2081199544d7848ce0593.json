{"ast":null,"code":"import oktaUnderscore from '../util/underscore-wrapper.js';\nimport Backbone from '../vendor/lib/backbone.js';\nfunction isModelPropertySchema(obj) {\n  return obj && obj.type || obj.deps;\n}\n/**\n   * Archer.Model is a standard [Backbone.Model](http://backbonejs.org/#Model) with a few additions:\n   *\n   * - {@link src/framework/Model#derived Derived properties}\n   * - {@link src/framework/Model#props Built in schema validation}\n   * - {@link src/framework/Model#local Private properties (with schema validation)}\n   * - {@link src/framework/Model#flat Flattening of nested objects}\n   *\n   * Both derived and private properties are filtered out when sending the data to the server.\n   *\n   * See [Backbone.Model](http://backbonejs.org/#Model-constructor).\n   *\n   * @class src/framework/Model\n   * @extends external:Backbone.Model\n   * @param {Object} [attributes] - Initial model attributes (data)\n   * @param {Object} [options] - Options hash\n   * @example\n   * var Person = Archer.Model.extend({\n   *   props: {\n   *     'fname': 'string',\n   *     'lname': 'string'\n   *   },\n   *   local: {\n   *     isLoggedIn: 'boolean'\n   *   },\n   *   derived: {\n   *     name: {\n   *       deps: ['fname', 'lname'],\n   *       fn: function (fname, lname) {\n   *         return fname + ' ' + lname;\n   *       }\n   *     }\n   *   }\n   * });\n   * var model = new Person({fname: 'Joe', lname: 'Doe'});\n   * model.get('name'); //=> \"Joe Doe\"\n   * model.toJSON(); //=> {fname: 'Joe', lname: 'Doe'}\n   *\n   * model.set('isLoggedIn', true);\n   * model.get('isLoggedIn'); //=> true\n   * model.toJSON(); //=> {fname: 'Joe', lname: 'Doe'}\n   */\n\nlet Model;\nconst statics = {\n  ERROR_BLANK: 'model.validation.field.blank',\n  ERROR_WRONG_TYPE: 'model.validation.field.wrong.type',\n  ERROR_NOT_ALLOWED: 'model.validation.field.value.not.allowed',\n  ERROR_INVALID: 'model.validation.field.invalid',\n  ERROR_IARRAY_UNIQUE: 'model.validation.field.array.unique',\n  ERROR_INVALID_FORMAT_EMAIL: 'model.validation.field.invalid.format.email',\n  ERROR_INVALID_FORMAT_URI: 'model.validation.field.invalid.format.uri',\n  ERROR_INVALID_FORMAT_IPV4: 'model.validation.field.invalid.format.ipv4',\n  ERROR_INVALID_FORMAT_HOSTNAME: 'model.validation.field.invalid.format.hostname',\n  ERROR_STRING_STRING_MIN_LENGTH: 'model.validation.field.string.minLength',\n  ERROR_STRING_STRING_MAX_LENGTH: 'model.validation.field.string.maxLength'\n};\nfunction flatten(value, objectTypeFields, key, target) {\n  var filter = oktaUnderscore.contains(objectTypeFields, key);\n  target || (target = {});\n  if (!filter && oktaUnderscore.isObject(value) && !oktaUnderscore.isArray(value) && !oktaUnderscore.isFunction(value)) {\n    oktaUnderscore.each(value, function (val, i) {\n      flatten(val, objectTypeFields, key ? key + '.' + i : i, target);\n    });\n  } // Case where target is an empty object. Guard against returning {undefined: undefined}.\n  else if (key !== undefined) {\n    target[key] = value;\n  }\n  return target;\n}\nfunction unflatten(data) {\n  oktaUnderscore.each(data, function (value, key, data) {\n    if (key.indexOf('.') === -1) {\n      return;\n    }\n    var part;\n    var ref = data;\n    var parts = key.split('.');\n    while ((part = parts.shift()) !== undefined) {\n      if (!ref[part]) {\n        ref[part] = parts.length ? {} : value;\n      }\n      ref = ref[part];\n    }\n    delete data[key];\n  });\n  return data;\n}\nfunction createMessage(field, msg) {\n  var obj = {};\n  obj[field.name] = msg;\n  return obj;\n}\nfunction normalizeSchemaDef(field, name) {\n  var target;\n  if (oktaUnderscore.isString(field)) {\n    target = {\n      type: field\n    };\n  } else if (oktaUnderscore.isArray(field)) {\n    target = {\n      type: field[0],\n      required: field[1],\n      value: field[2]\n    };\n  } else {\n    target = oktaUnderscore.clone(field);\n  }\n  oktaUnderscore.defaults(target, {\n    required: false,\n    name: name\n  });\n  return target;\n}\nfunction capitalize(string) {\n  return string.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n  });\n}\nfunction _validateRegex(value, pattern, error) {\n  if (!pattern.test(value)) {\n    return error;\n  }\n}\nvar StringFormatValidators = {\n  /*eslint max-len: 0 */\n  email: function (value) {\n    // Taken from  http://emailregex.com/ on 2017-03-06.\n    var pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_EMAIL);\n  },\n  uri: function (value) {\n    // source: https://mathiasbynens.be/demo/url-regex\n    var pattern = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_URI);\n  },\n  ipv4: function (value) {\n    // source: https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n    var pattern = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_IPV4);\n  },\n  hostname: function (value) {\n    // source: http://www.regextester.com/23\n    var pattern = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_HOSTNAME);\n  }\n};\nfunction validateStringFormat(field, value) {\n  var validator = StringFormatValidators[field.format];\n  if (field.format && !validator) {\n    throw new TypeError(field.format + ' is not a supported string format');\n  }\n  return validator && validator(value);\n}\nfunction validateString(field, value) {\n  var createMessageWith = oktaUnderscore.partial(createMessage, field);\n  var invalidFormat = validateStringFormat(field, value);\n  if (invalidFormat) {\n    return createMessageWith(invalidFormat);\n  }\n  if (value && field.minLength && value.length < field.minLength) {\n    return createMessageWith(Model.ERROR_STRING_STRING_MIN_LENGTH);\n  }\n  if (value && field.maxLength && value.length > field.maxLength) {\n    return createMessageWith(Model.ERROR_STRING_STRING_MAX_LENGTH);\n  }\n}\nfunction validateField(field, value) {\n  /* eslint complexity: [2, 25], max-statements: [2, 30] */\n  var createMessageWith = oktaUnderscore.partial(createMessage, field);\n  var isDefined = !oktaUnderscore.isUndefined(value) && !oktaUnderscore.isNull(value);\n  var checkType;\n  var errorMessage; // If using an array validator, perform the validation\n\n  if (Array.isArray(field.validate)) {\n    const output = [];\n    let foundError = false;\n    let result;\n    field.validate.forEach(item => {\n      if (!value) {\n        result = false;\n      } else {\n        switch (item.type.toLowerCase()) {\n          case 'regex':\n            result = new RegExp(item.value.pattern, item.value.flags || '').test(value);\n            break;\n          default:\n            result = false;\n        }\n      } // Append the result.\n\n      foundError = foundError || !result;\n      output.push({\n        // eslint-disable-next-line no-prototype-builtins\n        message: item.hasOwnProperty('message') ? item.message : '',\n        passed: result\n      });\n    });\n    if (foundError) {\n      return createMessageWith(output);\n    }\n    return;\n  } // check required fields\n\n  if (field.required && (!isDefined || oktaUnderscore.isNull(value) || value === '')) {\n    return createMessageWith(Model.ERROR_BLANK);\n  } // check type\n\n  checkType = oktaUnderscore['is' + capitalize(field.type)];\n  if (isDefined && field.type !== 'any' && (!oktaUnderscore.isFunction(checkType) || !checkType(value))) {\n    return createMessageWith(Model.ERROR_WRONG_TYPE);\n  } // validate string format\n\n  if (value && field.type === 'string') {\n    var error = validateString(field, value);\n    if (error) {\n      return error;\n    }\n  } // check pre set values (enum)\n\n  if (isDefined && field.values && !oktaUnderscore.contains(field.values, value)) {\n    return createMessageWith(Model.ERROR_NOT_ALLOWED);\n  } // check validate method\n\n  if (oktaUnderscore.isFunction(field.validate)) {\n    var result = field.validate(value);\n    if (oktaUnderscore.isString(result) && result) {\n      return createMessageWith(result);\n    } else if (result === false) {\n      return createMessageWith(Model.ERROR_INVALID);\n    }\n  } // check array items\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  if (isDefined && field.type === 'array' && (errorMessage = validateArrayField(field, value))) {\n    return createMessageWith(errorMessage);\n  }\n}\nfunction validateArrayField(field, arr) {\n  if (field.minItems && arr.length < field.minItems) {\n    return 'model.validation.field.array.minItems';\n  } else if (field.maxItems && arr.length > field.maxItems) {\n    return 'model.validation.field.array.maxItems';\n  } else if (field.uniqueItems && arr.length > oktaUnderscore.uniq(arr).length) {\n    return Model.ERROR_IARRAY_UNIQUE;\n  } else if (field.items) {\n    /* eslint max-depth: [2, 3] */\n    var arrayField = normalizeSchemaDef(field.items, 'placeholder');\n    for (var i = 0; i < arr.length; i++) {\n      var value = arr[i];\n      var error = validateField(arrayField, value);\n      if (error) {\n        return error['placeholder'];\n      }\n    }\n  }\n}\nconst props = /** @lends src/framework/Model.prototype */\n{\n  /**\n     * Pass props as an object to extend, describing the observable properties of your model. The props\n     * properties should not be set on an instance, as this won't define new properties, they should only be passed to\n     * extend.\n     * Properties can be defined in three different ways:\n     *\n     * - As a string with the expected dataType. One of string, number, boolean, array, object, date, or any.\n     * Eg: `name: 'string'`.\n     * - An array of `[dataType, required, default]`\n     * - An object `{type: 'string', format: '', required: true, value: '', values: [], validate: function() {}`\n     *   - `value` will be the value that the property will be set to if it is undefined, either by not being set during\n     *   initialization, or by being explicitly set to undefined.\n     *   - `format` is a json-schame derived string format. Supported formats are: `email`, `uri`, `hostname` and `ipv4`.\n     *   - If `required` is true, one of two things will happen. If a default is set for the property, the property will\n     *   start with that value. If a default is not set for the property, validation will fail\n     *   - If `values` array is passed, then you'll be able to change a property to one of those values only.\n     *   - If `validate` is defined, it should return false or a custom message string when the validation fails.\n     *   - If the type is defined as `array`, the array elements could be defined by `minItems` (Number),\n     *   `uniqueItems` (Boolean) and `items` (a field definition such as this one that will validate each array member)\n     *   To the `validate` method\n     *   - Trying to set a property to an invalid type will raise an exception.\n     *\n     * @type {Mixed|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     name: 'string',\n     *     age: 'number',\n     *     paying: ['boolean', true, false], //required attribute, defaulted to false\n     *     type: {\n     *       type: 'string',\n     *       values: ['regular-hero', 'super-hero', 'mega-hero']\n     *     },\n     *     likes: {\n     *       type: 'string',\n     *       validate: function (value) {\n     *         return /^[\\w]+ing$/.test(value)\n     *       }\n     *     }\n     *   }\n     * });\n     */\n  props: {},\n  /**\n     * Derived properties (also known as computed properties) are properties of the model that depend on the\n     * other (props, local or even derived properties to determine their value. Best demonstrated with an example:\n     *\n     * Each derived property, is defined as an object with the current properties:\n     *\n     * - `deps` {Array} - An array of property names which the derived property depends on.\n     * - `fn` {Function} - A function which returns the value of the computed property. It is called in the context of\n     * the current object, so that this is set correctly.\n     * - `cache` {Boolean} -  - Whether to cache the property. Uncached properties are computed every time they are\n     * accessed. Useful if it depends on the current time for example. Defaults to `true`.\n     *\n     * Derived properties are retrieved and fire change events just like any other property. They cannot be set\n     * directly.\n     * @type {Object|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     firstName: 'string',\n     *     lastName: 'string'\n     *   },\n     *   derived: {\n     *     fullName: {\n     *       deps: ['firstName', 'lastName'],\n     *       fn: function (firstName, lastName) {\n     *         return firstName + ' ' + lastName;\n     *       }\n     *     }\n     *   }\n     * });\n     *\n     * var person = new Person({ firstName: 'Phil', lastName: 'Roberts' })\n     * console.log(person.get('fullName')) //=> \"Phil Roberts\"\n     *\n     * person.set('firstName', 'Bob');\n     * console.log(person.get('fullName')) //=> \"Bob Roberts\"\n     */\n  derived: {},\n  /**\n     * local properties are defined and work in exactly the same way as {@link src/framework/Model#props|props}, but generally only exist for\n     * the lifetime of the page.\n     * They would not typically be persisted to the server, and are not returned by calls to {@link src/framework/Model#toJSON|toJSON}.\n     *\n     * @type {Object|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     name: 'string',\n     *   },\n     *   local: {\n     *     isLoggedIn: 'boolean'\n     *   }\n     * );\n     */\n  local: {},\n  /**\n     * Flatten the payload into dot notation string keys:\n     *\n     * @type {Boolean|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     'profile.fname': 'string',\n     *     'profile.lname': 'string',\n     *     'profile.languages': 'object'\n     *   },\n     *   flat: true\n     * });\n     * var person = new Person({'profile': {\n     *                            'fname': 'John',\n     *                            'lname': 'Doe',\n     *                            'languages': {name: \"English\", value: \"EN\"}\n     *                         }}, {parse: true});\n     * person.get('profile'); //=> undefined\n     * person.get('profile.fname'); //=> 'John'\n     * person.get('profile.lname'); //=> 'Doe'\n     * person.get('profile.languages'); //=> {name: \"English\", value: \"EN\"}\n     * person.get('profile.languages.name'); //=> undefined\n     * person.toJSON(); //=> {'profile': {'fname': 'John'} }\n     */\n  flat: true,\n  /**\n     * @deprecated\n     * @alias Backbone.Model#defaults\n     */\n  defaults: {},\n  // FIXME: preinitialize takes parameter `attributes` and `options`, which inherit from constructor.\n  preinitialize: function (options, ...rest) {\n    this.options = options || {};\n    var schema = this['__schema__'] = {};\n    var objectTypeFields = [];\n    schema.computedProperties = {};\n    schema.props = oktaUnderscore.clone(oktaUnderscore.result(this, 'props') || {});\n    schema.derived = oktaUnderscore.clone(oktaUnderscore.result(this, 'derived') || {});\n    schema.local = oktaUnderscore.clone(oktaUnderscore.result(this, 'local') || {});\n    var defaults = {};\n    oktaUnderscore.each(oktaUnderscore.extend({}, schema.props, schema.local), function (options, name) {\n      var schemaDef = normalizeSchemaDef(options, name);\n      if (!oktaUnderscore.isUndefined(schemaDef.value)) {\n        defaults[name] = schemaDef.value;\n      }\n      if (schemaDef.type === 'object') {\n        objectTypeFields.push(name);\n      }\n    }, this);\n    if (oktaUnderscore.size(defaults)) {\n      var localDefaults = oktaUnderscore.result(this, 'defaults');\n      this.defaults = function () {\n        return oktaUnderscore.defaults({}, defaults, localDefaults);\n      };\n    } // override `validate`\n\n    this.validate = oktaUnderscore.wrap(this.validate, function (validate) {\n      var args = oktaUnderscore.rest(arguments);\n      var res = oktaUnderscore.extend(this._validateSchema.apply(this, args), validate.apply(this, args));\n      return oktaUnderscore.size(res) && res || undefined;\n    }); // override `parse`\n\n    this.parse = oktaUnderscore.wrap(this.parse, function (parse) {\n      var target = parse.apply(this, oktaUnderscore.rest(arguments));\n      if (oktaUnderscore.result(this, 'flat')) {\n        target = flatten(target, objectTypeFields);\n      }\n      return target;\n    });\n    Backbone.Model.prototype.preinitialize.call(this, options, ...rest);\n  },\n  // FIXME:\n  // constructor takes parameter `attributes` and `options`.\n  constructor: function () {\n    Backbone.Model.apply(this, arguments);\n    var schema = this['__schema__'];\n    oktaUnderscore.each(schema.derived, function (options, name) {\n      schema.computedProperties[name] = this.__getDerivedValue(name); // set initial value;\n\n      var deps = isModelPropertySchema(options) ? options.deps || [] : [];\n      if (deps.length) {\n        this.on('cache:clear change:' + deps.join(' change:'), function () {\n          var value = this.__getDerivedValue(name);\n          if (value !== schema.computedProperties[name]) {\n            schema.computedProperties[name] = value;\n            this.trigger('change:' + name, this, value);\n          }\n        }, this);\n      }\n    }, this);\n    this.on('sync', function () {\n      this.__syncedData = this.toJSON();\n    }, this);\n  },\n  validate: function () {},\n  /**\n     * Check if the schema settings allow this field to exist in the model\n     * @param  {String} key\n     * @return {Boolean}\n     */\n  allows: function (key) {\n    var schema = this['__schema__'];\n    var all = oktaUnderscore.extend({}, schema.props, schema.local);\n    if (!oktaUnderscore.has(all, key)) ;\n    return true;\n  },\n  /**\n     * Returns the schema for the specific property\n     *\n     * @param propName - The name of the property\n     * @returns {*} | null\n     */\n  getPropertySchema: function (propName) {\n    var schema = this['__schema__'];\n    return oktaUnderscore.reduce([schema.props, schema.local], function (result, options) {\n      return result || normalizeSchemaDef(options[propName], propName);\n    }, null);\n  },\n  set: function (key, val) {\n    var attrs;\n    if (typeof key === 'object') {\n      attrs = key;\n    } else {\n      (attrs = {})[key] = val;\n    } // Don't override a computed properties\n\n    oktaUnderscore.each(attrs, function (value, key) {\n      if (oktaUnderscore.has(this['__schema__'].derived, key)) {\n        throw new Error(`overriding derived properties is not supported: ${key}`);\n      }\n    }, this); // Schema validation\n\n    var errorFields = [];\n    oktaUnderscore.each(attrs, function (value, key) {\n      this.allows(key) || errorFields.push(key);\n    }, this);\n    if (errorFields.length) {\n      throw new Error(`field not allowed: ${errorFields.join(', ')}`);\n    }\n    return Backbone.Model.prototype.set.apply(this, arguments);\n  },\n  get: function (attr) {\n    var schema = this['__schema__'];\n    if (oktaUnderscore.has(schema.derived, attr)) {\n      if (schema.derived[attr].cache !== false) {\n        return schema.computedProperties[attr];\n      } else {\n        return this.__getDerivedValue(attr);\n      }\n    }\n    return Backbone.Model.prototype.get.apply(this, arguments);\n  },\n  /**\n     * Return a shallow copy of the model's attributes for JSON stringification.\n     * This can be used for persistence, serialization, or for augmentation before being sent to the server.\n     * The name of this method is a bit confusing, as it doesn't actually return a JSON string —\n     * but I'm afraid that it's the way that the JavaScript API for JSON.stringify works.\n     *\n     * See [Backbone.Model.toJSON](http://backbonejs.org/#Model-toJSON)\n     *\n     * @param  {Object} options\n     * @return {Object}\n     * @example\n     * var artist = new Model({\n     *   firstName: 'Wassily',\n     *   lastName: 'Kandinsky'\n     * });\n     *\n     * artist.set({birthday: 'December 16, 1866'});\n     * JSON.stringify(artist); //=> {'firstName':'Wassily','lastName':'Kandinsky','birthday':'December 16, 1866'}\n     */\n  toJSON: function (options) {\n    options || (options = {});\n    var res = oktaUnderscore.clone(Backbone.Model.prototype.toJSON.apply(this, arguments));\n    var schema = this['__schema__']; // cleanup local properties\n\n    if (!options.verbose) {\n      res = oktaUnderscore.omit(res, oktaUnderscore.keys(schema.local));\n    } else {\n      // add derived properties\n      oktaUnderscore.each(schema.derived, function (options, name) {\n        res[name] = this.get(name);\n      }, this);\n    }\n    if (this.flat) {\n      res = unflatten(res);\n    }\n    return res;\n  },\n  /**\n     * Removes all attributes from the model, including the id attribute.\n     * Fires a `\"change\"` event unless `silent` is passed as an option.\n     * Sets the default values to the model\n     * @param {Object} [options]\n     */\n  reset: function (options) {\n    this.clear(options);\n    this.set(oktaUnderscore.result(this, 'defaults'), options);\n  },\n  /**\n     * Is the data on the model has local modifications since the last sync event?\n     * @return {Boolean} is the model in sync with the server\n     */\n  isSynced: function () {\n    return oktaUnderscore.isEqual(this.__syncedData, this.toJSON());\n  },\n  /**\n     * validate a specific field in the model.\n     * @param  {String} key\n     * @return {Object} returns `{fieldName: errorMessage}` if invalid, otherwise undefined.\n     * @readonly\n     */\n  validateField: function (key) {\n    var schema = key && this.getPropertySchema(key);\n    return schema && validateField(schema, this.get(key));\n  },\n  /**\n     * Runs local schema validation. Invoked internally by {@link src/framework/Model#validate|validate}.\n     * @return {Object}\n     * @protected\n     */\n  _validateSchema: function () {\n    var schema = this['__schema__'];\n    return oktaUnderscore.reduce(oktaUnderscore.extend({}, schema.props, schema.local), function (memo, options, name) {\n      return oktaUnderscore.extend(memo, this.validateField(name) || {});\n    }, {}, this);\n  },\n  __getDerivedValue: function (name) {\n    var options = this['__schema__'].derived[name];\n    if (oktaUnderscore.isString(options)) {\n      var key = options;\n      options = {\n        deps: [key],\n        fn: function () {\n          return this.get(key);\n        }\n      };\n    }\n    var deps = options.deps || [];\n    return options.fn.apply(this, oktaUnderscore.map(deps, this.get, this));\n  }\n};\nModel = Backbone.Model.extend(props, statics);\n/**\n * It's used for distinguishing the ambiguity from _.isFunction()\n * which returns True for both a JavaScript Class constructor function\n * and normal function. With this flag, we can tell a function is actually\n * a Model Class.\n * This flag is added in order to support the type of a parameter can be\n * either a Class or pure function that returns a Class.\n */\n\nModel.isCourageModel = true;\nvar FrameworkModel = Model;\nexport { FrameworkModel as default, isModelPropertySchema };","map":{"version":3,"names":["oktaUnderscore","Backbone","isModelPropertySchema","obj","type","deps","Model","statics","ERROR_BLANK","ERROR_WRONG_TYPE","ERROR_NOT_ALLOWED","ERROR_INVALID","ERROR_IARRAY_UNIQUE","ERROR_INVALID_FORMAT_EMAIL","ERROR_INVALID_FORMAT_URI","ERROR_INVALID_FORMAT_IPV4","ERROR_INVALID_FORMAT_HOSTNAME","ERROR_STRING_STRING_MIN_LENGTH","ERROR_STRING_STRING_MAX_LENGTH","flatten","value","objectTypeFields","key","target","filter","contains","isObject","isArray","isFunction","each","val","i","undefined","unflatten","data","indexOf","part","ref","parts","split","shift","length","createMessage","field","msg","name","normalizeSchemaDef","isString","required","clone","defaults","capitalize","string","toLowerCase","replace","letter","toUpperCase","_validateRegex","pattern","error","test","StringFormatValidators","email","uri","ipv4","hostname","validateStringFormat","validator","format","TypeError","validateString","createMessageWith","partial","invalidFormat","minLength","maxLength","validateField","isDefined","isUndefined","isNull","checkType","errorMessage","Array","validate","output","foundError","result","forEach","item","RegExp","flags","push","message","hasOwnProperty","passed","values","validateArrayField","arr","minItems","maxItems","uniqueItems","uniq","items","arrayField","props","derived","local","flat","preinitialize","options","rest","schema","computedProperties","extend","schemaDef","size","localDefaults","wrap","args","arguments","res","_validateSchema","apply","parse","prototype","call","constructor","__getDerivedValue","on","join","trigger","__syncedData","toJSON","allows","all","has","getPropertySchema","propName","reduce","set","attrs","Error","errorFields","get","attr","cache","verbose","omit","keys","reset","clear","isSynced","isEqual","memo","fn","map","isCourageModel","FrameworkModel","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/packages/@okta/courage-dist/esm/src/courage/framework/Model.js"],"sourcesContent":["import oktaUnderscore from '../util/underscore-wrapper.js';\nimport Backbone from '../vendor/lib/backbone.js';\n\nfunction isModelPropertySchema(obj) {\n  return obj && obj.type || obj.deps;\n}\n/**\n   * Archer.Model is a standard [Backbone.Model](http://backbonejs.org/#Model) with a few additions:\n   *\n   * - {@link src/framework/Model#derived Derived properties}\n   * - {@link src/framework/Model#props Built in schema validation}\n   * - {@link src/framework/Model#local Private properties (with schema validation)}\n   * - {@link src/framework/Model#flat Flattening of nested objects}\n   *\n   * Both derived and private properties are filtered out when sending the data to the server.\n   *\n   * See [Backbone.Model](http://backbonejs.org/#Model-constructor).\n   *\n   * @class src/framework/Model\n   * @extends external:Backbone.Model\n   * @param {Object} [attributes] - Initial model attributes (data)\n   * @param {Object} [options] - Options hash\n   * @example\n   * var Person = Archer.Model.extend({\n   *   props: {\n   *     'fname': 'string',\n   *     'lname': 'string'\n   *   },\n   *   local: {\n   *     isLoggedIn: 'boolean'\n   *   },\n   *   derived: {\n   *     name: {\n   *       deps: ['fname', 'lname'],\n   *       fn: function (fname, lname) {\n   *         return fname + ' ' + lname;\n   *       }\n   *     }\n   *   }\n   * });\n   * var model = new Person({fname: 'Joe', lname: 'Doe'});\n   * model.get('name'); //=> \"Joe Doe\"\n   * model.toJSON(); //=> {fname: 'Joe', lname: 'Doe'}\n   *\n   * model.set('isLoggedIn', true);\n   * model.get('isLoggedIn'); //=> true\n   * model.toJSON(); //=> {fname: 'Joe', lname: 'Doe'}\n   */\n\n\nlet Model;\nconst statics = {\n  ERROR_BLANK: 'model.validation.field.blank',\n  ERROR_WRONG_TYPE: 'model.validation.field.wrong.type',\n  ERROR_NOT_ALLOWED: 'model.validation.field.value.not.allowed',\n  ERROR_INVALID: 'model.validation.field.invalid',\n  ERROR_IARRAY_UNIQUE: 'model.validation.field.array.unique',\n  ERROR_INVALID_FORMAT_EMAIL: 'model.validation.field.invalid.format.email',\n  ERROR_INVALID_FORMAT_URI: 'model.validation.field.invalid.format.uri',\n  ERROR_INVALID_FORMAT_IPV4: 'model.validation.field.invalid.format.ipv4',\n  ERROR_INVALID_FORMAT_HOSTNAME: 'model.validation.field.invalid.format.hostname',\n  ERROR_STRING_STRING_MIN_LENGTH: 'model.validation.field.string.minLength',\n  ERROR_STRING_STRING_MAX_LENGTH: 'model.validation.field.string.maxLength'\n};\n\nfunction flatten(value, objectTypeFields, key, target) {\n  var filter = oktaUnderscore.contains(objectTypeFields, key);\n  target || (target = {});\n\n  if (!filter && oktaUnderscore.isObject(value) && !oktaUnderscore.isArray(value) && !oktaUnderscore.isFunction(value)) {\n    oktaUnderscore.each(value, function (val, i) {\n      flatten(val, objectTypeFields, key ? key + '.' + i : i, target);\n    });\n  } // Case where target is an empty object. Guard against returning {undefined: undefined}.\n  else if (key !== undefined) {\n    target[key] = value;\n  }\n\n  return target;\n}\n\nfunction unflatten(data) {\n  oktaUnderscore.each(data, function (value, key, data) {\n    if (key.indexOf('.') === -1) {\n      return;\n    }\n\n    var part;\n    var ref = data;\n    var parts = key.split('.');\n\n    while ((part = parts.shift()) !== undefined) {\n      if (!ref[part]) {\n        ref[part] = parts.length ? {} : value;\n      }\n\n      ref = ref[part];\n    }\n\n    delete data[key];\n  });\n  return data;\n}\n\nfunction createMessage(field, msg) {\n  var obj = {};\n  obj[field.name] = msg;\n  return obj;\n}\n\nfunction normalizeSchemaDef(field, name) {\n  var target;\n\n  if (oktaUnderscore.isString(field)) {\n    target = {\n      type: field\n    };\n  } else if (oktaUnderscore.isArray(field)) {\n    target = {\n      type: field[0],\n      required: field[1],\n      value: field[2]\n    };\n  } else {\n    target = oktaUnderscore.clone(field);\n  }\n\n  oktaUnderscore.defaults(target, {\n    required: false,\n    name: name\n  });\n  return target;\n}\n\nfunction capitalize(string) {\n  return string.toLowerCase().replace(/\\b[a-z]/g, function (letter) {\n    return letter.toUpperCase();\n  });\n}\n\nfunction _validateRegex(value, pattern, error) {\n  if (!pattern.test(value)) {\n    return error;\n  }\n}\n\nvar StringFormatValidators = {\n  /*eslint max-len: 0 */\n  email: function (value) {\n    // Taken from  http://emailregex.com/ on 2017-03-06.\n    var pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_EMAIL);\n  },\n  uri: function (value) {\n    // source: https://mathiasbynens.be/demo/url-regex\n    var pattern = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_URI);\n  },\n  ipv4: function (value) {\n    // source: https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n    var pattern = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_IPV4);\n  },\n  hostname: function (value) {\n    // source: http://www.regextester.com/23\n    var pattern = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/;\n    return _validateRegex(value, pattern, Model.ERROR_INVALID_FORMAT_HOSTNAME);\n  }\n};\n\nfunction validateStringFormat(field, value) {\n  var validator = StringFormatValidators[field.format];\n\n  if (field.format && !validator) {\n    throw new TypeError(field.format + ' is not a supported string format');\n  }\n\n  return validator && validator(value);\n}\n\nfunction validateString(field, value) {\n  var createMessageWith = oktaUnderscore.partial(createMessage, field);\n  var invalidFormat = validateStringFormat(field, value);\n\n  if (invalidFormat) {\n    return createMessageWith(invalidFormat);\n  }\n\n  if (value && field.minLength && value.length < field.minLength) {\n    return createMessageWith(Model.ERROR_STRING_STRING_MIN_LENGTH);\n  }\n\n  if (value && field.maxLength && value.length > field.maxLength) {\n    return createMessageWith(Model.ERROR_STRING_STRING_MAX_LENGTH);\n  }\n}\n\nfunction validateField(field, value) {\n  /* eslint complexity: [2, 25], max-statements: [2, 30] */\n  var createMessageWith = oktaUnderscore.partial(createMessage, field);\n  var isDefined = !oktaUnderscore.isUndefined(value) && !oktaUnderscore.isNull(value);\n  var checkType;\n  var errorMessage; // If using an array validator, perform the validation\n\n  if (Array.isArray(field.validate)) {\n    const output = [];\n    let foundError = false;\n    let result;\n    field.validate.forEach(item => {\n      if (!value) {\n        result = false;\n      } else {\n        switch (item.type.toLowerCase()) {\n          case 'regex':\n            result = new RegExp(item.value.pattern, item.value.flags || '').test(value);\n            break;\n\n          default:\n            result = false;\n        }\n      } // Append the result.\n\n\n      foundError = foundError || !result;\n      output.push({\n        // eslint-disable-next-line no-prototype-builtins\n        message: item.hasOwnProperty('message') ? item.message : '',\n        passed: result\n      });\n    });\n\n    if (foundError) {\n      return createMessageWith(output);\n    }\n\n    return;\n  } // check required fields\n\n\n  if (field.required && (!isDefined || oktaUnderscore.isNull(value) || value === '')) {\n    return createMessageWith(Model.ERROR_BLANK);\n  } // check type\n\n\n  checkType = oktaUnderscore['is' + capitalize(field.type)];\n\n  if (isDefined && field.type !== 'any' && (!oktaUnderscore.isFunction(checkType) || !checkType(value))) {\n    return createMessageWith(Model.ERROR_WRONG_TYPE);\n  } // validate string format\n\n\n  if (value && field.type === 'string') {\n    var error = validateString(field, value);\n\n    if (error) {\n      return error;\n    }\n  } // check pre set values (enum)\n\n\n  if (isDefined && field.values && !oktaUnderscore.contains(field.values, value)) {\n    return createMessageWith(Model.ERROR_NOT_ALLOWED);\n  } // check validate method\n\n\n  if (oktaUnderscore.isFunction(field.validate)) {\n    var result = field.validate(value);\n\n    if (oktaUnderscore.isString(result) && result) {\n      return createMessageWith(result);\n    } else if (result === false) {\n      return createMessageWith(Model.ERROR_INVALID);\n    }\n  } // check array items\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n  if (isDefined && field.type === 'array' && (errorMessage = validateArrayField(field, value))) {\n    return createMessageWith(errorMessage);\n  }\n}\n\nfunction validateArrayField(field, arr) {\n  if (field.minItems && arr.length < field.minItems) {\n    return 'model.validation.field.array.minItems';\n  } else if (field.maxItems && arr.length > field.maxItems) {\n    return 'model.validation.field.array.maxItems';\n  } else if (field.uniqueItems && arr.length > oktaUnderscore.uniq(arr).length) {\n    return Model.ERROR_IARRAY_UNIQUE;\n  } else if (field.items) {\n    /* eslint max-depth: [2, 3] */\n    var arrayField = normalizeSchemaDef(field.items, 'placeholder');\n\n    for (var i = 0; i < arr.length; i++) {\n      var value = arr[i];\n      var error = validateField(arrayField, value);\n\n      if (error) {\n        return error['placeholder'];\n      }\n    }\n  }\n}\n\nconst props =\n/** @lends src/framework/Model.prototype */\n{\n  /**\n     * Pass props as an object to extend, describing the observable properties of your model. The props\n     * properties should not be set on an instance, as this won't define new properties, they should only be passed to\n     * extend.\n     * Properties can be defined in three different ways:\n     *\n     * - As a string with the expected dataType. One of string, number, boolean, array, object, date, or any.\n     * Eg: `name: 'string'`.\n     * - An array of `[dataType, required, default]`\n     * - An object `{type: 'string', format: '', required: true, value: '', values: [], validate: function() {}`\n     *   - `value` will be the value that the property will be set to if it is undefined, either by not being set during\n     *   initialization, or by being explicitly set to undefined.\n     *   - `format` is a json-schame derived string format. Supported formats are: `email`, `uri`, `hostname` and `ipv4`.\n     *   - If `required` is true, one of two things will happen. If a default is set for the property, the property will\n     *   start with that value. If a default is not set for the property, validation will fail\n     *   - If `values` array is passed, then you'll be able to change a property to one of those values only.\n     *   - If `validate` is defined, it should return false or a custom message string when the validation fails.\n     *   - If the type is defined as `array`, the array elements could be defined by `minItems` (Number),\n     *   `uniqueItems` (Boolean) and `items` (a field definition such as this one that will validate each array member)\n     *   To the `validate` method\n     *   - Trying to set a property to an invalid type will raise an exception.\n     *\n     * @type {Mixed|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     name: 'string',\n     *     age: 'number',\n     *     paying: ['boolean', true, false], //required attribute, defaulted to false\n     *     type: {\n     *       type: 'string',\n     *       values: ['regular-hero', 'super-hero', 'mega-hero']\n     *     },\n     *     likes: {\n     *       type: 'string',\n     *       validate: function (value) {\n     *         return /^[\\w]+ing$/.test(value)\n     *       }\n     *     }\n     *   }\n     * });\n     */\n  props: {},\n\n  /**\n     * Derived properties (also known as computed properties) are properties of the model that depend on the\n     * other (props, local or even derived properties to determine their value. Best demonstrated with an example:\n     *\n     * Each derived property, is defined as an object with the current properties:\n     *\n     * - `deps` {Array} - An array of property names which the derived property depends on.\n     * - `fn` {Function} - A function which returns the value of the computed property. It is called in the context of\n     * the current object, so that this is set correctly.\n     * - `cache` {Boolean} -  - Whether to cache the property. Uncached properties are computed every time they are\n     * accessed. Useful if it depends on the current time for example. Defaults to `true`.\n     *\n     * Derived properties are retrieved and fire change events just like any other property. They cannot be set\n     * directly.\n     * @type {Object|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     firstName: 'string',\n     *     lastName: 'string'\n     *   },\n     *   derived: {\n     *     fullName: {\n     *       deps: ['firstName', 'lastName'],\n     *       fn: function (firstName, lastName) {\n     *         return firstName + ' ' + lastName;\n     *       }\n     *     }\n     *   }\n     * });\n     *\n     * var person = new Person({ firstName: 'Phil', lastName: 'Roberts' })\n     * console.log(person.get('fullName')) //=> \"Phil Roberts\"\n     *\n     * person.set('firstName', 'Bob');\n     * console.log(person.get('fullName')) //=> \"Bob Roberts\"\n     */\n  derived: {},\n\n  /**\n     * local properties are defined and work in exactly the same way as {@link src/framework/Model#props|props}, but generally only exist for\n     * the lifetime of the page.\n     * They would not typically be persisted to the server, and are not returned by calls to {@link src/framework/Model#toJSON|toJSON}.\n     *\n     * @type {Object|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     name: 'string',\n     *   },\n     *   local: {\n     *     isLoggedIn: 'boolean'\n     *   }\n     * );\n     */\n  local: {},\n\n  /**\n     * Flatten the payload into dot notation string keys:\n     *\n     * @type {Boolean|Function}\n     * @example\n     * var Person = Model.extend({\n     *   props: {\n     *     'profile.fname': 'string',\n     *     'profile.lname': 'string',\n     *     'profile.languages': 'object'\n     *   },\n     *   flat: true\n     * });\n     * var person = new Person({'profile': {\n     *                            'fname': 'John',\n     *                            'lname': 'Doe',\n     *                            'languages': {name: \"English\", value: \"EN\"}\n     *                         }}, {parse: true});\n     * person.get('profile'); //=> undefined\n     * person.get('profile.fname'); //=> 'John'\n     * person.get('profile.lname'); //=> 'Doe'\n     * person.get('profile.languages'); //=> {name: \"English\", value: \"EN\"}\n     * person.get('profile.languages.name'); //=> undefined\n     * person.toJSON(); //=> {'profile': {'fname': 'John'} }\n     */\n  flat: true,\n\n  /**\n     * @deprecated\n     * @alias Backbone.Model#defaults\n     */\n  defaults: {},\n  // FIXME: preinitialize takes parameter `attributes` and `options`, which inherit from constructor.\n  preinitialize: function (options, ...rest) {\n    this.options = options || {};\n    var schema = this['__schema__'] = {};\n    var objectTypeFields = [];\n    schema.computedProperties = {};\n    schema.props = oktaUnderscore.clone(oktaUnderscore.result(this, 'props') || {});\n    schema.derived = oktaUnderscore.clone(oktaUnderscore.result(this, 'derived') || {});\n    schema.local = oktaUnderscore.clone(oktaUnderscore.result(this, 'local') || {});\n    var defaults = {};\n    oktaUnderscore.each(oktaUnderscore.extend({}, schema.props, schema.local), function (options, name) {\n      var schemaDef = normalizeSchemaDef(options, name);\n\n      if (!oktaUnderscore.isUndefined(schemaDef.value)) {\n        defaults[name] = schemaDef.value;\n      }\n\n      if (schemaDef.type === 'object') {\n        objectTypeFields.push(name);\n      }\n    }, this);\n\n    if (oktaUnderscore.size(defaults)) {\n      var localDefaults = oktaUnderscore.result(this, 'defaults');\n\n      this.defaults = function () {\n        return oktaUnderscore.defaults({}, defaults, localDefaults);\n      };\n    } // override `validate`\n\n\n    this.validate = oktaUnderscore.wrap(this.validate, function (validate) {\n      var args = oktaUnderscore.rest(arguments);\n      var res = oktaUnderscore.extend(this._validateSchema.apply(this, args), validate.apply(this, args));\n      return oktaUnderscore.size(res) && res || undefined;\n    }); // override `parse`\n\n    this.parse = oktaUnderscore.wrap(this.parse, function (parse) {\n      var target = parse.apply(this, oktaUnderscore.rest(arguments));\n\n      if (oktaUnderscore.result(this, 'flat')) {\n        target = flatten(target, objectTypeFields);\n      }\n\n      return target;\n    });\n    Backbone.Model.prototype.preinitialize.call(this, options, ...rest);\n  },\n  // FIXME:\n  // constructor takes parameter `attributes` and `options`.\n  constructor: function () {\n    Backbone.Model.apply(this, arguments);\n    var schema = this['__schema__'];\n    oktaUnderscore.each(schema.derived, function (options, name) {\n      schema.computedProperties[name] = this.__getDerivedValue(name); // set initial value;\n\n      var deps = isModelPropertySchema(options) ? options.deps || [] : [];\n\n      if (deps.length) {\n        this.on('cache:clear change:' + deps.join(' change:'), function () {\n          var value = this.__getDerivedValue(name);\n\n          if (value !== schema.computedProperties[name]) {\n            schema.computedProperties[name] = value;\n            this.trigger('change:' + name, this, value);\n          }\n        }, this);\n      }\n    }, this);\n    this.on('sync', function () {\n      this.__syncedData = this.toJSON();\n    }, this);\n  },\n  validate: function () {},\n\n  /**\n     * Check if the schema settings allow this field to exist in the model\n     * @param  {String} key\n     * @return {Boolean}\n     */\n  allows: function (key) {\n    var schema = this['__schema__'];\n    var all = oktaUnderscore.extend({}, schema.props, schema.local);\n\n    if (!oktaUnderscore.has(all, key)) ;\n\n    return true;\n  },\n\n  /**\n     * Returns the schema for the specific property\n     *\n     * @param propName - The name of the property\n     * @returns {*} | null\n     */\n  getPropertySchema: function (propName) {\n    var schema = this['__schema__'];\n    return oktaUnderscore.reduce([schema.props, schema.local], function (result, options) {\n      return result || normalizeSchemaDef(options[propName], propName);\n    }, null);\n  },\n  set: function (key, val) {\n    var attrs;\n\n    if (typeof key === 'object') {\n      attrs = key;\n    } else {\n      (attrs = {})[key] = val;\n    } // Don't override a computed properties\n\n\n    oktaUnderscore.each(attrs, function (value, key) {\n      if (oktaUnderscore.has(this['__schema__'].derived, key)) {\n        throw new Error(`overriding derived properties is not supported: ${key}`);\n      }\n    }, this); // Schema validation\n\n    var errorFields = [];\n    oktaUnderscore.each(attrs, function (value, key) {\n      this.allows(key) || errorFields.push(key);\n    }, this);\n\n    if (errorFields.length) {\n      throw new Error(`field not allowed: ${errorFields.join(', ')}`);\n    }\n\n    return Backbone.Model.prototype.set.apply(this, arguments);\n  },\n  get: function (attr) {\n    var schema = this['__schema__'];\n\n    if (oktaUnderscore.has(schema.derived, attr)) {\n      if (schema.derived[attr].cache !== false) {\n        return schema.computedProperties[attr];\n      } else {\n        return this.__getDerivedValue(attr);\n      }\n    }\n\n    return Backbone.Model.prototype.get.apply(this, arguments);\n  },\n\n  /**\n     * Return a shallow copy of the model's attributes for JSON stringification.\n     * This can be used for persistence, serialization, or for augmentation before being sent to the server.\n     * The name of this method is a bit confusing, as it doesn't actually return a JSON string —\n     * but I'm afraid that it's the way that the JavaScript API for JSON.stringify works.\n     *\n     * See [Backbone.Model.toJSON](http://backbonejs.org/#Model-toJSON)\n     *\n     * @param  {Object} options\n     * @return {Object}\n     * @example\n     * var artist = new Model({\n     *   firstName: 'Wassily',\n     *   lastName: 'Kandinsky'\n     * });\n     *\n     * artist.set({birthday: 'December 16, 1866'});\n     * JSON.stringify(artist); //=> {'firstName':'Wassily','lastName':'Kandinsky','birthday':'December 16, 1866'}\n     */\n  toJSON: function (options) {\n    options || (options = {});\n    var res = oktaUnderscore.clone(Backbone.Model.prototype.toJSON.apply(this, arguments));\n    var schema = this['__schema__']; // cleanup local properties\n\n    if (!options.verbose) {\n      res = oktaUnderscore.omit(res, oktaUnderscore.keys(schema.local));\n    } else {\n      // add derived properties\n      oktaUnderscore.each(schema.derived, function (options, name) {\n        res[name] = this.get(name);\n      }, this);\n    }\n\n    if (this.flat) {\n      res = unflatten(res);\n    }\n\n    return res;\n  },\n\n  /**\n     * Removes all attributes from the model, including the id attribute.\n     * Fires a `\"change\"` event unless `silent` is passed as an option.\n     * Sets the default values to the model\n     * @param {Object} [options]\n     */\n  reset: function (options) {\n    this.clear(options);\n    this.set(oktaUnderscore.result(this, 'defaults'), options);\n  },\n\n  /**\n     * Is the data on the model has local modifications since the last sync event?\n     * @return {Boolean} is the model in sync with the server\n     */\n  isSynced: function () {\n    return oktaUnderscore.isEqual(this.__syncedData, this.toJSON());\n  },\n\n  /**\n     * validate a specific field in the model.\n     * @param  {String} key\n     * @return {Object} returns `{fieldName: errorMessage}` if invalid, otherwise undefined.\n     * @readonly\n     */\n  validateField: function (key) {\n    var schema = key && this.getPropertySchema(key);\n    return schema && validateField(schema, this.get(key));\n  },\n\n  /**\n     * Runs local schema validation. Invoked internally by {@link src/framework/Model#validate|validate}.\n     * @return {Object}\n     * @protected\n     */\n  _validateSchema: function () {\n    var schema = this['__schema__'];\n    return oktaUnderscore.reduce(oktaUnderscore.extend({}, schema.props, schema.local), function (memo, options, name) {\n      return oktaUnderscore.extend(memo, this.validateField(name) || {});\n    }, {}, this);\n  },\n  __getDerivedValue: function (name) {\n    var options = this['__schema__'].derived[name];\n\n    if (oktaUnderscore.isString(options)) {\n      var key = options;\n      options = {\n        deps: [key],\n        fn: function () {\n          return this.get(key);\n        }\n      };\n    }\n\n    var deps = options.deps || [];\n    return options.fn.apply(this, oktaUnderscore.map(deps, this.get, this));\n  }\n};\nModel = Backbone.Model.extend(props, statics);\n/**\n * It's used for distinguishing the ambiguity from _.isFunction()\n * which returns True for both a JavaScript Class constructor function\n * and normal function. With this flag, we can tell a function is actually\n * a Model Class.\n * This flag is added in order to support the type of a parameter can be\n * either a Class or pure function that returns a Class.\n */\n\nModel.isCourageModel = true;\nvar FrameworkModel = Model;\n\nexport { FrameworkModel as default, isModelPropertySchema };\n"],"mappings":"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E;IAC5E,OAAOnC,KAAK,CAACM,mBAAmB;EAClC,CAAC,MAAM,IAAI+B,KAAK,CAAC2D,KAAK,EAAE;IACtB;IACA,IAAIC,UAAU,GAAGzD,kBAAkB,CAACH,KAAK,CAAC2D,KAAK,EAAE,aAAa,CAAC;IAE/D,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkE,GAAG,CAACxD,MAAM,EAAEV,CAAC,EAAE,EAAE;MACnC,IAAIX,KAAK,GAAG6E,GAAG,CAAClE,CAAC,CAAC;MAClB,IAAI4B,KAAK,GAAGiB,aAAa,CAAC2B,UAAU,EAAEnF,KAAK,CAAC;MAE5C,IAAIuC,KAAK,EAAE;QACT,OAAOA,KAAK,CAAC,aAAa,CAAC;MAC7B;IACF;EACF;AACF;AAEA,MAAM6C,KAAK,GACX;AACA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEA,KAAK,EAAE,CAAC,CAAC;EAET;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,EAAE,CAAC,CAAC;EAEX;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,KAAK,EAAE,CAAC,CAAC;EAET;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,IAAI,EAAE,IAAI;EAEV;AACF;AACA;AACA;EACEzD,QAAQ,EAAE,CAAC,CAAC;EACZ;E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","ignoreList":[]},"metadata":{},"sourceType":"module"}