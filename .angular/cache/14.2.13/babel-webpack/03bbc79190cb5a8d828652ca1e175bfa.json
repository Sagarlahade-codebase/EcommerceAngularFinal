{"ast":null,"code":"import FormController from '../util/FormController.js';\n\n/* eslint-disable max-depth */\nvar RefreshAuthStateController = FormController.extend({\n  className: 'refresh-auth-state',\n  Model: {},\n  Form: {\n    noButtonBar: true\n  },\n  preRender: function () {\n    const appState = this.options.appState;\n    const token = this.options.token;\n    this.model.startTransaction(function (authClient) {\n      appState.trigger('loading', true);\n      if (token) {\n        return authClient.tx.introspect({\n          stateToken: token\n        });\n      } // get stateToken from cookie\n      // currently only applies to old pipeline\n\n      if (authClient.tx.exists()) {\n        return authClient.tx.resume();\n      }\n      appState.trigger('navigate', '');\n    });\n  },\n  remove: function () {\n    this.options.appState.trigger('loading', false);\n    return FormController.prototype.remove.apply(this, arguments);\n  }\n});\nexport { RefreshAuthStateController as default };","map":{"version":3,"names":["FormController","RefreshAuthStateController","extend","className","Model","Form","noButtonBar","preRender","appState","options","token","model","startTransaction","authClient","trigger","tx","introspect","stateToken","exists","resume","remove","prototype","apply","arguments","default"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@okta/okta-signin-widget/dist/esm/src/v1/controllers/RefreshAuthStateController.js"],"sourcesContent":["import FormController from '../util/FormController.js';\n\n/* eslint-disable max-depth */\nvar RefreshAuthStateController = FormController.extend({\n  className: 'refresh-auth-state',\n  Model: {},\n  Form: {\n    noButtonBar: true\n  },\n  preRender: function () {\n    const appState = this.options.appState;\n    const token = this.options.token;\n    this.model.startTransaction(function (authClient) {\n      appState.trigger('loading', true);\n\n      if (token) {\n        return authClient.tx.introspect({\n          stateToken: token\n        });\n      } // get stateToken from cookie\n      // currently only applies to old pipeline\n\n\n      if (authClient.tx.exists()) {\n        return authClient.tx.resume();\n      }\n\n      appState.trigger('navigate', '');\n    });\n  },\n  remove: function () {\n    this.options.appState.trigger('loading', false);\n    return FormController.prototype.remove.apply(this, arguments);\n  }\n});\n\nexport { RefreshAuthStateController as default };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,2BAA2B;;AAEtD;AACA,IAAIC,0BAA0B,GAAGD,cAAc,CAACE,MAAM,CAAC;EACrDC,SAAS,EAAE,oBAAoB;EAC/BC,KAAK,EAAE,CAAC,CAAC;EACTC,IAAI,EAAE;IACJC,WAAW,EAAE;EACf,CAAC;EACDC,SAAS,EAAE,SAAAA,CAAA,EAAY;IACrB,MAAMC,QAAQ,GAAG,IAAI,CAACC,OAAO,CAACD,QAAQ;IACtC,MAAME,KAAK,GAAG,IAAI,CAACD,OAAO,CAACC,KAAK;IAChC,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAAC,UAAUC,UAAU,EAAE;MAChDL,QAAQ,CAACM,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;MAEjC,IAAIJ,KAAK,EAAE;QACT,OAAOG,UAAU,CAACE,EAAE,CAACC,UAAU,CAAC;UAC9BC,UAAU,EAAEP;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;MACF;;MAGA,IAAIG,UAAU,CAACE,EAAE,CAACG,MAAM,CAAC,CAAC,EAAE;QAC1B,OAAOL,UAAU,CAACE,EAAE,CAACI,MAAM,CAAC,CAAC;MAC/B;MAEAX,QAAQ,CAACM,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAClC,CAAC,CAAC;EACJ,CAAC;EACDM,MAAM,EAAE,SAAAA,CAAA,EAAY;IAClB,IAAI,CAACX,OAAO,CAACD,QAAQ,CAACM,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC;IAC/C,OAAOd,cAAc,CAACqB,SAAS,CAACD,MAAM,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;EAC/D;AACF,CAAC,CAAC;AAEF,SAAStB,0BAA0B,IAAIuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}