{"ast":null,"code":"import _asyncToGenerator from \"/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { OKTA_AUTH } from '@okta/okta-angular';\nimport { from, lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@okta/okta-auth-js\";\nexport class AuthInterceptorService {\n  constructor(oktaAuth) {\n    this.oktaAuth = oktaAuth;\n  }\n  intercept(request, next) {\n    return from(this.handleAccess(request, next));\n  }\n  handleAccess(request, next) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Only add an access token for secured endpoints\n      const securedEndpoints = ['http://localhost:8080/api/orders'];\n      if (securedEndpoints.some(url => request.urlWithParams.includes(url))) {\n        // get access token\n        const accessToken = _this.oktaAuth.getAccessToken();\n        // clone the request and add new header with access token\n        request = request.clone({\n          setHeaders: {\n            Authorization: 'Bearer ' + accessToken\n          }\n        });\n      }\n      return yield lastValueFrom(next.handle(request));\n    })();\n  }\n}\nAuthInterceptorService.ɵfac = function AuthInterceptorService_Factory(t) {\n  return new (t || AuthInterceptorService)(i0.ɵɵinject(OKTA_AUTH));\n};\nAuthInterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptorService,\n  factory: AuthInterceptorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpEvent","HttpHandler","HttpRequest","OKTA_AUTH","from","lastValueFrom","AuthInterceptorService","constructor","oktaAuth","intercept","request","next","handleAccess","_this","_asyncToGenerator","securedEndpoints","some","url","urlWithParams","includes","accessToken","getAccessToken","clone","setHeaders","Authorization","handle","i0","ɵɵinject","factory","ɵfac","providedIn"],"sources":["/Users/tushar/Desktop/fullstack-angular-and-springboot-master/source-code/ecommerce-project-release-3.0/09-security-order-history-secure-backend-and-frontend/03-frontend/angular-ecommerce/src/app/services/auth-interceptor.service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { OKTA_AUTH } from '@okta/okta-angular';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { from, lastValueFrom, Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptorService implements HttpInterceptor {\n\n  constructor(@Inject(OKTA_AUTH) private oktaAuth: OktaAuth) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return from(this.handleAccess(request, next));\n  }\n\n  private async handleAccess(request: HttpRequest<any>, next: HttpHandler): Promise<HttpEvent<any>> {\n\n    // Only add an access token for secured endpoints\n    const securedEndpoints = ['http://localhost:8080/api/orders'];\n\n    if (securedEndpoints.some(url => request.urlWithParams.includes(url))) {\n\n      // get access token\n      const accessToken = this.oktaAuth.getAccessToken();\n\n      // clone the request and add new header with access token\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + accessToken\n        }\n      });\n    }\n\n    return await lastValueFrom(next.handle(request));\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,WAAW,EAAmBC,WAAW,QAAQ,sBAAsB;AAE3F,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SAASC,IAAI,EAAEC,aAAa,QAAoB,MAAM;;;AAMtD,OAAM,MAAOC,sBAAsB;EAEjCC,YAAuCC,QAAkB;IAAlB,KAAAA,QAAQ,GAARA,QAAQ;EAAc;EAE7DC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IACpD,OAAOP,IAAI,CAAC,IAAI,CAACQ,YAAY,CAACF,OAAO,EAAEC,IAAI,CAAC,CAAC;EAC/C;EAEcC,YAAYA,CAACF,OAAyB,EAAEC,IAAiB;IAAA,IAAAE,KAAA;IAAA,OAAAC,iBAAA;MAErE;MACA,MAAMC,gBAAgB,GAAG,CAAC,kCAAkC,CAAC;MAE7D,IAAIA,gBAAgB,CAACC,IAAI,CAACC,GAAG,IAAIP,OAAO,CAACQ,aAAa,CAACC,QAAQ,CAACF,GAAG,CAAC,CAAC,EAAE;QAErE;QACA,MAAMG,WAAW,GAAGP,KAAI,CAACL,QAAQ,CAACa,cAAc,EAAE;QAElD;QACAX,OAAO,GAAGA,OAAO,CAACY,KAAK,CAAC;UACtBC,UAAU,EAAE;YACVC,aAAa,EAAE,SAAS,GAAGJ;;SAE9B,CAAC;;MAGJ,aAAaf,aAAa,CAACM,IAAI,CAACc,MAAM,CAACf,OAAO,CAAC,CAAC;IAAC;EACnD;;;mBA3BWJ,sBAAsB,EAAAoB,EAAA,CAAAC,QAAA,CAEbxB,SAAS;AAAA;;SAFlBG,sBAAsB;EAAAsB,OAAA,EAAtBtB,sBAAsB,CAAAuB,IAAA;EAAAC,UAAA,EAFrB;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module"}